C51 COMPILER V9.51   CYFITTER_CFG                                                          05/01/2014 23:42:21 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE CYFITTER_CFG
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\cyfitter_cfg.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.lst)
                    - CD DB NOIP OT(0,SIZE) DF(DEBUG) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.obj)

line level    source

   1          /*******************************************************************************
   2          * FILENAME: cyfitter_cfg.c
   3          * PSoC Creator 3.0 Component Pack 7
   4          *
   5          * Description:
   6          * This file is automatically generated by PSoC Creator with device 
   7          * initialization code.  Except for the user defined sections in
   8          * CyClockStartupError(), this file should not be modified.
   9          *
  10          ********************************************************************************
  11          * Copyright 2013, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions, 
  13          * disclaimers, and limitations in the end user license agreement accompanying 
  14          * the software package with which this file was provided.
  15          ********************************************************************************/
  16          
  17          #include <string.h>
  18          #include <cytypes.h>
  19          #include <cydevice_trm.h>
  20          #include <cyfitter.h>
  21          #include <CyLib.h>
  22          #include <cyfitter_cfg.h>
  23          
  24          
  25          #if defined(__C51__) || defined(__CX51__)
  26                  #define CYPACKED
  27                  #define CYPACKED_ATTR
  28                  #define CYALIGNED
  29                  
  30              #define CY_CFG_UNUSED
  31                  #define CY_CFG_MEMORY_BARRIER() do { } while (0)
  32          
  33          
  34          
  35                  #define CYMEMZERO(a,c) cymemzero((a),(c))
  36                  #define CYCONFIGCPY(d,s,c) cyconfigcpy((c),(s),(d))
  37                  #define CYCONFIGCPYCODE(d,s,c) cyconfigcpycode((c),(s),(d))
  38          #else
                      #error Unsupported toolchain
              #endif
  41          
  42          
  43          
  44          /* Clock startup error codes                                                   */
  45          #define CYCLOCKSTART_NO_ERROR    0u
  46          #define CYCLOCKSTART_XTAL_ERROR  1u
  47          #define CYCLOCKSTART_32KHZ_ERROR 2u
  48          #define CYCLOCKSTART_PLL_ERROR   3u
  49          
  50          #ifdef CY_NEED_CYCLOCKSTARTUPERROR
              /*******************************************************************************
              * Function Name: CyClockStartupError
              ********************************************************************************
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/01/2014 23:42:21 PAGE 2   

              * Summary:
              *  If an error is encountered during clock configuration (crystal startup error,
              *  PLL lock error, etc.), the system will end up here.  Unless reimplemented by
              *  the customer, this function will stop in an infinite loop.
              *
              * Parameters:
              *   void
              *
              * Return:
              *   void
              *
              *******************************************************************************/
              CY_CFG_UNUSED
              static void CyClockStartupError(uint8 errorCode);
              CY_CFG_UNUSED
              static void CyClockStartupError(uint8 errorCode)
              {
                  /* To remove the compiler warning if errorCode not used.                */
                  errorCode = errorCode;
              
                  /* `#START CyClockStartupError` */
              
                  /* If we have a clock startup error (bad MHz crystal, PLL lock, etc.),  */
                  /* we will end up here to allow the customer to implement something to  */
                  /* deal with the clock condition.                                       */
              
                  /* `#END` */
              
                  /* If nothing else, stop here since the clocks have not started         */
                  /* correctly.                                                           */
                  while(1) {}
              }
              #endif
  87          
  88          #define cfg_byte_table ((const void CYFAR *)0x080000u)
  89          /* IOPINS0_0 Address: CYREG_PRT0_DR Size (bytes): 10 */
  90          #define BS_IOPINS0_0_VAL ((const uint8 CYFAR *)0x000805CCu)
  91          
  92          /* IOPINS0_8 Address: CYREG_PRT15_DR Size (bytes): 10 */
  93          #define BS_IOPINS0_8_VAL ((const uint8 CYFAR *)0x000805D8u)
  94          
  95          /* IOPINS0_1 Address: CYREG_PRT1_DR Size (bytes): 10 */
  96          #define BS_IOPINS0_1_VAL ((const uint8 CYFAR *)0x000805E4u)
  97          
  98          /* IOPINS0_2 Address: CYREG_PRT2_DM0 Size (bytes): 8 */
  99          #define BS_IOPINS0_2_VAL ((const uint8 CYFAR *)0x000805F0u)
 100          
 101          /* CYDEV_CLKDIST_ACFG0_CFG0 Address: CYREG_CLKDIST_ACFG0_CFG0 Size (bytes): 4 */
 102          #define BS_CYDEV_CLKDIST_ACFG0_CFG0_VAL ((const uint8 CYFAR *)0x000805F8u)
 103          
 104          
 105          /*******************************************************************************
 106          * Function Name: ClockSetup
 107          ********************************************************************************
 108          *
 109          * Summary:
 110          *  Performs the initialization of all of the clocks in the device based on the
 111          *  settings in the Clock tab of the DWR.  This includes enabling the requested
 112          *  clocks and setting the necessary dividers to produce the desired frequency. 
 113          *
 114          * Parameters:
 115          *  void
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/01/2014 23:42:21 PAGE 3   

 116          *
 117          * Return:
 118          *  void
 119          *
 120          *******************************************************************************/
 121          static void ClockSetup(void);
 122          static void ClockSetup(void)
 123          {
 124   1              uint8 x32TrHold;
 125   1              uint32 timeout;
 126   1      
 127   1              x32TrHold = CY_GET_REG8((void CYXDATA *)CYREG_X32_TR);
 128   1      
 129   1              /* Configure Digital Clocks based on settings from Clock DWR */
 130   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG0_CFG0), 0x0000u);
 131   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG0_CFG0 + 0x2u), 0x50u);
 132   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG1_CFG0), 0x5DBFu);
 133   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG1_CFG0 + 0x2u), 0x19u);
 134   1      
 135   1              /* Configure Analog Clocks based on settings from Clock DWR */
 136   1              CYCONFIGCPY((void CYFAR *)(CYREG_CLKDIST_ACFG0_CFG0), (const void CYFAR *)(BS_CYDEV_CLKDIST_ACFG0_CFG0_VA
             -L), 4u);
 137   1      
 138   1              /* Configure ILO based on settings from Clock DWR */
 139   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_ILO_CR0), 0x06u);
 140   1      
 141   1              /* Configure XTAL 32kHz based on settings from Clock DWR */
 142   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_X32_TST), 0xF3u);
 143   1              CY_SET_REG8((void CYXDATA *)(CYREG_X32_TR), 0x03u);
 144   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_X32_CFG), 0x84u);
 145   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_X32_CR), 0x05u);
 146   1              /* Wait up to 1000000us for the XTAL 32kHz to lock */
 147   1              for (timeout = 1000000u / 10u; (timeout > 0u) && ((CY_GET_REG8((void CYXDATA *)CYREG_SLOWCLK_X32_CR) & 0x
             -20u) == 0u); timeout--)
 148   1              { 
 149   2                      
 150   2                      CyDelayCycles(10u * 48u); /* Delay 10us based on 48MHz clock */
 151   2              }
 152   1              CY_SET_REG8((void CYXDATA *)(CYREG_X32_TR), (x32TrHold));
 153   1      
 154   1              /* Configure IMO based on settings from Clock DWR */
 155   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_IMO_CR), 0x52u);
 156   1              CY_SET_REG8((void CYXDATA *)(CYREG_IMO_TR1), (CY_GET_XTND_REG8((void CYFAR *)CYREG_FLSHID_CUST_TABLES_IMO
             -_USB)));
 157   1      
 158   1              /* Configure Bus/Master Clock based on settings from Clock DWR */
 159   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_MSTR0), 0x0000u);
 160   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x07u);
 161   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG0), 0x00u);
 162   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG2), 0x48u);
 163   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00u);
 164   1      
 165   1              /* Configure USB Clock based on settings from Clock DWR */
 166   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_UCFG), 0x00u);
 167   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_LD), 0x02u);
 168   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DLY1), 0x04u);
 169   1      
 170   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG2), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG2) | 0x03u
             -)));
 171   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG1), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG1) | 0x01u
             -)));
 172   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG0), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x80u
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/01/2014 23:42:21 PAGE 4   

             -)));
 173   1      }
 174          
 175          
 176          /* Analog API Functions */
 177          
 178          
 179          /*******************************************************************************
 180          * Function Name: AnalogSetDefault
 181          ********************************************************************************
 182          *
 183          * Summary:
 184          *  Sets up the analog portions of the chip to default values based on chip
 185          *  configuration options from the project.
 186          *
 187          * Parameters:
 188          *  void
 189          *
 190          * Return:
 191          *  void
 192          *
 193          *******************************************************************************/
 194          static void AnalogSetDefault(void);
 195          static void AnalogSetDefault(void)
 196          {
 197   1              uint8 bg_xover_inl_trim = CY_GET_XTND_REG8((void CYFAR *)(CYREG_FLSHID_MFG_CFG_BG_XOVER_INL_TRIM + 1u));
 198   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT0), (bg_xover_inl_trim & 0x07u));
 199   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT1), ((bg_xover_inl_trim >> 4) & 0x0Fu));
 200   1              CY_SET_REG8((void CYXDATA *)CYREG_PRT0_AG, 0x01u);
 201   1              CY_SET_REG8((void CYXDATA *)CYREG_DSM0_SW0, 0x10u);
 202   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, 0x44u);
 203   1      }
 204          
 205          
 206          /*******************************************************************************
 207          * Function Name: SetAnalogRoutingPumps
 208          ********************************************************************************
 209          *
 210          * Summary:
 211          * Enables or disables the analog pumps feeding analog routing switches.
 212          * Intended to be called at startup, based on the Vdda system configuration;
 213          * may be called during operation when the user informs us that the Vdda voltage
 214          * crossed the pump threshold.
 215          *
 216          * Parameters:
 217          *  enabled - 1 to enable the pumps, 0 to disable the pumps
 218          *
 219          * Return:
 220          *  void
 221          *
 222          *******************************************************************************/
 223          void SetAnalogRoutingPumps(uint8 enabled)
 224          {
 225   1              uint8 regValue = CY_GET_REG8((void CYXDATA *)CYREG_PUMP_CR0);
 226   1              if (enabled != 0u)
 227   1              {
 228   2                      regValue |= 0x22u;
 229   2              }
 230   1              else
 231   1              {
 232   2                      regValue &= (uint8)~0x22u;
 233   2              }
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/01/2014 23:42:21 PAGE 5   

 234   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, regValue);
 235   1      }
 236          
 237          #define CY_AMUX_UNUSED CYREG_BOOST_SR
 238          /* This is an implementation detail of the AMux. Code that depends on it may be
 239             incompatible with other versions of PSoC Creator. */
 240          uint8 CYXDATA * const CYCODE ADC_AMux__addrTable[2] = {
 241                  (uint8 CYXDATA *)CYREG_DSM0_SW3, 
 242                  (uint8 CYXDATA *)CY_AMUX_UNUSED, 
 243          };
 244          
 245          /* This is an implementation detail of the AMux. Code that depends on it may be
 246             incompatible with other versions of PSoC Creator. */
 247          const uint8 CYCODE ADC_AMux__maskTable[2] = {
 248                  0x40u, 
 249                  0x00u, 
 250          };
 251          
 252          /*******************************************************************************
 253          * Function Name: ADC_AMux_Set
 254          ********************************************************************************
 255          * Summary:
 256          *  This function is used to set a particular channel as active on the AMux.
 257          *
 258          * Parameters:  
 259          *   channel - The mux channel input to set as active
 260          *
 261          * Return:
 262          *   void
 263          *
 264          *******************************************************************************/
 265          void ADC_AMux_Set(uint8 channel)
 266          {
 267   1              if (channel < 2)
 268   1              {
 269   2                      *ADC_AMux__addrTable[channel] |= ADC_AMux__maskTable[channel];
 270   2              }
 271   1      }
 272          
 273          /*******************************************************************************
 274          * Function Name: ADC_AMux_Unset
 275          ********************************************************************************
 276          * Summary:
 277          *  This function is used to clear a particular channel from being active on the
 278          *  AMux.
 279          *
 280          * Parameters:  
 281          *   channel - The mux channel input to mark inactive
 282          *
 283          * Return:
 284          *   void
 285          *
 286          *******************************************************************************/
 287          void ADC_AMux_Unset(uint8 channel)
 288          {
 289   1              if (channel < 2)
 290   1              {
 291   2                      *ADC_AMux__addrTable[channel] &= (uint8)~ADC_AMux__maskTable[channel];
 292   2              }
 293   1      }
 294          
 295          
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/01/2014 23:42:21 PAGE 6   

 296          
 297          /*******************************************************************************
 298          * Function Name: cyfitter_cfg
 299          ********************************************************************************
 300          * Summary:
 301          *  This function is called by the start-up code for the selected device. It
 302          *  performs all of the necessary device configuration based on the design
 303          *  settings.  This includes settings from the Design Wide Resources (DWR) such
 304          *  as Clocks and Pins as well as any component configuration that is necessary.
 305          *
 306          * Parameters:  
 307          *   void
 308          *
 309          * Return:
 310          *   void
 311          *
 312          *******************************************************************************/
 313          
 314          void cyfitter_cfg(void)
 315          {
 316   1              /* Enable/Disable Debug functionality based on settings from System DWR */
 317   1              CY_SET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG, (CY_GET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG) | 
             -0x05u));
 318   1      
 319   1              {
 320   2      
 321   2                      CYPACKED typedef struct {
 322   2                              void CYFAR *address;
 323   2                              uint16 size;
 324   2                      } CYPACKED_ATTR cfg_memset_t;
 325   2      
 326   2                      static const cfg_memset_t CYCODE cfg_memset_list [] = {
 327   2                              /* address, size */
 328   2                              {(void CYFAR *)(CYREG_PRT3_DR), 64u},
 329   2                              {(void CYFAR *)(CYREG_PRT12_DR), 16u},
 330   2                              {(void CYFAR *)(CYDEV_UCFG_B0_P0_U0_BASE), 4096u},
 331   2                              {(void CYFAR *)(CYDEV_UCFG_B1_P2_U0_BASE), 2048u},
 332   2                              {(void CYFAR *)(CYDEV_UCFG_DSI0_BASE), 2560u},
 333   2                              {(void CYFAR *)(CYDEV_UCFG_DSI12_BASE), 512u},
 334   2                              {(void CYFAR *)(CYREG_BCTL0_MDCLK_EN), 32u},
 335   2                      };
 336   2      
 337   2                      uint8 CYDATA i;
 338   2      
 339   2                      /* Zero out critical memory blocks before beginning configuration */
 340   2                      for (i = 0u; i < (sizeof(cfg_memset_list)/sizeof(cfg_memset_list[0])); i++)
 341   2                      {
 342   3                              const cfg_memset_t CYCODE * CYDATA ms = &cfg_memset_list[i];
 343   3                              CYMEMZERO(ms->address, ms->size);
 344   3                      }
 345   2      
 346   2                      cfg_write_bytes(cfg_byte_table);
 347   2      
 348   2                      /* Perform normal device configuration. Order is not critical for these items. */
 349   2                      CY_SET_REG8((void CYXDATA *)(CYREG_DSM0_CR3), 0x0Au);
 350   2      
 351   2                      /* Enable digital routing */
 352   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL
             -) | 0x02u);
 353   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL
             -) | 0x02u);
 354   2      
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/01/2014 23:42:21 PAGE 7   

 355   2                      /* Enable UDB array */
 356   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x40u);
 357   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2, CY_GET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2) | 0x10u)
             -;
 358   2              }
 359   1      
 360   1              /* Perform second pass device configuration. These items must be configured in specific order after the r
             -egular configuration is done. */
 361   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT0_DR), (const void CYFAR *)(BS_IOPINS0_0_VAL), 10u);
 362   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT15_DR), (const void CYFAR *)(BS_IOPINS0_8_VAL), 10u);
 363   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT1_DR), (const void CYFAR *)(BS_IOPINS0_1_VAL), 10u);
 364   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT2_DM0), (const void CYFAR *)(BS_IOPINS0_2_VAL), 8u);
 365   1              CY_SET_REG8((void CYXDATA *)(CYREG_INTC_CSR_EN), 0x01u);
 366   1      
 367   1              /* Switch Boost to the precision bandgap reference from its internal reference */
 368   1              CY_SET_REG8((void CYXDATA *)CYREG_BOOST_CR2, (CY_GET_REG8((void CYXDATA *)CYREG_BOOST_CR2) | 0x08u));
 369   1              if (CYDEV_CHIP_REV_ACTUAL < 5u)
 370   1              {
 371   2                      CY_SET_REG8((void CYXDATA *)CYREG_PWRSYS_WAKE_TR2, 0x3Au);
 372   2              }
 373   1      
 374   1      
 375   1              /* Set Flash Cycles based on max possible frequency in case a glitch occurs during ClockSetup(). */
 376   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xF1u : 0xC0u));
 377   1              /* Setup clocks based on selections from Clock DWR */
 378   1              ClockSetup();
 379   1              /* Set Flash Cycles based on newly configured 24.00MHz Bus Clock. */
 380   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xB1u : 0x80u));
 381   1      
 382   1              /* Perform basic analog initialization to defaults */
 383   1              AnalogSetDefault();
 384   1      
 385   1              /* Configure alternate active mode */
 386   1              CYCONFIGCPY((void CYFAR *)CYDEV_PM_STBY_BASE, (const void CYFAR *)CYDEV_PM_ACT_BASE, 14u);
 387   1              CY_SET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0) & (uint8)
             -~0x02u);        /* Disable CPU */
 388   1      }
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/01/2014 23:42:21 PAGE 8   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION ClockSetup (BEGIN)
                                           ; SOURCE LINE # 122
                                           ; SOURCE LINE # 123
                                           ; SOURCE LINE # 127
0000 904698            MOV     DPTR,#04698H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 900000      R     MOV     DPTR,#x32TrHold
0008 EF                MOV     A,R7
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 130
000A 7B00              MOV     R3,#00H
000C 7A40              MOV     R2,#040H
000E 7980              MOV     R1,#080H
0010 7D00              MOV     R5,#00H
0012 7C00              MOV     R4,#00H
0014 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 131
0017 904082            MOV     DPTR,#04082H
001A 7450              MOV     A,#050H
001C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 132
001D 7B00              MOV     R3,#00H
001F 7A40              MOV     R2,#040H
0021 7984              MOV     R1,#084H
0023 7DBF              MOV     R5,#0BFH
0025 7C5D              MOV     R4,#05DH
0027 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 133
002A 904086            MOV     DPTR,#04086H
002D 7419              MOV     A,#019H
002F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 136
0030 7B08              MOV     R3,#08H
0032 7A05              MOV     R2,#05H
0034 79F8              MOV     R1,#0F8H
0036 C003              PUSH    AR3
0038 C002              PUSH    AR2
003A C001              PUSH    AR1
003C 7B00              MOV     R3,#00H
003E 7A41              MOV     R2,#041H
0040 7900              MOV     R1,#00H
0042 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0045 120000      E     LCALL   ?C?PSTXDATA
0048 D001              POP     AR1
004A D002              POP     AR2
004C D003              POP     AR3
004E 7F04              MOV     R7,#04H
0050 7E00              MOV     R6,#00H
0052 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 139
0055 904300            MOV     DPTR,#04300H
0058 7406              MOV     A,#06H
005A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 142
005B 90430A            MOV     DPTR,#0430AH
005E 74F3              MOV     A,#0F3H
0060 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 143
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/01/2014 23:42:21 PAGE 9   

0061 904698            MOV     DPTR,#04698H
0064 7403              MOV     A,#03H
0066 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 144
0067 904309            MOV     DPTR,#04309H
006A 7484              MOV     A,#084H
006C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 145
006D 904308            MOV     DPTR,#04308H
0070 7405              MOV     A,#05H
0072 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 147
0073 7FA0              MOV     R7,#0A0H
0075 7E86              MOV     R6,#086H
0077 7D01              MOV     R5,#01H
0079 7C00              MOV     R4,#00H
007B 900000      R     MOV     DPTR,#timeout
007E 120000      E     LCALL   ?C?LSTXDATA
0081         ?C0001:
0081 900000      R     MOV     DPTR,#timeout
0084 120000      E     LCALL   ?C?LLDXDATA
0087 D3                SETB    C
0088 EF                MOV     A,R7
0089 9400              SUBB    A,#00H
008B EE                MOV     A,R6
008C 9400              SUBB    A,#00H
008E 4033              JC      ?C0002
0090 904308            MOV     DPTR,#04308H
0093 E0                MOVX    A,@DPTR
0094 FF                MOV     R7,A
0095 EF                MOV     A,R7
0096 5420              ANL     A,#020H
0098 FF                MOV     R7,A
0099 7E00              MOV     R6,#00H
009B EF                MOV     A,R7
009C 4E                ORL     A,R6
009D 7024              JNZ     ?C0002
                                           ; SOURCE LINE # 148
                                           ; SOURCE LINE # 150
009F 7FE0              MOV     R7,#0E0H
00A1 7E01              MOV     R6,#01H
00A3 7D00              MOV     R5,#00H
00A5 7C00              MOV     R4,#00H
00A7 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 151
00AA         ?C0003:
00AA 900000      R     MOV     DPTR,#timeout
00AD 120000      E     LCALL   ?C?LLDXDATA
00B0 7BFF              MOV     R3,#0FFH
00B2 7AFF              MOV     R2,#0FFH
00B4 79FF              MOV     R1,#0FFH
00B6 78FF              MOV     R0,#0FFH
00B8 120000      E     LCALL   ?C?LADD
00BB 900000      R     MOV     DPTR,#timeout
00BE 120000      E     LCALL   ?C?LSTXDATA
00C1 80BE              SJMP    ?C0001
00C3         ?C0002:
                                           ; SOURCE LINE # 152
00C3 900000      R     MOV     DPTR,#x32TrHold
00C6 E0                MOVX    A,@DPTR
00C7 FF                MOV     R7,A
00C8 904698            MOV     DPTR,#04698H
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/01/2014 23:42:21 PAGE 10  

00CB EF                MOV     A,R7
00CC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 155
00CD 904200            MOV     DPTR,#04200H
00D0 7452              MOV     A,#052H
00D2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 156
00D3 7B0C              MOV     R3,#0CH
00D5 7A01              MOV     R2,#01H
00D7 790F              MOV     R1,#0FH
00D9 120000      E     LCALL   _cyread8
00DC 9046A1            MOV     DPTR,#046A1H
00DF EF                MOV     A,R7
00E0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 159
00E1 7B00              MOV     R3,#00H
00E3 7A40              MOV     R2,#040H
00E5 7904              MOV     R1,#04H
00E7 7D00              MOV     R5,#00H
00E9 7C00              MOV     R4,#00H
00EB 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 160
00EE 904004            MOV     DPTR,#04004H
00F1 7407              MOV     A,#07H
00F3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 161
00F4 904006            MOV     DPTR,#04006H
00F7 E4                CLR     A
00F8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 162
00F9 904008            MOV     DPTR,#04008H
00FC 7448              MOV     A,#048H
00FE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 163
00FF 904004            MOV     DPTR,#04004H
0102 E4                CLR     A
0103 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 166
0104 904009            MOV     DPTR,#04009H
0107 E4                CLR     A
0108 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 167
0109 904001            MOV     DPTR,#04001H
010C 7402              MOV     A,#02H
010E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 168
010F 90400B            MOV     DPTR,#0400BH
0112 7404              MOV     A,#04H
0114 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 170
0115 9043A2            MOV     DPTR,#043A2H
0118 E0                MOVX    A,@DPTR
0119 FF                MOV     R7,A
011A EF                MOV     A,R7
011B 4403              ORL     A,#03H
011D FF                MOV     R7,A
011E 9043A2            MOV     DPTR,#043A2H
0121 EF                MOV     A,R7
0122 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 171
0123 9043A1            MOV     DPTR,#043A1H
0126 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/01/2014 23:42:21 PAGE 11  

0127 FF                MOV     R7,A
0128 EF                MOV     A,R7
0129 4401              ORL     A,#01H
012B FF                MOV     R7,A
012C 9043A1            MOV     DPTR,#043A1H
012F EF                MOV     A,R7
0130 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 172
0131 9043A0            MOV     DPTR,#043A0H
0134 E0                MOVX    A,@DPTR
0135 FF                MOV     R7,A
0136 EF                MOV     A,R7
0137 4480              ORL     A,#080H
0139 FF                MOV     R7,A
013A 9043A0            MOV     DPTR,#043A0H
013D EF                MOV     A,R7
013E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 173
013F         ?C0004:
013F 22                RET     
             ; FUNCTION ClockSetup (END)

             ; FUNCTION AnalogSetDefault (BEGIN)
                                           ; SOURCE LINE # 195
                                           ; SOURCE LINE # 196
                                           ; SOURCE LINE # 197
0000 7B0C              MOV     R3,#0CH
0002 7A01              MOV     R2,#01H
0004 79CF              MOV     R1,#0CFH
0006 120000      E     LCALL   _cyread8
0009 900000      R     MOV     DPTR,#bg_xover_inl_trim
000C EF                MOV     A,R7
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 198
000E 900000      R     MOV     DPTR,#bg_xover_inl_trim
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 EF                MOV     A,R7
0014 5407              ANL     A,#07H
0016 FF                MOV     R7,A
0017 90586E            MOV     DPTR,#0586EH
001A EF                MOV     A,R7
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 199
001C 900000      R     MOV     DPTR,#bg_xover_inl_trim
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 C4                SWAP    A
0023 540F              ANL     A,#0FH
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 540F              ANL     A,#0FH
0029 FF                MOV     R7,A
002A 90586F            MOV     DPTR,#0586FH
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 200
002F 90510D            MOV     DPTR,#0510DH
0032 7401              MOV     A,#01H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 201
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/01/2014 23:42:21 PAGE 12  

0035 905B00            MOV     DPTR,#05B00H
0038 7410              MOV     A,#010H
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 202
003B 905876            MOV     DPTR,#05876H
003E 7444              MOV     A,#044H
0040 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 203
0041         ?C0005:
0041 22                RET     
             ; FUNCTION AnalogSetDefault (END)

             ; FUNCTION _SetAnalogRoutingPumps (BEGIN)
                                           ; SOURCE LINE # 223
0000 900000      R     MOV     DPTR,#enabled
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 224
                                           ; SOURCE LINE # 225
0005 905876            MOV     DPTR,#05876H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#regValue
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 226
000F 900000      R     MOV     DPTR,#enabled
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 6010              JZ      ?C0006
                                           ; SOURCE LINE # 227
                                           ; SOURCE LINE # 228
0017 900000      R     MOV     DPTR,#regValue
001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
001C EF                MOV     A,R7
001D 4422              ORL     A,#022H
001F FF                MOV     R7,A
0020 900000      R     MOV     DPTR,#regValue
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 229
0025 800E              SJMP    ?C0007
0027         ?C0006:
                                           ; SOURCE LINE # 231
                                           ; SOURCE LINE # 232
0027 900000      R     MOV     DPTR,#regValue
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C EF                MOV     A,R7
002D 54DD              ANL     A,#0DDH
002F FF                MOV     R7,A
0030 900000      R     MOV     DPTR,#regValue
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 233
0035         ?C0007:
                                           ; SOURCE LINE # 234
0035 900000      R     MOV     DPTR,#regValue
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/01/2014 23:42:21 PAGE 13  

003A 905876            MOV     DPTR,#05876H
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 235
003F         ?C0008:
003F 22                RET     
             ; FUNCTION _SetAnalogRoutingPumps (END)

             ; FUNCTION _ADC_AMux_Set (BEGIN)
                                           ; SOURCE LINE # 265
0000 900000      R     MOV     DPTR,#channel
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 266
                                           ; SOURCE LINE # 267
0005 900000      R     MOV     DPTR,#channel
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B C3                CLR     C
000C 9402              SUBB    A,#02H
000E 5036              JNC     ?C0010
                                           ; SOURCE LINE # 268
                                           ; SOURCE LINE # 269
0010 900000      R     MOV     DPTR,#channel
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
0015 EF                MOV     A,R7
0016 25E0              ADD     A,ACC
0018 2400        R     ADD     A,#LOW ADC_AMux__addrTable
001A F582              MOV     DPL,A
001C E4                CLR     A
001D 3400        R     ADDC    A,#HIGH ADC_AMux__addrTable
001F F583              MOV     DPH,A
0021 E4                CLR     A
0022 93                MOVC    A,@A+DPTR
0023 FE                MOV     R6,A
0024 7401              MOV     A,#01H
0026 93                MOVC    A,@A+DPTR
0027 FF                MOV     R7,A
0028 8F82              MOV     DPL,R7
002A 8E83              MOV     DPH,R6
002C C083              PUSH    DPH
002E C082              PUSH    DPL
0030 E0                MOVX    A,@DPTR
0031 FF                MOV     R7,A
0032 900000      R     MOV     DPTR,#channel
0035 E0                MOVX    A,@DPTR
0036 FE                MOV     R6,A
0037 EE                MOV     A,R6
0038 900000      R     MOV     DPTR,#ADC_AMux__maskTable
003B 93                MOVC    A,@A+DPTR
003C FE                MOV     R6,A
003D EF                MOV     A,R7
003E 4E                ORL     A,R6
003F FF                MOV     R7,A
0040 D082              POP     DPL
0042 D083              POP     DPH
0044 EF                MOV     A,R7
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 270
0046         ?C0009:
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/01/2014 23:42:21 PAGE 14  

                                           ; SOURCE LINE # 271
0046         ?C0010:
0046 22                RET     
             ; FUNCTION _ADC_AMux_Set (END)

             ; FUNCTION _ADC_AMux_Unset (BEGIN)
                                           ; SOURCE LINE # 287
0000 900000      R     MOV     DPTR,#channel
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 288
                                           ; SOURCE LINE # 289
0005 900000      R     MOV     DPTR,#channel
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B C3                CLR     C
000C 9402              SUBB    A,#02H
000E 5039              JNC     ?C0012
                                           ; SOURCE LINE # 290
                                           ; SOURCE LINE # 291
0010 900000      R     MOV     DPTR,#channel
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
0015 EF                MOV     A,R7
0016 25E0              ADD     A,ACC
0018 2400        R     ADD     A,#LOW ADC_AMux__addrTable
001A F582              MOV     DPL,A
001C E4                CLR     A
001D 3400        R     ADDC    A,#HIGH ADC_AMux__addrTable
001F F583              MOV     DPH,A
0021 E4                CLR     A
0022 93                MOVC    A,@A+DPTR
0023 FE                MOV     R6,A
0024 7401              MOV     A,#01H
0026 93                MOVC    A,@A+DPTR
0027 FF                MOV     R7,A
0028 8F82              MOV     DPL,R7
002A 8E83              MOV     DPH,R6
002C C083              PUSH    DPH
002E C082              PUSH    DPL
0030 E0                MOVX    A,@DPTR
0031 FF                MOV     R7,A
0032 900000      R     MOV     DPTR,#channel
0035 E0                MOVX    A,@DPTR
0036 FE                MOV     R6,A
0037 EE                MOV     A,R6
0038 900000      R     MOV     DPTR,#ADC_AMux__maskTable
003B 93                MOVC    A,@A+DPTR
003C FE                MOV     R6,A
003D EE                MOV     A,R6
003E F4                CPL     A
003F FE                MOV     R6,A
0040 EF                MOV     A,R7
0041 5E                ANL     A,R6
0042 FF                MOV     R7,A
0043 D082              POP     DPL
0045 D083              POP     DPH
0047 EF                MOV     A,R7
0048 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 292
0049         ?C0011:
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/01/2014 23:42:21 PAGE 15  

                                           ; SOURCE LINE # 293
0049         ?C0012:
0049 22                RET     
             ; FUNCTION _ADC_AMux_Unset (END)

             ; FUNCTION cyfitter_cfg (BEGIN)
                                           ; SOURCE LINE # 314
                                           ; SOURCE LINE # 315
                                           ; SOURCE LINE # 317
0000 7B00              MOV     R3,#00H
0002 7A46              MOV     R2,#046H
0004 79E8              MOV     R1,#0E8H
0006 120000      E     LCALL   _cyread8
0009 EF                MOV     A,R7
000A 4405              ORL     A,#05H
000C FD                MOV     R5,A
000D 7B00              MOV     R3,#00H
000F 7A46              MOV     R2,#046H
0011 79E8              MOV     R1,#0E8H
0013 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 319
                                           ; SOURCE LINE # 340
0016 750000      R     MOV     i,#00H
0019         ?C0013:
0019 E500        R     MOV     A,i
001B C3                CLR     C
001C 9407              SUBB    A,#07H
001E 503A              JNC     ?C0014
                                           ; SOURCE LINE # 341
                                           ; SOURCE LINE # 342
0020 AF00        R     MOV     R7,i
0022 EF                MOV     A,R7
0023 75F005            MOV     B,#05H
0026 A4                MUL     AB
0027 2400        R     ADD     A,#LOW cfg_memset_list
0029 F582              MOV     DPL,A
002B E4                CLR     A
002C 3400        R     ADDC    A,#HIGH cfg_memset_list
002E F583              MOV     DPH,A
0030 AF82              MOV     R7,DPL
0032 AE83              MOV     R6,DPH
0034 8E00        R     MOV     ms,R6
0036 8F00        R     MOV     ms+01H,R7
                                           ; SOURCE LINE # 343
0038 AE00        R     MOV     R6,ms
003A AF00        R     MOV     R7,ms+01H
003C 8F82              MOV     DPL,R7
003E 8E83              MOV     DPH,R6
0040 120000      E     LCALL   ?C?PLDCODE
0043 AE00        R     MOV     R6,ms
0045 AF00        R     MOV     R7,ms+01H
0047 8F82              MOV     DPL,R7
0049 8E83              MOV     DPH,R6
004B 7403              MOV     A,#03H
004D 93                MOVC    A,@A+DPTR
004E FC                MOV     R4,A
004F 7404              MOV     A,#04H
0051 93                MOVC    A,@A+DPTR
0052 FD                MOV     R5,A
0053 120000      E     LCALL   _cymemzero
                                           ; SOURCE LINE # 344
0056         ?C0015:
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/01/2014 23:42:21 PAGE 16  

0056 0500        R     INC     i
0058 80BF              SJMP    ?C0013
005A         ?C0014:
                                           ; SOURCE LINE # 346
005A 7B08              MOV     R3,#08H
005C 7A00              MOV     R2,#00H
005E 7900              MOV     R1,#00H
0060 120000      E     LCALL   _cfg_write_bytes
                                           ; SOURCE LINE # 349
0063 905883            MOV     DPTR,#05883H
0066 740A              MOV     A,#0AH
0068 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 352
0069 7B01              MOV     R3,#01H
006B 7A50              MOV     R2,#050H
006D 7903              MOV     R1,#03H
006F 120000      E     LCALL   _cyread8
0072 EF                MOV     A,R7
0073 4402              ORL     A,#02H
0075 FD                MOV     R5,A
0076 7B01              MOV     R3,#01H
0078 7A50              MOV     R2,#050H
007A 7903              MOV     R1,#03H
007C 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 353
007F 7B01              MOV     R3,#01H
0081 7A50              MOV     R2,#050H
0083 7913              MOV     R1,#013H
0085 120000      E     LCALL   _cyread8
0088 EF                MOV     A,R7
0089 4402              ORL     A,#02H
008B FD                MOV     R5,A
008C 7B01              MOV     R3,#01H
008E 7A50              MOV     R2,#050H
0090 7913              MOV     R1,#013H
0092 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 356
0095 9043A0            MOV     DPTR,#043A0H
0098 E0                MOVX    A,@DPTR
0099 FF                MOV     R7,A
009A EF                MOV     A,R7
009B 4440              ORL     A,#040H
009D FF                MOV     R7,A
009E 9043A0            MOV     DPTR,#043A0H
00A1 EF                MOV     A,R7
00A2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 357
00A3 9043C2            MOV     DPTR,#043C2H
00A6 E0                MOVX    A,@DPTR
00A7 FF                MOV     R7,A
00A8 EF                MOV     A,R7
00A9 4410              ORL     A,#010H
00AB FF                MOV     R7,A
00AC 9043C2            MOV     DPTR,#043C2H
00AF EF                MOV     A,R7
00B0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 358
                                           ; SOURCE LINE # 361
00B1 7B08              MOV     R3,#08H
00B3 7A05              MOV     R2,#05H
00B5 79CC              MOV     R1,#0CCH
00B7 C003              PUSH    AR3
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/01/2014 23:42:21 PAGE 17  

00B9 C002              PUSH    AR2
00BB C001              PUSH    AR1
00BD 7B00              MOV     R3,#00H
00BF 7A51              MOV     R2,#051H
00C1 7900              MOV     R1,#00H
00C3 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00C6 120000      E     LCALL   ?C?PSTXDATA
00C9 D001              POP     AR1
00CB D002              POP     AR2
00CD D003              POP     AR3
00CF 7F0A              MOV     R7,#0AH
00D1 7E00              MOV     R6,#00H
00D3 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 362
00D6 7B08              MOV     R3,#08H
00D8 7A05              MOV     R2,#05H
00DA 79D8              MOV     R1,#0D8H
00DC C003              PUSH    AR3
00DE C002              PUSH    AR2
00E0 C001              PUSH    AR1
00E2 7B00              MOV     R3,#00H
00E4 7A51              MOV     R2,#051H
00E6 79F0              MOV     R1,#0F0H
00E8 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00EB 120000      E     LCALL   ?C?PSTXDATA
00EE D001              POP     AR1
00F0 D002              POP     AR2
00F2 D003              POP     AR3
00F4 7F0A              MOV     R7,#0AH
00F6 7E00              MOV     R6,#00H
00F8 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 363
00FB 7B08              MOV     R3,#08H
00FD 7A05              MOV     R2,#05H
00FF 79E4              MOV     R1,#0E4H
0101 C003              PUSH    AR3
0103 C002              PUSH    AR2
0105 C001              PUSH    AR1
0107 7B00              MOV     R3,#00H
0109 7A51              MOV     R2,#051H
010B 7910              MOV     R1,#010H
010D 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0110 120000      E     LCALL   ?C?PSTXDATA
0113 D001              POP     AR1
0115 D002              POP     AR2
0117 D003              POP     AR3
0119 7F0A              MOV     R7,#0AH
011B 7E00              MOV     R6,#00H
011D 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 364
0120 7B08              MOV     R3,#08H
0122 7A05              MOV     R2,#05H
0124 79F0              MOV     R1,#0F0H
0126 C003              PUSH    AR3
0128 C002              PUSH    AR2
012A C001              PUSH    AR1
012C 7B00              MOV     R3,#00H
012E 7A51              MOV     R2,#051H
0130 7922              MOV     R1,#022H
0132 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0135 120000      E     LCALL   ?C?PSTXDATA
0138 D001              POP     AR1
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/01/2014 23:42:21 PAGE 18  

013A D002              POP     AR2
013C D003              POP     AR3
013E 7F08              MOV     R7,#08H
0140 7E00              MOV     R6,#00H
0142 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 365
0145 9044F4            MOV     DPTR,#044F4H
0148 7401              MOV     A,#01H
014A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 368
014B 904322            MOV     DPTR,#04322H
014E E0                MOVX    A,@DPTR
014F FF                MOV     R7,A
0150 EF                MOV     A,R7
0151 4408              ORL     A,#08H
0153 FF                MOV     R7,A
0154 904322            MOV     DPTR,#04322H
0157 EF                MOV     A,R7
0158 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 369
0159 9046EC            MOV     DPTR,#046ECH
015C E0                MOVX    A,@DPTR
015D FF                MOV     R7,A
015E EF                MOV     A,R7
015F C3                CLR     C
0160 9405              SUBB    A,#05H
0162 5006              JNC     ?C0016
                                           ; SOURCE LINE # 370
                                           ; SOURCE LINE # 371
0164 904689            MOV     DPTR,#04689H
0167 743A              MOV     A,#03AH
0169 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 372
016A         ?C0016:
                                           ; SOURCE LINE # 376
016A 904800            MOV     DPTR,#04800H
016D 74F1              MOV     A,#0F1H
016F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 378
0170 120000      R     LCALL   ClockSetup
                                           ; SOURCE LINE # 380
0173 904800            MOV     DPTR,#04800H
0176 74B1              MOV     A,#0B1H
0178 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 383
0179 120000      R     LCALL   AnalogSetDefault
                                           ; SOURCE LINE # 386
017C 7B00              MOV     R3,#00H
017E 7A43              MOV     R2,#043H
0180 79A0              MOV     R1,#0A0H
0182 C003              PUSH    AR3
0184 C002              PUSH    AR2
0186 C001              PUSH    AR1
0188 7B00              MOV     R3,#00H
018A 7A43              MOV     R2,#043H
018C 79B0              MOV     R1,#0B0H
018E 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0191 120000      E     LCALL   ?C?PSTXDATA
0194 D001              POP     AR1
0196 D002              POP     AR2
0198 D003              POP     AR3
019A 7F0E              MOV     R7,#0EH
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/01/2014 23:42:21 PAGE 19  

019C 7E00              MOV     R6,#00H
019E 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 387
01A1 9043B0            MOV     DPTR,#043B0H
01A4 E0                MOVX    A,@DPTR
01A5 FF                MOV     R7,A
01A6 EF                MOV     A,R7
01A7 54FD              ANL     A,#0FDH
01A9 FF                MOV     R7,A
01AA EF                MOV     A,R7
01AB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 388
01AC         ?C0017:
01AC 22                RET     
             ; FUNCTION cyfitter_cfg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1024    ----
   CONSTANT SIZE    =     41    ----
   XDATA SIZE       =     10    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
