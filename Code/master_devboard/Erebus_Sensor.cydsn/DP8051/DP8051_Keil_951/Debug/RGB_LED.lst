C51 COMPILER V9.51   RGB_LED                                                               06/01/2014 20:47:51 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE RGB_LED
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\RGB_LED.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\RGB_LED.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\RGB_LED.lst) CD DB NOI
                    -P OT(0,SIZE) DF(DEBUG) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\RGB_LED.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: RGB_LED.c  
   3          * Version 1.90
   4          *
   5          * Description:
   6          *  This file contains API to enable firmware control of a Pins component.
   7          *
   8          * Note:
   9          *
  10          ********************************************************************************
  11          * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions, 
  13          * disclaimers, and limitations in the end user license agreement accompanying 
  14          * the software package with which this file was provided.
  15          *******************************************************************************/
  16          
  17          #include "cytypes.h"
  18          #include "RGB_LED.h"
  19          
  20          
  21          /*******************************************************************************
  22          * Function Name: RGB_LED_Write
  23          ********************************************************************************
  24          *
  25          * Summary:
  26          *  Assign a new value to the digital port's data output register.  
  27          *
  28          * Parameters:  
  29          *  prtValue:  The value to be assigned to the Digital Port. 
  30          *
  31          * Return: 
  32          *  None 
  33          *  
  34          *******************************************************************************/
  35          void RGB_LED_Write(uint8 value) 
  36          {
  37   1          uint8 staticBits = (RGB_LED_DR & (uint8)(~RGB_LED_MASK));
  38   1          RGB_LED_DR = staticBits | ((uint8)(value << RGB_LED_SHIFT) & RGB_LED_MASK);
  39   1      }
  40          
  41          
  42          /*******************************************************************************
  43          * Function Name: RGB_LED_SetDriveMode
  44          ********************************************************************************
  45          *
  46          * Summary:
  47          *  Change the drive mode on the pins of the port.
  48          * 
  49          * Parameters:  
  50          *  mode:  Change the pins to this drive mode.
  51          *
  52          * Return: 
  53          *  None
C51 COMPILER V9.51   RGB_LED                                                               06/01/2014 20:47:51 PAGE 2   

  54          *
  55          *******************************************************************************/
  56          void RGB_LED_SetDriveMode(uint8 mode) 
  57          {
  58   1              CyPins_SetPinDriveMode(RGB_LED_0, mode);
  59   1              CyPins_SetPinDriveMode(RGB_LED_1, mode);
  60   1              CyPins_SetPinDriveMode(RGB_LED_2, mode);
  61   1      }
  62          
  63          
  64          /*******************************************************************************
  65          * Function Name: RGB_LED_Read
  66          ********************************************************************************
  67          *
  68          * Summary:
  69          *  Read the current value on the pins of the Digital Port in right justified 
  70          *  form.
  71          *
  72          * Parameters:  
  73          *  None 
  74          *
  75          * Return: 
  76          *  Returns the current value of the Digital Port as a right justified number
  77          *  
  78          * Note:
  79          *  Macro RGB_LED_ReadPS calls this function. 
  80          *  
  81          *******************************************************************************/
  82          uint8 RGB_LED_Read(void) 
  83          {
  84   1          return (RGB_LED_PS & RGB_LED_MASK) >> RGB_LED_SHIFT;
  85   1      }
  86          
  87          
  88          /*******************************************************************************
  89          * Function Name: RGB_LED_ReadDataReg
  90          ********************************************************************************
  91          *
  92          * Summary:
  93          *  Read the current value assigned to a Digital Port's data output register
  94          *
  95          * Parameters:  
  96          *  None 
  97          *
  98          * Return: 
  99          *  Returns the current value assigned to the Digital Port's data output register
 100          *  
 101          *******************************************************************************/
 102          uint8 RGB_LED_ReadDataReg(void) 
 103          {
 104   1          return (RGB_LED_DR & RGB_LED_MASK) >> RGB_LED_SHIFT;
 105   1      }
 106          
 107          
 108          /* If Interrupts Are Enabled for this Pins component */ 
 109          #if defined(RGB_LED_INTSTAT) 
              
                  /*******************************************************************************
                  * Function Name: RGB_LED_ClearInterrupt
                  ********************************************************************************
                  *
                  * Summary:
C51 COMPILER V9.51   RGB_LED                                                               06/01/2014 20:47:51 PAGE 3   

                  *  Clears any active interrupts attached to port and returns the value of the 
                  *  interrupt status register.
                  *
                  * Parameters:  
                  *  None 
                  *
                  * Return: 
                  *  Returns the value of the interrupt status register
                  *  
                  *******************************************************************************/
                  uint8 RGB_LED_ClearInterrupt(void) 
                  {
                      return (RGB_LED_INTSTAT & RGB_LED_MASK) >> RGB_LED_SHIFT;
                  }
              
              #endif /* If Interrupts Are Enabled for this Pins component */ 
 132          
 133          
 134          /* [] END OF FILE */
C51 COMPILER V9.51   RGB_LED                                                               06/01/2014 20:47:51 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _RGB_LED_Write (BEGIN)
                                           ; SOURCE LINE # 35
0000 900000      R     MOV     DPTR,#value
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 36
                                           ; SOURCE LINE # 37
0005 905130            MOV     DPTR,#05130H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 541F              ANL     A,#01FH
000D FF                MOV     R7,A
000E 900000      R     MOV     DPTR,#staticBits
0011 EF                MOV     A,R7
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 38
0013 900000      R     MOV     DPTR,#value
0016 E0                MOVX    A,@DPTR
0017 FF                MOV     R7,A
0018 EF                MOV     A,R7
0019 C4                SWAP    A
001A 33                RLC     A
001B 54E0              ANL     A,#0E0H
001D FF                MOV     R7,A
001E EF                MOV     A,R7
001F 54E0              ANL     A,#0E0H
0021 FF                MOV     R7,A
0022 900000      R     MOV     DPTR,#staticBits
0025 E0                MOVX    A,@DPTR
0026 FE                MOV     R6,A
0027 EF                MOV     A,R7
0028 4E                ORL     A,R6
0029 FF                MOV     R7,A
002A 905130            MOV     DPTR,#05130H
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 39
002F         ?C0001:
002F 22                RET     
             ; FUNCTION _RGB_LED_Write (END)

             ; FUNCTION _RGB_LED_SetDriveMode (BEGIN)
                                           ; SOURCE LINE # 56
0000 900000      R     MOV     DPTR,#mode
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 57
                                           ; SOURCE LINE # 58
0005 900000      R     MOV     DPTR,#mode
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 540E              ANL     A,#0EH
000D FF                MOV     R7,A
000E 90501D            MOV     DPTR,#0501DH
0011 E0                MOVX    A,@DPTR
0012 FE                MOV     R6,A
0013 EE                MOV     A,R6
C51 COMPILER V9.51   RGB_LED                                                               06/01/2014 20:47:51 PAGE 5   

0014 54F1              ANL     A,#0F1H
0016 FE                MOV     R6,A
0017 EE                MOV     A,R6
0018 4F                ORL     A,R7
0019 FF                MOV     R7,A
001A 90501D            MOV     DPTR,#0501DH
001D EF                MOV     A,R7
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 59
001F 900000      R     MOV     DPTR,#mode
0022 E0                MOVX    A,@DPTR
0023 FF                MOV     R7,A
0024 EF                MOV     A,R7
0025 540E              ANL     A,#0EH
0027 FF                MOV     R7,A
0028 90501E            MOV     DPTR,#0501EH
002B E0                MOVX    A,@DPTR
002C FE                MOV     R6,A
002D EE                MOV     A,R6
002E 54F1              ANL     A,#0F1H
0030 FE                MOV     R6,A
0031 EE                MOV     A,R6
0032 4F                ORL     A,R7
0033 FF                MOV     R7,A
0034 90501E            MOV     DPTR,#0501EH
0037 EF                MOV     A,R7
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 60
0039 900000      R     MOV     DPTR,#mode
003C E0                MOVX    A,@DPTR
003D FF                MOV     R7,A
003E EF                MOV     A,R7
003F 540E              ANL     A,#0EH
0041 FF                MOV     R7,A
0042 90501F            MOV     DPTR,#0501FH
0045 E0                MOVX    A,@DPTR
0046 FE                MOV     R6,A
0047 EE                MOV     A,R6
0048 54F1              ANL     A,#0F1H
004A FE                MOV     R6,A
004B EE                MOV     A,R6
004C 4F                ORL     A,R7
004D FF                MOV     R7,A
004E 90501F            MOV     DPTR,#0501FH
0051 EF                MOV     A,R7
0052 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 61
0053         ?C0002:
0053 22                RET     
             ; FUNCTION _RGB_LED_SetDriveMode (END)

             ; FUNCTION RGB_LED_Read (BEGIN)
                                           ; SOURCE LINE # 82
                                           ; SOURCE LINE # 83
                                           ; SOURCE LINE # 84
0000 905131            MOV     DPTR,#05131H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 54E0              ANL     A,#0E0H
0008 FF                MOV     R7,A
0009 7E00              MOV     R6,#00H
C51 COMPILER V9.51   RGB_LED                                                               06/01/2014 20:47:51 PAGE 6   

000B EF                MOV     A,R7
000C 7805              MOV     R0,#05H
000E         ?C0005:
000E CE                XCH     A,R6
000F C3                CLR     C
0010 13                RRC     A
0011 CE                XCH     A,R6
0012 13                RRC     A
0013 D8F9              DJNZ    R0,?C0005
0015 FF                MOV     R7,A
                                           ; SOURCE LINE # 85
0016         ?C0003:
0016 22                RET     
             ; FUNCTION RGB_LED_Read (END)

             ; FUNCTION RGB_LED_ReadDataReg (BEGIN)
                                           ; SOURCE LINE # 102
                                           ; SOURCE LINE # 103
                                           ; SOURCE LINE # 104
0000 905130            MOV     DPTR,#05130H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 54E0              ANL     A,#0E0H
0008 FF                MOV     R7,A
0009 7E00              MOV     R6,#00H
000B EF                MOV     A,R7
000C 7805              MOV     R0,#05H
000E         ?C0006:
000E CE                XCH     A,R6
000F C3                CLR     C
0010 13                RRC     A
0011 CE                XCH     A,R6
0012 13                RRC     A
0013 D8F9              DJNZ    R0,?C0006
0015 FF                MOV     R7,A
                                           ; SOURCE LINE # 105
0016         ?C0004:
0016 22                RET     
             ; FUNCTION RGB_LED_ReadDataReg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    178    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      3    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
