C51 COMPILER V9.51   MODIFYCOLLECTION_IRQ                                                  06/01/2014 20:56:37 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE MODIFYCOLLECTION_IRQ
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\ModifyCollection_IRQ.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\ModifyCollection_IRQ.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\ModifyCol
                    -lection_IRQ.lst) CD DB NOIP OT(0,SIZE) DF(DEBUG) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\Mo
                    -difyCollection_IRQ.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: ModifyCollection_IRQ.c  
   3          * Version 1.70
   4          *
   5          *  Description:
   6          *   API for controlling the state of an interrupt.
   7          *
   8          *
   9          *  Note:
  10          *
  11          ********************************************************************************
  12          * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  13          * You may use this file only in accordance with the license, terms, conditions, 
  14          * disclaimers, and limitations in the end user license agreement accompanying 
  15          * the software package with which this file was provided.
  16          *******************************************************************************/
  17          
  18          #include <cydevice_trm.h>
  19          #include <CyLib.h>
  20          #include <ModifyCollection_IRQ.h>
  21          
  22          #if !defined(ModifyCollection_IRQ__REMOVED) /* Check for removal by optimization */
  23          
  24          /*******************************************************************************
  25          *  Place your includes, defines and code here 
  26          ********************************************************************************/
  27          /* `#START ModifyCollection_IRQ_intc` */
  28              #include "globals.h"
  29              #include "sample_handler.h"
  30          /* `#END` */
  31          
  32          
  33          /*******************************************************************************
  34          * Function Name: ModifyCollection_IRQ_Start
  35          ********************************************************************************
  36          *
  37          * Summary:
  38          *  Set up the interrupt and enable it.
  39          *
  40          * Parameters:  
  41          *   None
  42          *
  43          * Return:
  44          *   None
  45          *
  46          *******************************************************************************/
  47          void ModifyCollection_IRQ_Start(void) 
  48          {
  49   1          /* For all we know the interrupt is active. */
  50   1          ModifyCollection_IRQ_Disable();
  51   1      
  52   1          /* Set the ISR to point to the ModifyCollection_IRQ Interrupt. */
C51 COMPILER V9.51   MODIFYCOLLECTION_IRQ                                                  06/01/2014 20:56:37 PAGE 2   

  53   1          ModifyCollection_IRQ_SetVector(&ModifyCollection_IRQ_Interrupt);
  54   1      
  55   1          /* Set the priority. */
  56   1          ModifyCollection_IRQ_SetPriority((uint8)ModifyCollection_IRQ_INTC_PRIOR_NUMBER);
  57   1      
  58   1          /* Enable it. */
  59   1          ModifyCollection_IRQ_Enable();
  60   1      }
  61          
  62          
  63          /*******************************************************************************
  64          * Function Name: ModifyCollection_IRQ_StartEx
  65          ********************************************************************************
  66          *
  67          * Summary:
  68          *  Set up the interrupt and enable it.
  69          *
  70          * Parameters:  
  71          *   address: Address of the ISR to set in the interrupt vector table.
  72          *
  73          * Return:
  74          *   None
  75          *
  76          *******************************************************************************/
  77          void ModifyCollection_IRQ_StartEx(cyisraddress address) 
  78          {
  79   1          /* For all we know the interrupt is active. */
  80   1          ModifyCollection_IRQ_Disable();
  81   1      
  82   1          /* Set the ISR to point to the ModifyCollection_IRQ Interrupt. */
  83   1          ModifyCollection_IRQ_SetVector(address);
  84   1      
  85   1          /* Set the priority. */
  86   1          ModifyCollection_IRQ_SetPriority((uint8)ModifyCollection_IRQ_INTC_PRIOR_NUMBER);
  87   1      
  88   1          /* Enable it. */
  89   1          ModifyCollection_IRQ_Enable();
  90   1      }
  91          
  92          
  93          /*******************************************************************************
  94          * Function Name: ModifyCollection_IRQ_Stop
  95          ********************************************************************************
  96          *
  97          * Summary:
  98          *   Disables and removes the interrupt.
  99          *
 100          * Parameters:  
 101          *   None
 102          *
 103          * Return:
 104          *   None
 105          *
 106          *******************************************************************************/
 107          void ModifyCollection_IRQ_Stop(void) 
 108          {
 109   1          /* Disable this interrupt. */
 110   1          ModifyCollection_IRQ_Disable();
 111   1      }
 112          
 113          
 114          /*******************************************************************************
C51 COMPILER V9.51   MODIFYCOLLECTION_IRQ                                                  06/01/2014 20:56:37 PAGE 3   

 115          * Function Name: ModifyCollection_IRQ_Interrupt
 116          ********************************************************************************
 117          * Summary:
 118          *   The default Interrupt Service Routine for ModifyCollection_IRQ.
 119          *
 120          *   Add custom code between the coments to keep the next version of this file
 121          *   from over writting your code.
 122          *
 123          * Parameters:  
 124          *   None
 125          *
 126          * Return:
 127          *   None
 128          *
 129          *******************************************************************************/
 130          CY_ISR(ModifyCollection_IRQ_Interrupt)
 131          {
 132   1          /*  Place your Interrupt code here. */
 133   1          /* `#START ModifyCollection_IRQ_Interrupt` */
 134   1          
 135   1          uint8 reg_value = 0;
 136   1          
 137   1          reg_value = CY_GET_REG8(BUTTON_PICU_REG);
 138   1          
 139   1          if (start_collection_enabled && (reg_value & START_COLLECTION)){
 140   2              start_sampling_waiting = 1;
 141   2          }
 142   1          
 143   1          else if (stop_collection_enabled && (reg_value & STOP_COLLECTION)){
 144   2              stop_sampling_waiting = 1;
 145   2          }    
 146   1      
 147   1          /* `#END` */
 148   1      
 149   1          /* PSoC3 ES1, ES2 RTC ISR PATCH  */ 
 150   1          #if(CYDEV_CHIP_FAMILY_USED == CYDEV_CHIP_FAMILY_PSOC3)
 151   1              #if((CYDEV_CHIP_REVISION_USED <= CYDEV_CHIP_REVISION_3A_ES2) && (ModifyCollection_IRQ__ES2_PATCH )
             -)      
                          ModifyCollection_IRQ_ISR_PATCH();
                      #endif /* CYDEV_CHIP_REVISION_USED */
 154   1          #endif /* (CYDEV_CHIP_FAMILY_USED == CYDEV_CHIP_FAMILY_PSOC3) */
 155   1      }
 156          
 157          
 158          /*******************************************************************************
 159          * Function Name: ModifyCollection_IRQ_SetVector
 160          ********************************************************************************
 161          *
 162          * Summary:
 163          *   Change the ISR vector for the Interrupt. Note calling ModifyCollection_IRQ_Start
 164          *   will override any effect this method would have had. To set the vector 
 165          *   before the component has been started use ModifyCollection_IRQ_StartEx instead.
 166          *
 167          * Parameters:
 168          *   address: Address of the ISR to set in the interrupt vector table.
 169          *
 170          * Return:
 171          *   None
 172          *
 173          *******************************************************************************/
 174          void ModifyCollection_IRQ_SetVector(cyisraddress address) 
 175          {
C51 COMPILER V9.51   MODIFYCOLLECTION_IRQ                                                  06/01/2014 20:56:37 PAGE 4   

 176   1          CY_SET_REG16(ModifyCollection_IRQ_INTC_VECTOR, (uint16) address);
 177   1      }
 178          
 179          
 180          /*******************************************************************************
 181          * Function Name: ModifyCollection_IRQ_GetVector
 182          ********************************************************************************
 183          *
 184          * Summary:
 185          *   Gets the "address" of the current ISR vector for the Interrupt.
 186          *
 187          * Parameters:
 188          *   None
 189          *
 190          * Return:
 191          *   Address of the ISR in the interrupt vector table.
 192          *
 193          *******************************************************************************/
 194          cyisraddress ModifyCollection_IRQ_GetVector(void) 
 195          {
 196   1          return (cyisraddress) CY_GET_REG16(ModifyCollection_IRQ_INTC_VECTOR);
 197   1      }
 198          
 199          
 200          /*******************************************************************************
 201          * Function Name: ModifyCollection_IRQ_SetPriority
 202          ********************************************************************************
 203          *
 204          * Summary:
 205          *   Sets the Priority of the Interrupt. Note calling ModifyCollection_IRQ_Start
 206          *   or ModifyCollection_IRQ_StartEx will override any effect this method would 
 207          *   have had. This method should only be called after ModifyCollection_IRQ_Start or 
 208          *   ModifyCollection_IRQ_StartEx has been called. To set the initial
 209          *   priority for the component use the cydwr file in the tool.
 210          *
 211          * Parameters:
 212          *   priority: Priority of the interrupt. 0 - 7, 0 being the highest.
 213          *
 214          * Return:
 215          *   None
 216          *
 217          *******************************************************************************/
 218          void ModifyCollection_IRQ_SetPriority(uint8 priority) 
 219          {
 220   1          *ModifyCollection_IRQ_INTC_PRIOR = priority << 5;
 221   1      }
 222          
 223          
 224          /*******************************************************************************
 225          * Function Name: ModifyCollection_IRQ_GetPriority
 226          ********************************************************************************
 227          *
 228          * Summary:
 229          *   Gets the Priority of the Interrupt.
 230          *
 231          * Parameters:
 232          *   None
 233          *
 234          * Return:
 235          *   Priority of the interrupt. 0 - 7, 0 being the highest.
 236          *
 237          *******************************************************************************/
C51 COMPILER V9.51   MODIFYCOLLECTION_IRQ                                                  06/01/2014 20:56:37 PAGE 5   

 238          uint8 ModifyCollection_IRQ_GetPriority(void) 
 239          {
 240   1          uint8 priority;
 241   1      
 242   1      
 243   1          priority = *ModifyCollection_IRQ_INTC_PRIOR >> 5;
 244   1      
 245   1          return priority;
 246   1      }
 247          
 248          
 249          /*******************************************************************************
 250          * Function Name: ModifyCollection_IRQ_Enable
 251          ********************************************************************************
 252          *
 253          * Summary:
 254          *   Enables the interrupt.
 255          *
 256          * Parameters:
 257          *   None
 258          *
 259          * Return:
 260          *   None
 261          *
 262          *******************************************************************************/
 263          void ModifyCollection_IRQ_Enable(void) 
 264          {
 265   1          /* Enable the general interrupt. */
 266   1          *ModifyCollection_IRQ_INTC_SET_EN = ModifyCollection_IRQ__INTC_MASK;
 267   1      }
 268          
 269          
 270          /*******************************************************************************
 271          * Function Name: ModifyCollection_IRQ_GetState
 272          ********************************************************************************
 273          *
 274          * Summary:
 275          *   Gets the state (enabled, disabled) of the Interrupt.
 276          *
 277          * Parameters:
 278          *   None
 279          *
 280          * Return:
 281          *   1 if enabled, 0 if disabled.
 282          *
 283          *******************************************************************************/
 284          uint8 ModifyCollection_IRQ_GetState(void) 
 285          {
 286   1          /* Get the state of the general interrupt. */
 287   1          return ((*ModifyCollection_IRQ_INTC_SET_EN & (uint8)ModifyCollection_IRQ__INTC_MASK) != 0u) ? 1u:0u;
 288   1      }
 289          
 290          
 291          /*******************************************************************************
 292          * Function Name: ModifyCollection_IRQ_Disable
 293          ********************************************************************************
 294          *
 295          * Summary:
 296          *   Disables the Interrupt.
 297          *
 298          * Parameters:
 299          *   None
C51 COMPILER V9.51   MODIFYCOLLECTION_IRQ                                                  06/01/2014 20:56:37 PAGE 6   

 300          *
 301          * Return:
 302          *   None
 303          *
 304          *******************************************************************************/
 305          void ModifyCollection_IRQ_Disable(void) 
 306          {
 307   1          /* Disable the general interrupt. */
 308   1          *ModifyCollection_IRQ_INTC_CLR_EN = ModifyCollection_IRQ__INTC_MASK;
 309   1      }
 310          
 311          
 312          /*******************************************************************************
 313          * Function Name: ModifyCollection_IRQ_SetPending
 314          ********************************************************************************
 315          *
 316          * Summary:
 317          *   Causes the Interrupt to enter the pending state, a software method of
 318          *   generating the interrupt.
 319          *
 320          * Parameters:
 321          *   None
 322          *
 323          * Return:
 324          *   None
 325          *
 326          *******************************************************************************/
 327          void ModifyCollection_IRQ_SetPending(void) 
 328          {
 329   1          *ModifyCollection_IRQ_INTC_SET_PD = ModifyCollection_IRQ__INTC_MASK;
 330   1      }
 331          
 332          
 333          /*******************************************************************************
 334          * Function Name: ModifyCollection_IRQ_ClearPending
 335          ********************************************************************************
 336          *
 337          * Summary:
 338          *   Clears a pending interrupt.
 339          *
 340          * Parameters:
 341          *   None
 342          *
 343          * Return:
 344          *   None
 345          *
 346          *******************************************************************************/
 347          void ModifyCollection_IRQ_ClearPending(void) 
 348          {
 349   1          *ModifyCollection_IRQ_INTC_CLR_PD = ModifyCollection_IRQ__INTC_MASK;
 350   1      }
 351          
 352          #endif /* End check for removal by optimization */
 353          
 354          
 355          /* [] END OF FILE */
C51 COMPILER V9.51   MODIFYCOLLECTION_IRQ                                                  06/01/2014 20:56:37 PAGE 7   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION ModifyCollection_IRQ_Start (BEGIN)
                                           ; SOURCE LINE # 47
                                           ; SOURCE LINE # 48
                                           ; SOURCE LINE # 50
0000 120000      R     LCALL   ModifyCollection_IRQ_Disable
                                           ; SOURCE LINE # 53
0003 7E00        R     MOV     R6,#HIGH ModifyCollection_IRQ_Interrupt
0005 7F00        R     MOV     R7,#LOW ModifyCollection_IRQ_Interrupt
0007 120000      R     LCALL   _ModifyCollection_IRQ_SetVector
                                           ; SOURCE LINE # 56
000A 7F07              MOV     R7,#07H
000C 120000      R     LCALL   _ModifyCollection_IRQ_SetPriority
                                           ; SOURCE LINE # 59
000F 120000      R     LCALL   ModifyCollection_IRQ_Enable
                                           ; SOURCE LINE # 60
0012         ?C0001:
0012 22                RET     
             ; FUNCTION ModifyCollection_IRQ_Start (END)

             ; FUNCTION _ModifyCollection_IRQ_StartEx (BEGIN)
                                           ; SOURCE LINE # 77
0000 900000      R     MOV     DPTR,#address
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 78
                                           ; SOURCE LINE # 80
0008 120000      R     LCALL   ModifyCollection_IRQ_Disable
                                           ; SOURCE LINE # 83
000B 900000      R     MOV     DPTR,#address
000E E0                MOVX    A,@DPTR
000F FE                MOV     R6,A
0010 A3                INC     DPTR
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 120000      R     LCALL   _ModifyCollection_IRQ_SetVector
                                           ; SOURCE LINE # 86
0016 7F07              MOV     R7,#07H
0018 120000      R     LCALL   _ModifyCollection_IRQ_SetPriority
                                           ; SOURCE LINE # 89
001B 120000      R     LCALL   ModifyCollection_IRQ_Enable
                                           ; SOURCE LINE # 90
001E         ?C0002:
001E 22                RET     
             ; FUNCTION _ModifyCollection_IRQ_StartEx (END)

             ; FUNCTION ModifyCollection_IRQ_Stop (BEGIN)
                                           ; SOURCE LINE # 107
                                           ; SOURCE LINE # 108
                                           ; SOURCE LINE # 110
0000 120000      R     LCALL   ModifyCollection_IRQ_Disable
                                           ; SOURCE LINE # 111
0003         ?C0003:
0003 22                RET     
             ; FUNCTION ModifyCollection_IRQ_Stop (END)

             ; FUNCTION ModifyCollection_IRQ_Interrupt (BEGIN)
C51 COMPILER V9.51   MODIFYCOLLECTION_IRQ                                                  06/01/2014 20:56:37 PAGE 8   

0000 C0E0              PUSH    ACC
0002 C083              PUSH    DPH
0004 C082              PUSH    DPL
0006 C085              PUSH    DPH1
0008 C084              PUSH    DPL1
000A C086              PUSH    DPS
000C 758600            MOV     DPS,#00H
000F C000        E     PUSH    ?C?XPAGE1SFR
0011 750000      E     MOV     ?C?XPAGE1SFR,#?C?XPAGE1RST
0014 C0D0              PUSH    PSW
0016 75D000            MOV     PSW,#00H
0019 C007              PUSH    AR7
                                           ; SOURCE LINE # 130
                                           ; SOURCE LINE # 135
001B 900000      R     MOV     DPTR,#reg_value
001E E4                CLR     A
001F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 137
0020 90458C            MOV     DPTR,#0458CH
0023 E0                MOVX    A,@DPTR
0024 FF                MOV     R7,A
0025 900000      R     MOV     DPTR,#reg_value
0028 EF                MOV     A,R7
0029 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 139
002A 900000      E     MOV     DPTR,#start_collection_enabled
002D E0                MOVX    A,@DPTR
002E FF                MOV     R7,A
002F EF                MOV     A,R7
0030 6011              JZ      ?C0004
0032 900000      R     MOV     DPTR,#reg_value
0035 E0                MOVX    A,@DPTR
0036 FF                MOV     R7,A
0037 EF                MOV     A,R7
0038 30E608            JNB     ACC.6,?C0004
                                           ; SOURCE LINE # 140
003B 900000      E     MOV     DPTR,#start_sampling_waiting
003E 7401              MOV     A,#01H
0040 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 141
0041 8017              SJMP    ?C0007
0043         ?C0004:
                                           ; SOURCE LINE # 143
0043 900000      E     MOV     DPTR,#stop_collection_enabled
0046 E0                MOVX    A,@DPTR
0047 FF                MOV     R7,A
0048 EF                MOV     A,R7
0049 600F              JZ      ?C0007
004B 900000      R     MOV     DPTR,#reg_value
004E E0                MOVX    A,@DPTR
004F FF                MOV     R7,A
0050 EF                MOV     A,R7
0051 30E506            JNB     ACC.5,?C0007
                                           ; SOURCE LINE # 144
0054 900000      E     MOV     DPTR,#stop_sampling_waiting
0057 7401              MOV     A,#01H
0059 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 145
005A         ?C0006:
005A         ?C0005:
                                           ; SOURCE LINE # 155
005A         ?C0007:
C51 COMPILER V9.51   MODIFYCOLLECTION_IRQ                                                  06/01/2014 20:56:37 PAGE 9   

005A D007              POP     AR7
005C D0D0              POP     PSW
005E D000        E     POP     ?C?XPAGE1SFR
0060 D086              POP     DPS
0062 D084              POP     DPL1
0064 D085              POP     DPH1
0066 D082              POP     DPL
0068 D083              POP     DPH
006A D0E0              POP     ACC
006C 32                RETI    
             ; FUNCTION ModifyCollection_IRQ_Interrupt (END)

             ; FUNCTION _ModifyCollection_IRQ_SetVector (BEGIN)
                                           ; SOURCE LINE # 174
0000 900000      R     MOV     DPTR,#address
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 175
                                           ; SOURCE LINE # 176
0008 7B02              MOV     R3,#02H
000A 7A44              MOV     R2,#044H
000C 7916              MOV     R1,#016H
000E 900000      R     MOV     DPTR,#address
0011 E0                MOVX    A,@DPTR
0012 FE                MOV     R6,A
0013 A3                INC     DPTR
0014 E0                MOVX    A,@DPTR
0015 FF                MOV     R7,A
0016 AD07              MOV     R5,AR7
0018 AC06              MOV     R4,AR6
001A 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 177
001D         ?C0008:
001D 22                RET     
             ; FUNCTION _ModifyCollection_IRQ_SetVector (END)

             ; FUNCTION ModifyCollection_IRQ_GetVector (BEGIN)
                                           ; SOURCE LINE # 194
                                           ; SOURCE LINE # 195
                                           ; SOURCE LINE # 196
0000 7B02              MOV     R3,#02H
0002 7A44              MOV     R2,#044H
0004 7916              MOV     R1,#016H
0006 120000      E     LCALL   _cyread16_nodpx
                                           ; SOURCE LINE # 197
0009         ?C0009:
0009 22                RET     
             ; FUNCTION ModifyCollection_IRQ_GetVector (END)

             ; FUNCTION _ModifyCollection_IRQ_SetPriority (BEGIN)
                                           ; SOURCE LINE # 218
0000 900000      R     MOV     DPTR,#priority
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 219
                                           ; SOURCE LINE # 220
0005 900000      R     MOV     DPTR,#priority
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
C51 COMPILER V9.51   MODIFYCOLLECTION_IRQ                                                  06/01/2014 20:56:37 PAGE 10  

000A EF                MOV     A,R7
000B C4                SWAP    A
000C 33                RLC     A
000D 54E0              ANL     A,#0E0H
000F FF                MOV     R7,A
0010 90448B            MOV     DPTR,#0448BH
0013 EF                MOV     A,R7
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 221
0015         ?C0010:
0015 22                RET     
             ; FUNCTION _ModifyCollection_IRQ_SetPriority (END)

             ; FUNCTION ModifyCollection_IRQ_GetPriority (BEGIN)
                                           ; SOURCE LINE # 238
                                           ; SOURCE LINE # 239
                                           ; SOURCE LINE # 243
0000 90448B            MOV     DPTR,#0448BH
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 C4                SWAP    A
0007 13                RRC     A
0008 5407              ANL     A,#07H
000A FF                MOV     R7,A
000B 900000      R     MOV     DPTR,#priority
000E EF                MOV     A,R7
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 245
0010 900000      R     MOV     DPTR,#priority
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
                                           ; SOURCE LINE # 246
0015         ?C0011:
0015 22                RET     
             ; FUNCTION ModifyCollection_IRQ_GetPriority (END)

             ; FUNCTION ModifyCollection_IRQ_Enable (BEGIN)
                                           ; SOURCE LINE # 263
                                           ; SOURCE LINE # 264
                                           ; SOURCE LINE # 266
0000 9044C1            MOV     DPTR,#044C1H
0003 7408              MOV     A,#08H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 267
0006         ?C0012:
0006 22                RET     
             ; FUNCTION ModifyCollection_IRQ_Enable (END)

             ; FUNCTION ModifyCollection_IRQ_GetState (BEGIN)
                                           ; SOURCE LINE # 284
                                           ; SOURCE LINE # 285
                                           ; SOURCE LINE # 287
0000 9044C1            MOV     DPTR,#044C1H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 30E304            JNB     ACC.3,?C0013
0009 7F01              MOV     R7,#01H
000B 8002              SJMP    ?C0014
000D         ?C0013:
000D 7F00              MOV     R7,#00H
C51 COMPILER V9.51   MODIFYCOLLECTION_IRQ                                                  06/01/2014 20:56:37 PAGE 11  

000F         ?C0014:
                                           ; SOURCE LINE # 288
000F         ?C0015:
000F 22                RET     
             ; FUNCTION ModifyCollection_IRQ_GetState (END)

             ; FUNCTION ModifyCollection_IRQ_Disable (BEGIN)
                                           ; SOURCE LINE # 305
                                           ; SOURCE LINE # 306
                                           ; SOURCE LINE # 308
0000 9044C9            MOV     DPTR,#044C9H
0003 7408              MOV     A,#08H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 309
0006         ?C0016:
0006 22                RET     
             ; FUNCTION ModifyCollection_IRQ_Disable (END)

             ; FUNCTION ModifyCollection_IRQ_SetPending (BEGIN)
                                           ; SOURCE LINE # 327
                                           ; SOURCE LINE # 328
                                           ; SOURCE LINE # 329
0000 9044D1            MOV     DPTR,#044D1H
0003 7408              MOV     A,#08H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 330
0006         ?C0017:
0006 22                RET     
             ; FUNCTION ModifyCollection_IRQ_SetPending (END)

             ; FUNCTION ModifyCollection_IRQ_ClearPending (BEGIN)
                                           ; SOURCE LINE # 347
                                           ; SOURCE LINE # 348
                                           ; SOURCE LINE # 349
0000 9044D9            MOV     DPTR,#044D9H
0003 7408              MOV     A,#08H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 350
0006         ?C0018:
0006 22                RET     
             ; FUNCTION ModifyCollection_IRQ_ClearPending (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    291    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      7    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
