C51 COMPILER V9.51   EEPROM_HANDLER                                                        05/19/2014 11:41:31 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE EEPROM_HANDLER
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\EEPROM_handler.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\EEPROM_handler.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\EEPROM_handler.lst) CD DB NOIP OT(0,SI
                    -ZE) DF(DEBUG) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\EEPROM_handler.obj)

line level    source

   1          /* ========================================
   2           *
   3           * Copyright YOUR COMPANY, THE YEAR
   4           * All Rights Reserved
   5           * UNPUBLISHED, LICENSED SOFTWARE.
   6           *
   7           * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8           * WHICH IS THE PROPERTY OF your company.
   9           *
  10           * ========================================
  11          */
  12          
  13          #include "EEPROM_handler.h"
*** WARNING C318 IN LINE 18 OF utility.h: can't open file 'SharedMacros.h'
*** WARNING C318 IN LINE 21 OF interface.h: can't open file 'SharedMacros.h'
*** WARNING C318 IN LINE 20 OF EEPROM_handler.h: can't open file 'SharedMacros.h'
  14          
  15          uint8 update_settings(settings_group new_settings){
  16   1          
  17   1          uint8* buffer;
  18   1          float rows_used = 0;
  19   1          uint16 remainder = 0;
  20   1          uint8* src_ptr;
  21   1          uint8* dst_ptr;
  22   1          uint8 i = 0; // loop var
  23   1          float bytes_used = EEPROM_BYTES_USED;
  24   1          uint8 result = SUCCESS;
*** ERROR C202 IN LINE 24 OF .\EEPROM_handler.c: 'SUCCESS': undefined identifier
  25   1          cystatus status;
  26   1          
  27   1          // Allocate array to hold EEPROM variables
  28   1          
  29   1          rows_used = ceil(bytes_used/CYDEV_EEPROM_ROW_SIZE);
  30   1          buffer = malloc(((uint16) rows_used) * CYDEV_EEPROM_ROW_SIZE);
  31   1          
  32   1          dst_ptr = buffer;
  33   1          remainder = (rows_used * 16) - EEPROM_BYTES_USED;
  34   1          
  35   1          // Copy all variables into RAM
  36   1          for (i=0; i<EEPROM_BYTES_USED; ++i){
  37   2              *dst_ptr = CY_GET_REG8(CYDEV_EE_BASE + i);
  38   2              ++dst_ptr;      
  39   2          }
  40   1          
  41   1          // Fill remainder of buffer with zeros
  42   1          while (i < remainder){
  43   2              *dst_ptr = 0;
  44   2              ++i;
  45   2          }
  46   1          
  47   1          // Modify variables in RAM
  48   1          buffer[0] = new_settings.sensor;
  49   1          buffer[1] = new_settings.sample_unit;
C51 COMPILER V9.51   EEPROM_HANDLER                                                        05/19/2014 11:41:31 PAGE 2   

  50   1          buffer[2] = new_settings.sample_interval;
  51   1          
  52   1          // Erase EEPROM
  53   1          // Disable interrupts during EEPROM operation
  54   1          CyGlobalIntDisable;
  55   1          status = EEPROM_R_EraseSector(SECTOR_NUMBER);
  56   1          CyGlobalIntEnable;
  57   1          
  58   1          if (status != CYRET_SUCCESS){
  59   2              result = FAIL;
*** ERROR C202 IN LINE 59 OF .\EEPROM_handler.c: 'FAIL': undefined identifier
  60   2              goto exit;
  61   2          }
  62   1          
  63   1          // Write back modified EEPROM Variables
  64   1          i = 0;
  65   1          src_ptr = buffer;
  66   1          while ((i < rows_used) && (i < EEPROM_ROWS)){
  67   2              // Disable interrupts during EEPROM operation
  68   2              CyGlobalIntDisable;
  69   2              status = EEPROM_R_Write(src_ptr, i);
  70   2              CyGlobalIntEnable;
  71   2              
  72   2              if (status != CYRET_SUCCESS){
  73   3                 result = FAIL;
*** ERROR C202 IN LINE 73 OF .\EEPROM_handler.c: 'FAIL': undefined identifier
  74   3              goto exit;
  75   3          }
  76   2              src_ptr = src_ptr + CYDEV_EEPROM_ROW_SIZE;
  77   2              ++i;
  78   2          }
  79   1           
  80   1          // Free buffer memory
  81   1          free(buffer);
  82   1          
  83   1      exit:   
  84   1          return result;   
  85   1      }
  86          
  87          uint8 get_variable(uint16 var_index){
  88   1          uint8 value = 10;
  89   1          
  90   1          value = CY_GET_REG8(CYDEV_EE_BASE + var_index);
  91   1          
  92   1          return value;
  93   1      }
  94          
  95          
  96          /* [] END OF FILE */

C51 COMPILATION COMPLETE.  3 WARNING(S),  3 ERROR(S)
