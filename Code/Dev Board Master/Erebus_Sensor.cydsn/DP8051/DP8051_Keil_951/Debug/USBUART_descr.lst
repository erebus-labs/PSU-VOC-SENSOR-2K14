C51 COMPILER V9.51   USBUART_DESCR                                                         05/19/2014 15:47:21 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE USBUART_DESCR
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\USBUART_descr.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\USBUART_descr.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\USBUART_descr.ls
                    -t) CD DB NOIP OT(0,SIZE) DF(DEBUG) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\USBUART_descr.ob
                    -j)

line level    source

   1          /*******************************************************************************
   2          * File Name: USBUART_descr.c
   3          * Version 2.60
   4          *
   5          * Description:
   6          *  USB descriptors and storage.
   7          *
   8          *  Note:
   9          *
  10          ********************************************************************************
  11          * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions,
  13          * disclaimers, and limitations in the end user license agreement accompanying
  14          * the software package with which this file was provided.
  15          *******************************************************************************/
  16          
  17          #include "USBUART.h"
  18          #include "USBUART_pvt.h"
  19          
  20          
  21          /*****************************************************************************
  22          *  User supplied descriptors.  If you want to specify your own descriptors,
  23          *  remove the comments around the define USER_SUPPLIED_DESCRIPTORS below and
  24          *  add your descriptors.
  25          *****************************************************************************/
  26          /* `#START USER_DESCRIPTORS_DECLARATIONS` Place your declaration here */
  27          
  28          /* `#END` */
  29          
  30          
  31          /***************************************
  32          *  USB Customizer Generated Descriptors
  33          ***************************************/
  34          
  35          #if !defined(USER_SUPPLIED_DESCRIPTORS)
  36          /*********************************************************************
  37          * Device Descriptors
  38          *********************************************************************/
  39          const uint8 CYCODE USBUART_DEVICE0_DESCR[18u] = {
  40          /* Descriptor Length                       */ 0x12u,
  41          /* DescriptorType: DEVICE                  */ 0x01u,
  42          /* bcdUSB (ver 2.0)                        */ 0x00u, 0x02u,
  43          /* bDeviceClass                            */ 0x02u,
  44          /* bDeviceSubClass                         */ 0x00u,
  45          /* bDeviceProtocol                         */ 0x00u,
  46          /* bMaxPacketSize0                         */ 0x08u,
  47          /* idVendor                                */ 0xB4u, 0x04u,
  48          /* idProduct                               */ 0x32u, 0xF2u,
  49          /* bcdDevice                               */ 0x01u, 0x00u,
  50          /* iManufacturer                           */ 0x01u,
  51          /* iProduct                                */ 0x02u,
  52          /* iSerialNumber                           */ 0x80u,
C51 COMPILER V9.51   USBUART_DESCR                                                         05/19/2014 15:47:21 PAGE 2   

  53          /* bNumConfigurations                      */ 0x01u
  54          };
  55          /*********************************************************************
  56          * Config Descriptor  
  57          *********************************************************************/
  58          const uint8 CYCODE USBUART_DEVICE0_CONFIGURATION0_DESCR[67u] = {
  59          /*  Config Descriptor Length               */ 0x09u,
  60          /*  DescriptorType: CONFIG                 */ 0x02u,
  61          /*  wTotalLength                           */ 0x43u, 0x00u,
  62          /*  bNumInterfaces                         */ 0x02u,
  63          /*  bConfigurationValue                    */ 0x01u,
  64          /*  iConfiguration                         */ 0x01u,
  65          /*  bmAttributes                           */ 0xC0u,
  66          /*  bMaxPower                              */ 0x32u,
  67          /*********************************************************************
  68          * CDC Interface Descriptor
  69          *********************************************************************/
  70          /*  Interface Descriptor Length            */ 0x09u,
  71          /*  DescriptorType: INTERFACE              */ 0x04u,
  72          /*  bInterfaceNumber                       */ 0x00u,
  73          /*  bAlternateSetting                      */ 0x00u,
  74          /*  bNumEndpoints                          */ 0x01u,
  75          /*  bInterfaceClass                        */ 0x02u,
  76          /*  bInterfaceSubClass                     */ 0x02u,
  77          /*  bInterfaceProtocol                     */ 0x01u,
  78          /*  iInterface                             */ 0x00u,
  79          /*********************************************************************
  80          * Header Descriptor
  81          *********************************************************************/
  82          /*  Header Descriptor Length               */ 0x05u,
  83          /*  DescriptorType: CS_INTERFACE           */ 0x24u,
  84          /*  bDescriptorSubtype                     */ 0x00u,
  85          /*  bcdADC                                 */ 0x10u, 0x01u,
  86          /*********************************************************************
  87          * Abstract Control Management Descriptor
  88          *********************************************************************/
  89          /*  Abstract Control Management Descriptor Length*/ 0x04u,
  90          /*  DescriptorType: CS_INTERFACE           */ 0x24u,
  91          /*  bDescriptorSubtype                     */ 0x02u,
  92          /*  bmCapabilities                         */ 0x02u,
  93          /*********************************************************************
  94          * Union Descriptor
  95          *********************************************************************/
  96          /*  Union Descriptor Length                */ 0x05u,
  97          /*  DescriptorType: CS_INTERFACE           */ 0x24u,
  98          /*  bDescriptorSubtype                     */ 0x06u,
  99          /*  bControlInterface                      */ 0x00u,
 100          /*  bSubordinateInterface                  */ 0x01u,
 101          /*********************************************************************
 102          * Call Management Descriptor
 103          *********************************************************************/
 104          /*  Call Management Descriptor Length      */ 0x05u,
 105          /*  DescriptorType: CS_INTERFACE           */ 0x24u,
 106          /*  bDescriptorSubtype                     */ 0x01u,
 107          /*  bmCapabilities                         */ 0x00u,
 108          /*  bDataInterface                         */ 0x01u,
 109          /*********************************************************************
 110          * Endpoint Descriptor
 111          *********************************************************************/
 112          /*  Endpoint Descriptor Length             */ 0x07u,
 113          /*  DescriptorType: ENDPOINT               */ 0x05u,
 114          /*  bEndpointAddress                       */ 0x81u,
C51 COMPILER V9.51   USBUART_DESCR                                                         05/19/2014 15:47:21 PAGE 3   

 115          /*  bmAttributes                           */ 0x03u,
 116          /*  wMaxPacketSize                         */ 0x08u, 0x00u,
 117          /*  bInterval                              */ 0x0Au,
 118          /*********************************************************************
 119          * Data Interface Descriptor
 120          *********************************************************************/
 121          /*  Interface Descriptor Length            */ 0x09u,
 122          /*  DescriptorType: INTERFACE              */ 0x04u,
 123          /*  bInterfaceNumber                       */ 0x01u,
 124          /*  bAlternateSetting                      */ 0x00u,
 125          /*  bNumEndpoints                          */ 0x02u,
 126          /*  bInterfaceClass                        */ 0x0Au,
 127          /*  bInterfaceSubClass                     */ 0x00u,
 128          /*  bInterfaceProtocol                     */ 0x00u,
 129          /*  iInterface                             */ 0x00u,
 130          /*********************************************************************
 131          * Endpoint Descriptor
 132          *********************************************************************/
 133          /*  Endpoint Descriptor Length             */ 0x07u,
 134          /*  DescriptorType: ENDPOINT               */ 0x05u,
 135          /*  bEndpointAddress                       */ 0x82u,
 136          /*  bmAttributes                           */ 0x02u,
 137          /*  wMaxPacketSize                         */ 0x40u, 0x00u,
 138          /*  bInterval                              */ 0x0Au,
 139          /*********************************************************************
 140          * Endpoint Descriptor
 141          *********************************************************************/
 142          /*  Endpoint Descriptor Length             */ 0x07u,
 143          /*  DescriptorType: ENDPOINT               */ 0x05u,
 144          /*  bEndpointAddress                       */ 0x03u,
 145          /*  bmAttributes                           */ 0x02u,
 146          /*  wMaxPacketSize                         */ 0x40u, 0x00u,
 147          /*  bInterval                              */ 0x0Au
 148          };
 149          
 150          /*********************************************************************
 151          * String Descriptor Table
 152          *********************************************************************/
 153          const uint8 CYCODE USBUART_STRING_DESCRIPTORS[69u] = {
 154          /*********************************************************************
 155          * Language ID Descriptor
 156          *********************************************************************/
 157          /* Descriptor Length                       */ 0x04u,
 158          /* DescriptorType: STRING                  */ 0x03u,
 159          /* Language Id                             */ 0x09u, 0x04u,
 160          /*********************************************************************
 161          * String Descriptor: "Erebus Labs"
 162          *********************************************************************/
 163          /* Descriptor Length                       */ 0x18u,
 164          /* DescriptorType: STRING                  */ 0x03u,
 165           (uint8)'E', 0u,(uint8)'r', 0u,(uint8)'e', 0u,(uint8)'b', 0u,(uint8)'u', 0u,
 166           (uint8)'s', 0u,(uint8)' ', 0u,(uint8)'L', 0u,(uint8)'a', 0u,(uint8)'b', 0u,
 167           (uint8)'s', 0u,
 168          /*********************************************************************
 169          * String Descriptor: "STEM Sensor Rev 0.1"
 170          *********************************************************************/
 171          /* Descriptor Length                       */ 0x28u,
 172          /* DescriptorType: STRING                  */ 0x03u,
 173           (uint8)'S', 0u,(uint8)'T', 0u,(uint8)'E', 0u,(uint8)'M', 0u,(uint8)' ', 0u,
 174           (uint8)'S', 0u,(uint8)'e', 0u,(uint8)'n', 0u,(uint8)'s', 0u,(uint8)'o', 0u,
 175           (uint8)'r', 0u,(uint8)' ', 0u,(uint8)'R', 0u,(uint8)'e', 0u,(uint8)'v', 0u,
 176           (uint8)' ', 0u,(uint8)'0', 0u,(uint8)'.', 0u,(uint8)'1', 0u,
C51 COMPILER V9.51   USBUART_DESCR                                                         05/19/2014 15:47:21 PAGE 4   

 177          /*********************************************************************/
 178          /* Marks the end of the list.              */ 0x00u};
 179          /*********************************************************************/
 180          
 181          /*********************************************************************
 182          * Serial Number String Descriptor
 183          *********************************************************************/
 184          const uint8 CYCODE USBUART_SN_STRING_DESCRIPTOR[2] = {
 185          /* Descriptor Length                       */ 0x02u,
 186          /* DescriptorType: STRING                  */ 0x03u,
 187          
 188          };
 189          
 190          
 191          
 192          /*********************************************************************
 193          * Endpoint Setting Table -- This table contain the endpoint setting
 194          *                           for each endpoint in the configuration. It
 195          *                           contains the necessary information to
 196          *                           configure the endpoint hardware for each
 197          *                           interface and alternate setting.
 198          *********************************************************************/
 199          const T_USBUART_EP_SETTINGS_BLOCK CYCODE USBUART_DEVICE0_CONFIGURATION0_EP_SETTINGS_TABLE[3u] = {
 200          /* IFC  ALT    EPAddr bmAttr MaxPktSize Class ********************/
 201          {0x00u, 0x00u, 0x81u, 0x03u, 0x0008u,   0x02u},
 202          {0x01u, 0x00u, 0x82u, 0x02u, 0x0040u,   0x0Au},
 203          {0x01u, 0x00u, 0x03u, 0x02u, 0x0040u,   0x0Au}
 204          };
 205          const uint8 CYCODE USBUART_DEVICE0_CONFIGURATION0_INTERFACE_CLASS[2u] = {
 206          0x02u, 0x0Au
 207          };
 208          /*********************************************************************
 209          * Config Dispatch Table -- Points to the Config Descriptor and each of
 210          *                          and endpoint setup table and to each
 211          *                          interface table if it specifies a USB Class
 212          *********************************************************************/
 213          const T_USBUART_LUT CYCODE USBUART_DEVICE0_CONFIGURATION0_TABLE[5u] = {
 214              {0x01u,     &USBUART_DEVICE0_CONFIGURATION0_DESCR},
 215              {0x03u,     &USBUART_DEVICE0_CONFIGURATION0_EP_SETTINGS_TABLE},
 216              {0x00u,    NULL},
 217              {0x00u,    NULL},
 218              {0x00u,     &USBUART_DEVICE0_CONFIGURATION0_INTERFACE_CLASS}
 219          };
 220          /*********************************************************************
 221          * Device Dispatch Table -- Points to the Device Descriptor and each of
 222          *                          and Configuration Tables for this Device 
 223          *********************************************************************/
 224          const T_USBUART_LUT CYCODE USBUART_DEVICE0_TABLE[2u] = {
 225              {0x01u,     &USBUART_DEVICE0_DESCR},
 226              {0x01u,     &USBUART_DEVICE0_CONFIGURATION0_TABLE}
 227          };
 228          /*********************************************************************
 229          * Device Table -- Indexed by the device number.
 230          *********************************************************************/
 231          const T_USBUART_LUT CYCODE USBUART_TABLE[1u] = {
 232              {0x01u,     &USBUART_DEVICE0_TABLE}
 233          };
 234          
 235          #endif /* USER_SUPPLIED_DESCRIPTORS */
 236          
 237          #if defined(USBUART_ENABLE_MSOS_STRING)
 238          
C51 COMPILER V9.51   USBUART_DESCR                                                         05/19/2014 15:47:21 PAGE 5   

 239              /******************************************************************************
 240              *  USB Microsoft OS String Descriptor
 241              *  "MSFT" identifies a Microsoft host
 242              *  "100" specifies version 1.00
 243              *  USBUART_GET_EXTENDED_CONFIG_DESCRIPTOR becomes the bRequest value
 244              *  in a host vendor device/class request
 245              ******************************************************************************/
 246          
 247              const uint8 CYCODE USBUART_MSOS_DESCRIPTOR[USBUART_MSOS_DESCRIPTOR_LENGTH] = {
 248              /* Descriptor Length                       */   0x12u,
 249              /* DescriptorType: STRING                  */   0x03u,
 250              /* qwSignature - "MSFT100"                 */   (uint8)'M', 0u, (uint8)'S', 0u, (uint8)'F', 0u, (uint8
             -)'T', 0u,
 251                                                              (uint8)'1', 0u, (uint8)'0', 0u, (uint8)'0', 0u,
 252              /* bMS_VendorCode:                         */   USBUART_GET_EXTENDED_CONFIG_DESCRIPTOR,
 253              /* bPad                                    */   0x00u
 254              };
 255          
 256              /* Extended Configuration Descriptor */
 257          
 258              const uint8 CYCODE USBUART_MSOS_CONFIGURATION_DESCR[USBUART_MSOS_CONF_DESCR_LENGTH] = {
 259              /*  Length of the descriptor 4 bytes       */   0x28u, 0x00u, 0x00u, 0x00u,
 260              /*  Version of the descriptor 2 bytes      */   0x00u, 0x01u,
 261              /*  wIndex - Fixed:INDEX_CONFIG_DESCRIPTOR */   0x04u, 0x00u,
 262              /*  bCount - Count of device functions.    */   0x01u,
 263              /*  Reserved : 7 bytes                     */   0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
 264              /*  bFirstInterfaceNumber                  */   0x00u,
 265              /*  Reserved                               */   0x01u,
 266              /*  compatibleID    - "CYUSB\0\0"          */   (uint8)'C', (uint8)'Y', (uint8)'U', (uint8)'S', (uint8
             -)'B',
 267                                                              0x00u, 0x00u, 0x00u,
 268              /*  subcompatibleID - "00001\0\0"          */   (uint8)'0', (uint8)'0', (uint8)'0', (uint8)'0', (uint8
             -)'1',
 269                                                              0x00u, 0x00u, 0x00u,
 270              /*  Reserved : 6 bytes                     */   0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u
 271              };
 272          
 273          #endif /* USBUART_ENABLE_MSOS_STRING */
 274          
 275          /* DIE ID string descriptor for 8 bytes ID */
 276          #if defined(USBUART_ENABLE_IDSN_STRING)
 277              uint8 USBUART_idSerialNumberStringDescriptor[USBUART_IDSN_DESCR_LENGTH];
 278          #endif /* USBUART_ENABLE_IDSN_STRING */
 279          
 280          
 281          /* [] END OF FILE */
C51 COMPILER V9.51   USBUART_DESCR                                                         05/19/2014 15:47:21 PAGE 6   

ASSEMBLY LISTING OF GENERATED OBJECT CODE




MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =    269    ----
   XDATA SIZE       =     34    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
