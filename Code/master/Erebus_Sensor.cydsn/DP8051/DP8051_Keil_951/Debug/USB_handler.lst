C51 COMPILER V9.51   USB_HANDLER                                                           05/20/2014 04:52:19 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE USB_HANDLER
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\USB_handler.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\USB_handler.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\USB_handler.lst) CD DB NOIP OT(0,SIZE) DF
                    -(DEBUG) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\USB_handler.obj)

line level    source

   1          /* ========================================
   2           *
   3           * (c) Erebus Labs Ltd. 2014
   4           *
   5           * Project: Erebus Labs Sensor
   6           * File:    USB_handler.c
   7           *
   8           * Handles USB communication and USB host-initiated tasks
   9           *
  10           * ========================================
  11          */
  12          
  13          #include "USB_handler.h"
  14          
  15          void Run_USB(){
  16   1          
  17   1          // Power has just been applied to the Vbus pin, so we enter USB communication mode
  18   1      
  19   1          uint8 result = 0;
  20   1          uint8 command = 0;
  21   1          
  22   1          RTC_WriteIntervalMask(NONE_MASK);
  23   1          StartCollection_IRQ_Stop();
  24   1          StopCollection_IRQ_Stop();
  25   1          Vbus_IRQ_Stop();
  26   1      
  27   1          USBUART_Start(0u, USBUART_5V_OPERATION);
  28   1          
  29   1          /* Wait for Device to enumerate */
  30   1          while(!USBUART_GetConfiguration() && Vbus_Read());
  31   1      
  32   1          /* Enumeration is done, enable OUT endpoint for receive data from Host */
  33   1          USBUART_CDC_Init();
  34   1          
  35   1          while(Vbus_Read())
  36   1          {  
  37   2              if (USBUART_DataIsReady() != 0u){   /* Check for input data from PC */
  38   3                  result = retrieve_from_buffer(&command, COMMAND_LENGTH);
  39   3                  
  40   3                  // Discard null bytes
  41   3                  if (command == NULL_BYTE){
  42   4                      continue;
  43   4                  }
  44   3              
  45   3                  if (result == SUCCESS){
  46   4                      
  47   4                      switch (command){
  48   5                      
  49   5                          case IDENTIFY:
  50   5                              send_reply(IDENTIFIER);
  51   5                              break;
  52   5                          
  53   5                          case DUMP_DATA:
C51 COMPILER V9.51   USB_HANDLER                                                           05/20/2014 04:52:19 PAGE 2   

  54   5                              if (export_samples()){
  55   6                                  confirm_export();
  56   6                              }
  57   5                              else{
  58   6                                  send_reply(FAIL);
  59   6                              }
  60   5                              break;
  61   5                              
  62   5                          case GET_SETTINGS:
  63   5                              send_settings();
  64   5                              break;
  65   5                              
  66   5                          case CHANGE_SETTING:
  67   5                              send_reply(SUCCESS);
  68   5                              if (apply_settings() == SUCCESS){
  69   6                                  send_reply(SUCCESS);
  70   6                              }
  71   5                              else{
  72   6                                  send_reply(FAIL);
  73   6                              }                  
  74   5                              break;
  75   5                              
  76   5                          case UPDATE_RTC:
  77   5                              send_reply(SUCCESS);
  78   5                              if (update_RTC() == SUCCESS){
  79   6                                  send_reply(SUCCESS);
  80   6                              }
  81   5                              else{
  82   6                                  send_reply(FAIL);
  83   6                              }
  84   5                              break;
  85   5                           
  86   5                          case RESET_PTRS:
  87   5                              reset_sample_pointers();
  88   5                              send_reply(SUCCESS);
  89   5                              break;
  90   5                              
  91   5                          default:
  92   5                              send_reply(FAIL);
  93   5                              break;
  94   5                      }
  95   4                  }   
  96   3                  else{
  97   4                      send_reply(FAIL);
  98   4                  }
  99   3              }
 100   2          }
 101   1          
 102   1          USB_Close();
 103   1          
 104   1          return;
 105   1      }
 106          
 107          uint8 retrieve_from_buffer(uint8* buffer, uint8 num_bytes){
 108   1          uint16 count = 0;
 109   1          uint8 attempts = 0;
 110   1          uint8 result = FAIL;
 111   1          
 112   1          count = USBUART_GetCount(); 
 113   1          
 114   1          /* If data in buffer is the right amount retrieve_from_buffer it */
 115   1          if (count == num_bytes){
C51 COMPILER V9.51   USB_HANDLER                                                           05/20/2014 04:52:19 PAGE 3   

 116   2              USBUART_GetData(buffer, num_bytes);
 117   2              result = SUCCESS;
 118   2          }
 119   1          /* Otherwise, flush the USB buffer and report fail */
 120   1          else if (count > 0){
 121   2              USBUART_GetChar();
 122   2          }
 123   1          
 124   1          return result;
 125   1      }
 126          
 127          void send_reply(uint8 message){
 128   1         
 129   1          while(!USBUART_CDCIsReady() && Vbus_Read());
 130   1          
 131   1          if (Vbus_Read()){
 132   2              USBUART_PutData(&message, REPLY_LEN);
 133   2          }
 134   1          
 135   1          return;
 136   1      }
 137          
 138          void send_settings(){
 139   1          
 140   1          uint8 settings[NUM_SETTINGS];
 141   1          
 142   1          settings[0] = get_EEPROM_variable(EE_SENSOR);
 143   1          settings[1] = get_EEPROM_variable(EE_SAMPLE_UNIT);
 144   1          settings[2] = get_EEPROM_variable(EE_SAMPLE_INTERVAL);
 145   1          
 146   1          while(!USBUART_CDCIsReady() && Vbus_Read());
 147   1          
 148   1          if (Vbus_Read()){
 149   2              USBUART_PutData((uint8*) &settings, sizeof(settings));
 150   2          }
 151   1          
 152   1          return;   
 153   1      }
 154          
 155          uint8 apply_settings(){
 156   1          uint8 result = FAIL;
 157   1          uint8 settings_buffer[NUM_SETTINGS] = {0};
 158   1          struct sampling_settings new_settings;
 159   1          
 160   1          while (!USBUART_DataIsReady() && Vbus_Read());
 161   1          
 162   1          if (Vbus_Read()){
 163   2              if (retrieve_from_buffer(settings_buffer, NUM_SETTINGS) == SUCCESS){
 164   3                  new_settings.sensor = settings_buffer[0];
 165   3                  new_settings.sample_unit = settings_buffer[1];
 166   3                  new_settings.sample_interval = settings_buffer[2];
 167   3                  
 168   3                  result = update_settings(new_settings);   
 169   3              }
 170   2          } 
 171   1          
 172   1          return result;
 173   1      }
 174          
 175          uint8 update_settings(struct sampling_settings new_settings){
 176   1          
 177   1          uint8* buffer;
C51 COMPILER V9.51   USB_HANDLER                                                           05/20/2014 04:52:19 PAGE 4   

 178   1          float rows_used = 0;
 179   1          uint16 remainder = 0;
 180   1          uint8* src_ptr;
 181   1          uint8* dst_ptr;
 182   1          uint8 i = 0; // loop var
 183   1          float bytes_used = EEPROM_BYTES_USED;
 184   1          uint8 result = SUCCESS;
 185   1          cystatus status;
 186   1          
 187   1          /* Allocate array to hold EEPROM variables */
 188   1          
 189   1          rows_used = ceil(bytes_used/CYDEV_EEPROM_ROW_SIZE);
 190   1          buffer = malloc(((uint16) rows_used) * CYDEV_EEPROM_ROW_SIZE);
 191   1          
 192   1          dst_ptr = buffer;
 193   1          remainder = (rows_used * 16) - EEPROM_BYTES_USED;
 194   1          
 195   1          /* Copy all variables into SRAM */
 196   1          for (i=0; i<EEPROM_BYTES_USED; ++i){
 197   2              *dst_ptr = CY_GET_REG8(CYDEV_EE_BASE + i);
 198   2              ++dst_ptr;      
 199   2          }
 200   1          
 201   1          /* Fill remainder of buffer with zeros */
 202   1          while (i < remainder){
 203   2              *dst_ptr = 0;
 204   2              ++i;
 205   2          }
 206   1          
 207   1          /* Modify variables in SRAM */
 208   1          buffer[0] = new_settings.sensor;
 209   1          buffer[1] = new_settings.sample_unit;
 210   1          buffer[2] = new_settings.sample_interval;
 211   1          
 212   1          /* Disable interrupts and erase EEPROM */
 213   1          CyGlobalIntDisable;
 214   1          status = Re_EEPROM_EraseSector(SECTOR_NUMBER);
 215   1          CyGlobalIntEnable;
 216   1          
 217   1          if (status != CYRET_SUCCESS){
 218   2              result = FAIL;
 219   2              goto exit;
 220   2          }
 221   1          
 222   1          /* Write back modified EEPROM Variables */
 223   1          i = 0;
 224   1          src_ptr = buffer;
 225   1          while ((i < rows_used) && (i < EEPROM_ROWS)){
 226   2              /* Disable interrupts during EEPROM write operation */
 227   2              CyGlobalIntDisable;
 228   2              status = Re_EEPROM_Write(src_ptr, i);
 229   2              CyGlobalIntEnable;
 230   2              
 231   2              if (status != CYRET_SUCCESS){
 232   3                 result = FAIL;
 233   3              goto exit;
 234   3          }
 235   2              src_ptr = src_ptr + CYDEV_EEPROM_ROW_SIZE;
 236   2              ++i;
 237   2          }
 238   1           
 239   1          free(buffer);
C51 COMPILER V9.51   USB_HANDLER                                                           05/20/2014 04:52:19 PAGE 5   

 240   1          
 241   1      exit:   
 242   1          return result;   
 243   1      }
 244          
 245          uint8 export_samples(){
 246   1          
 247   1          uint8 result = SUCCESS;
 248   1          uint8 export_buffer[BUFFER_LEN];
 249   1          uint16 export_index = sample_head_index; 
 250   1          uint16 byte_count = 0;
 251   1          uint8 i = 0;
 252   1          
 253   1          if ((export_index == sample_tail_index) && !mem_full_flag){
 254   2              export_buffer[0] = NO_DATA;
 255   2              
 256   2              for (i=1; i< BUFFER_LEN; ++i){
 257   3                  export_buffer[i] = PADBYTE;
 258   3              }
 259   2              load_buffer(export_buffer);
 260   2                      
 261   2              goto exit;
 262   2          }
 263   1                  
 264   1          /* Loop 1: Iterate over data samples until export pointer meets the tail */
 265   1          do
 266   1          {   
 267   2              /* Loop 2: Iterate over the 64-byte USB buffer, copying bytes into it */
 268   2              while (i < BUFFER_LEN)
 269   2              {
 270   3                  export_buffer[i] = sample_block[export_index];
 271   3                  ++i;
 272   3                  ++export_index;
 273   3                  ++byte_count;
 274   3      
 275   3                  /* Check to make sure we're not incrementing export_ptr past
 276   3                   * the bounds of our sample array - wrap around to first element if true */
 277   3                  if (export_index >= SAMPLE_BLOCK_SIZE){
 278   4                          export_index = 0;
 279   4                  }
 280   3      
 281   3                  /* Once the last sample byte has been put in the buffer,
 282   3                   * add a pad byte to mark the end of this packet */
 283   3                  if (export_index == sample_tail_index){
 284   4                      export_buffer[i] = PADBYTE;
 285   4                      break;
 286   4                  }           
 287   3              }
 288   2              
 289   2              /* Send 64-byte packet to host */
 290   2              load_buffer(export_buffer);
 291   2              i = 0;
 292   2              
 293   2              /* Wait for permission from host to send next packet */
 294   2              if (wait_for_continue() == FAIL){
 295   3                  result = FAIL;
 296   3                  goto exit;
 297   3              }
 298   2          } while (export_index != sample_tail_index);
 299   1          
 300   1          /* Add the size trailer packet to get total transmission size,
 301   1           * excluding pad bytes */
C51 COMPILER V9.51   USB_HANDLER                                                           05/20/2014 04:52:19 PAGE 6   

 302   1          byte_count = byte_count + 4;
 303   1          
 304   1          /* Trailer Packet to Identify End of Sampled Data in Memory */ 
 305   1          export_buffer[0] = 0x80; // End of Data Identifier
 306   1          export_buffer[1] = 0x00;
 307   1          
 308   1          /* Byte count may be up to 16-bits long - pack into two bytes
 309   1           * and copy to buffer */
 310   1          export_buffer[2] = (uint8)(byte_count >> 8);
 311   1          export_buffer[3] = (uint8)0x00FF & byte_count;
 312   1          
 313   1          load_buffer(export_buffer);
 314   1      
 315   1      exit:
 316   1          
 317   1          return result;
 318   1      }
 319          
 320          void load_buffer(uint8* export_buffer){
 321   1          
 322   1          while(!USBUART_CDCIsReady() && Vbus_Read());
 323   1          USBUART_PutData(export_buffer, BUFFER_LEN);
 324   1         
 325   1          /* Add zero-length packet so host completes transaction */
 326   1          while(!USBUART_CDCIsReady() && Vbus_Read());
 327   1          USBUART_PutData(export_buffer, 0);
 328   1      
 329   1          return;
 330   1      }
 331              
 332          uint8 wait_for_continue(){
 333   1          uint8 reply = 0;
 334   1          uint8 retrieve_from_buffer_status = 0;
 335   1          uint8 continue_status = FAIL;
 336   1      
 337   1          while(!reply && Vbus_Read()){
 338   2                  
 339   2              while(!USBUART_GetCount() && Vbus_Read()); 
 340   2              retrieve_from_buffer_status = retrieve_from_buffer(&reply, COMMAND_LENGTH);
 341   2              
 342   2              if (retrieve_from_buffer_status == SUCCESS && reply == NEXT){
 343   3      
 344   3                  continue_status = SUCCESS;
 345   3                  break;
 346   3              }
 347   2              
 348   2              else if (retrieve_from_buffer_status == SUCCESS){
 349   3                  continue_status = FAIL;            
 350   3              }
 351   2          }    
 352   1          
 353   1          return continue_status;
 354   1      }
 355          
 356          void confirm_export(){
 357   1          uint8 command = 0;
 358   1          
 359   1          while(Vbus_Read()){
 360   2              while(!USBUART_DataIsReady() && Vbus_Read());
 361   2                      
 362   2              if (retrieve_from_buffer(&command, COMMAND_LENGTH) == SUCCESS){
 363   3                  
C51 COMPILER V9.51   USB_HANDLER                                                           05/20/2014 04:52:19 PAGE 7   

 364   3                  if (command == SUCCESS){
 365   4                      clear_samples();           
 366   4                      break;
 367   4                  }
 368   3                  
 369   3                  else if (command == NEXT){
 370   4                      send_reply(FAIL);
 371   4                      break;   
 372   4                  }
 373   3                  
 374   3                  else if (command == FAIL){
 375   4                      break;
 376   4                  }            
 377   3              }
 378   2          }
 379   1          
 380   1          return;
 381   1      }
 382          
 383          uint8 update_RTC(){
 384   1          uint8 result = FAIL;
 385   1          uint8 time_buffer[TIME_LENGTH] = {0};
 386   1          RTC_TIME_DATE new_time;
 387   1          
 388   1          while (!USBUART_DataIsReady() && Vbus_Read());
 389   1          
 390   1          if (Vbus_Read()){
 391   2              if (retrieve_from_buffer(time_buffer, TIME_LENGTH) == SUCCESS){
 392   3                  new_time.Year = ((uint16) time_buffer[0]) << 0x8;
 393   3                  new_time.Year = new_time.Year | ((uint16) time_buffer[1]);
 394   3                  new_time.Sec = time_buffer[2];
 395   3                  new_time.Min = time_buffer[3];
 396   3                  new_time.Hour = time_buffer[4];
 397   3                  new_time.DayOfMonth = time_buffer[5];
 398   3                  new_time.Month = time_buffer[6];
 399   3                  
 400   3                  RTC_WriteTime(&new_time);
 401   3                  
 402   3                  result = SUCCESS;
 403   3      
 404   3              }
 405   2          }
 406   1          
 407   1          return result;
 408   1      }
 409          
 410          void reset_sample_pointers(){
 411   1      
 412   1          reset_pointers();
 413   1          
 414   1          return;
 415   1      }
 416          
 417          void USB_Close(){
 418   1          
 419   1          /* Clear pending interrupts that occurred while plugged into host */
 420   1          USBUART_Stop();
 421   1          Vbus_ClearInterrupt();
 422   1          Vbus_IRQ_ClearPending();
 423   1          clear_button_interrupts();
 424   1          USB_waiting = 0;
 425   1          
C51 COMPILER V9.51   USB_HANDLER                                                           05/20/2014 04:52:19 PAGE 8   

 426   1          /* Reapply EEPROM variables to sample parameters in case they were changed */
 427   1          sampling_setup(); 
 428   1          
 429   1          /* Re-enter normal operating mode */
 430   1          StartCollection_IRQ_Start();
 431   1          Vbus_IRQ_Start();   
 432   1      
 433   1          return;
 434   1      }
 435          
 436          /* [] END OF FILE */
C51 COMPILER V9.51   USB_HANDLER                                                           05/20/2014 04:52:19 PAGE 9   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Run_USB (BEGIN)
                                           ; SOURCE LINE # 15
                                           ; SOURCE LINE # 19
0000 900000      R     MOV     DPTR,#result
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 20
0005 900000      R     MOV     DPTR,#command
0008 E4                CLR     A
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 22
000A 7F00              MOV     R7,#00H
000C 120000      E     LCALL   _RTC_WriteIntervalMask
                                           ; SOURCE LINE # 23
000F 120000      E     LCALL   StartCollection_IRQ_Stop
                                           ; SOURCE LINE # 24
0012 120000      E     LCALL   StopCollection_IRQ_Stop
                                           ; SOURCE LINE # 25
0015 120000      E     LCALL   Vbus_IRQ_Stop
                                           ; SOURCE LINE # 27
0018 7D01              MOV     R5,#01H
001A 7F00              MOV     R7,#00H
001C 120000      E     LCALL   _USBUART_Start
001F         ?C0001:
                                           ; SOURCE LINE # 30
001F 120000      E     LCALL   USBUART_GetConfiguration
0022 EF                MOV     A,R7
0023 7006              JNZ     ?C0002
0025 120000      E     LCALL   Vbus_Read
0028 EF                MOV     A,R7
0029 70F4              JNZ     ?C0001
002B         ?C0002:
                                           ; SOURCE LINE # 33
002B 120000      E     LCALL   USBUART_CDC_Init
002E         ?C0003:
                                           ; SOURCE LINE # 35
002E 120000      E     LCALL   Vbus_Read
0031 EF                MOV     A,R7
0032 7003              JNZ     $ + 5H
0034 020000      R     LJMP    ?C0004
                                           ; SOURCE LINE # 36
                                           ; SOURCE LINE # 37
0037 120000      E     LCALL   USBUART_DataIsReady
003A EF                MOV     A,R7
003B 60F1              JZ      ?C0003
                                           ; SOURCE LINE # 38
003D 7B01              MOV     R3,#01H
003F 7A00        R     MOV     R2,#HIGH command
0041 7900        R     MOV     R1,#LOW command
0043 7D01              MOV     R5,#01H
0045 120000      R     LCALL   _retrieve_from_buffer
0048 900000      R     MOV     DPTR,#result
004B EF                MOV     A,R7
004C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 41
004D 900000      R     MOV     DPTR,#command
0050 E0                MOVX    A,@DPTR
0051 FF                MOV     R7,A
0052 EF                MOV     A,R7
C51 COMPILER V9.51   USB_HANDLER                                                           05/20/2014 04:52:19 PAGE 10  

0053 60D9              JZ      ?C0003
                                           ; SOURCE LINE # 42
                                           ; SOURCE LINE # 43
0055         ?C0006:
                                           ; SOURCE LINE # 45
0055 900000      R     MOV     DPTR,#result
0058 E0                MOVX    A,@DPTR
0059 FF                MOV     R7,A
005A EF                MOV     A,R7
005B 6420              XRL     A,#020H
005D 6003              JZ      $ + 5H
005F 020000      R     LJMP    ?C0007
                                           ; SOURCE LINE # 47
0062 900000      R     MOV     DPTR,#command
0065 E0                MOVX    A,@DPTR
0066 FF                MOV     R7,A
0067 EF                MOV     A,R7
0068 120000      E     LCALL   ?C?CCASE
006B 0000        R     DW      ?C0009
006D 01                DB      01H
006E 0000        R     DW      ?C0010
0070 02                DB      02H
0071 0000        R     DW      ?C0013
0073 03                DB      03H
0074 0000        R     DW      ?C0014
0076 04                DB      04H
0077 0000        R     DW      ?C0020
0079 05                DB      05H
007A 0000        R     DW      ?C0017
007C 06                DB      06H
007D 0000              DW      00H
007F 0000        R     DW      ?C0021
                                           ; SOURCE LINE # 49
0081         ?C0009:
                                           ; SOURCE LINE # 50
0081 7F10              MOV     R7,#010H
0083 120000      R     LCALL   _send_reply
                                           ; SOURCE LINE # 51
0086 80A6              SJMP    ?C0003
                                           ; SOURCE LINE # 53
0088         ?C0010:
                                           ; SOURCE LINE # 54
0088 120000      R     LCALL   export_samples
008B EF                MOV     A,R7
008C 6005              JZ      ?C0011
                                           ; SOURCE LINE # 55
008E 120000      R     LCALL   confirm_export
                                           ; SOURCE LINE # 56
0091 809B              SJMP    ?C0003
0093         ?C0011:
                                           ; SOURCE LINE # 57
                                           ; SOURCE LINE # 58
0093 7F30              MOV     R7,#030H
0095 120000      R     LCALL   _send_reply
                                           ; SOURCE LINE # 59
0098         ?C0012:
                                           ; SOURCE LINE # 60
0098 8094              SJMP    ?C0003
                                           ; SOURCE LINE # 62
009A         ?C0013:
                                           ; SOURCE LINE # 63
009A 120000      R     LCALL   send_settings
C51 COMPILER V9.51   USB_HANDLER                                                           05/20/2014 04:52:19 PAGE 11  

                                           ; SOURCE LINE # 64
009D 808F              SJMP    ?C0003
                                           ; SOURCE LINE # 66
009F         ?C0014:
                                           ; SOURCE LINE # 67
009F 7F20              MOV     R7,#020H
00A1 120000      R     LCALL   _send_reply
                                           ; SOURCE LINE # 68
00A4 120000      R     LCALL   apply_settings
00A7 EF                MOV     A,R7
00A8 B42008            CJNE    A,#020H,?C0015
                                           ; SOURCE LINE # 69
00AB 7F20              MOV     R7,#020H
00AD 120000      R     LCALL   _send_reply
                                           ; SOURCE LINE # 70
00B0 020000      R     LJMP    ?C0003
00B3         ?C0015:
                                           ; SOURCE LINE # 71
                                           ; SOURCE LINE # 72
00B3 7F30              MOV     R7,#030H
00B5 120000      R     LCALL   _send_reply
                                           ; SOURCE LINE # 73
00B8         ?C0016:
                                           ; SOURCE LINE # 74
00B8 020000      R     LJMP    ?C0003
                                           ; SOURCE LINE # 76
00BB         ?C0017:
                                           ; SOURCE LINE # 77
00BB 7F20              MOV     R7,#020H
00BD 120000      R     LCALL   _send_reply
                                           ; SOURCE LINE # 78
00C0 120000      R     LCALL   update_RTC
00C3 EF                MOV     A,R7
00C4 B42008            CJNE    A,#020H,?C0018
                                           ; SOURCE LINE # 79
00C7 7F20              MOV     R7,#020H
00C9 120000      R     LCALL   _send_reply
                                           ; SOURCE LINE # 80
00CC 020000      R     LJMP    ?C0003
00CF         ?C0018:
                                           ; SOURCE LINE # 81
                                           ; SOURCE LINE # 82
00CF 7F30              MOV     R7,#030H
00D1 120000      R     LCALL   _send_reply
                                           ; SOURCE LINE # 83
00D4         ?C0019:
                                           ; SOURCE LINE # 84
00D4 020000      R     LJMP    ?C0003
                                           ; SOURCE LINE # 86
00D7         ?C0020:
                                           ; SOURCE LINE # 87
00D7 120000      R     LCALL   reset_sample_pointers
                                           ; SOURCE LINE # 88
00DA 7F20              MOV     R7,#020H
00DC 120000      R     LCALL   _send_reply
                                           ; SOURCE LINE # 89
00DF 020000      R     LJMP    ?C0003
                                           ; SOURCE LINE # 91
00E2         ?C0021:
                                           ; SOURCE LINE # 92
00E2 7F30              MOV     R7,#030H
00E4 120000      R     LCALL   _send_reply
C51 COMPILER V9.51   USB_HANDLER                                                           05/20/2014 04:52:19 PAGE 12  

                                           ; SOURCE LINE # 93
00E7 020000      R     LJMP    ?C0003
                                           ; SOURCE LINE # 94
00EA         ?C0008:
                                           ; SOURCE LINE # 95
00EA 020000      R     LJMP    ?C0003
00ED         ?C0007:
                                           ; SOURCE LINE # 96
                                           ; SOURCE LINE # 97
00ED 7F30              MOV     R7,#030H
00EF 120000      R     LCALL   _send_reply
                                           ; SOURCE LINE # 98
00F2         ?C0022:
                                           ; SOURCE LINE # 99
00F2         ?C0005:
                                           ; SOURCE LINE # 100
00F2 020000      R     LJMP    ?C0003
00F5         ?C0004:
                                           ; SOURCE LINE # 102
00F5 120000      R     LCALL   USB_Close
                                           ; SOURCE LINE # 105
00F8         ?C0023:
00F8 22                RET     
             ; FUNCTION Run_USB (END)

             ; FUNCTION _retrieve_from_buffer (BEGIN)
                                           ; SOURCE LINE # 107
0000 900000      R     MOV     DPTR,#buffer
0003 120000      E     LCALL   ?C?PSTXDATA
0006 900000      R     MOV     DPTR,#num_bytes
0009 ED                MOV     A,R5
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 108
000B 900000      R     MOV     DPTR,#count
000E E4                CLR     A
000F F0                MOVX    @DPTR,A
0010 A3                INC     DPTR
0011 E4                CLR     A
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 109
0013 900000      R     MOV     DPTR,#attempts
0016 E4                CLR     A
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 110
0018 900000      R     MOV     DPTR,#result
001B 7430              MOV     A,#030H
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 112
001E 120000      E     LCALL   USBUART_GetCount
0021 900000      R     MOV     DPTR,#count
0024 EE                MOV     A,R6
0025 F0                MOVX    @DPTR,A
0026 A3                INC     DPTR
0027 EF                MOV     A,R7
0028 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 115
0029 900000      R     MOV     DPTR,#num_bytes
002C E0                MOVX    A,@DPTR
002D FF                MOV     R7,A
002E 7E00              MOV     R6,#00H
0030 900000      R     MOV     DPTR,#count
0033 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   USB_HANDLER                                                           05/20/2014 04:52:19 PAGE 13  

0034 FC                MOV     R4,A
0035 A3                INC     DPTR
0036 E0                MOVX    A,@DPTR
0037 FD                MOV     R5,A
0038 EF                MOV     A,R7
0039 B5051E            CJNE    A,AR5,?C0024
003C EE                MOV     A,R6
003D B5041A            CJNE    A,AR4,?C0024
                                           ; SOURCE LINE # 116
0040 900000      R     MOV     DPTR,#buffer
0043 120000      E     LCALL   ?C?PLDXDATA
0046 900000      R     MOV     DPTR,#num_bytes
0049 E0                MOVX    A,@DPTR
004A FF                MOV     R7,A
004B EF                MOV     A,R7
004C FD                MOV     R5,A
004D 7C00              MOV     R4,#00H
004F 120000      E     LCALL   _USBUART_GetData
                                           ; SOURCE LINE # 117
0052 900000      R     MOV     DPTR,#result
0055 7420              MOV     A,#020H
0057 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 118
0058 8014              SJMP    ?C0025
005A         ?C0024:
                                           ; SOURCE LINE # 120
005A 900000      R     MOV     DPTR,#count
005D E0                MOVX    A,@DPTR
005E FE                MOV     R6,A
005F A3                INC     DPTR
0060 E0                MOVX    A,@DPTR
0061 FF                MOV     R7,A
0062 D3                SETB    C
0063 EF                MOV     A,R7
0064 9400              SUBB    A,#00H
0066 EE                MOV     A,R6
0067 9400              SUBB    A,#00H
0069 4003              JC      ?C0025
                                           ; SOURCE LINE # 121
006B 120000      E     LCALL   USBUART_GetChar
                                           ; SOURCE LINE # 122
006E         ?C0026:
006E         ?C0025:
                                           ; SOURCE LINE # 124
006E 900000      R     MOV     DPTR,#result
0071 E0                MOVX    A,@DPTR
0072 FF                MOV     R7,A
                                           ; SOURCE LINE # 125
0073         ?C0027:
0073 22                RET     
             ; FUNCTION _retrieve_from_buffer (END)

             ; FUNCTION _send_reply (BEGIN)
                                           ; SOURCE LINE # 127
0000 900000      R     MOV     DPTR,#message
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005         ?C0028:
                                           ; SOURCE LINE # 129
0005 120000      E     LCALL   USBUART_CDCIsReady
0008 EF                MOV     A,R7
0009 7006              JNZ     ?C0029
C51 COMPILER V9.51   USB_HANDLER                                                           05/20/2014 04:52:19 PAGE 14  

000B 120000      E     LCALL   Vbus_Read
000E EF                MOV     A,R7
000F 70F4              JNZ     ?C0028
0011         ?C0029:
                                           ; SOURCE LINE # 131
0011 120000      E     LCALL   Vbus_Read
0014 EF                MOV     A,R7
0015 600D              JZ      ?C0031
                                           ; SOURCE LINE # 132
0017 7B01              MOV     R3,#01H
0019 7A00        R     MOV     R2,#HIGH message
001B 7900        R     MOV     R1,#LOW message
001D 7D01              MOV     R5,#01H
001F 7C00              MOV     R4,#00H
0021 120000      E     LCALL   _USBUART_PutData
                                           ; SOURCE LINE # 133
0024         ?C0030:
                                           ; SOURCE LINE # 136
0024         ?C0031:
0024 22                RET     
             ; FUNCTION _send_reply (END)

             ; FUNCTION send_settings (BEGIN)
                                           ; SOURCE LINE # 138
                                           ; SOURCE LINE # 142
0000 7F00              MOV     R7,#00H
0002 7E00              MOV     R6,#00H
0004 120000      E     LCALL   _get_EEPROM_variable
0007 900000      R     MOV     DPTR,#settings
000A EF                MOV     A,R7
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 143
000C 7F01              MOV     R7,#01H
000E 7E00              MOV     R6,#00H
0010 120000      E     LCALL   _get_EEPROM_variable
0013 900000      R     MOV     DPTR,#settings+01H
0016 EF                MOV     A,R7
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 144
0018 7F02              MOV     R7,#02H
001A 7E00              MOV     R6,#00H
001C 120000      E     LCALL   _get_EEPROM_variable
001F 900000      R     MOV     DPTR,#settings+02H
0022 EF                MOV     A,R7
0023 F0                MOVX    @DPTR,A
0024         ?C0032:
                                           ; SOURCE LINE # 146
0024 120000      E     LCALL   USBUART_CDCIsReady
0027 EF                MOV     A,R7
0028 7006              JNZ     ?C0033
002A 120000      E     LCALL   Vbus_Read
002D EF                MOV     A,R7
002E 70F4              JNZ     ?C0032
0030         ?C0033:
                                           ; SOURCE LINE # 148
0030 120000      E     LCALL   Vbus_Read
0033 EF                MOV     A,R7
0034 600D              JZ      ?C0035
                                           ; SOURCE LINE # 149
0036 7B01              MOV     R3,#01H
0038 7A00        R     MOV     R2,#HIGH settings
003A 7900        R     MOV     R1,#LOW settings
C51 COMPILER V9.51   USB_HANDLER                                                           05/20/2014 04:52:19 PAGE 15  

003C 7D03              MOV     R5,#03H
003E 7C00              MOV     R4,#00H
0040 120000      E     LCALL   _USBUART_PutData
                                           ; SOURCE LINE # 150
0043         ?C0034:
                                           ; SOURCE LINE # 153
0043         ?C0035:
0043 22                RET     
             ; FUNCTION send_settings (END)

             ; FUNCTION apply_settings (BEGIN)
                                           ; SOURCE LINE # 155
                                           ; SOURCE LINE # 156
0000 900000      R     MOV     DPTR,#result
0003 7430              MOV     A,#030H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 157
0006 7BFF              MOV     R3,#0FFH
0008 7A00        R     MOV     R2,#HIGH _?ix1000
000A 7900        R     MOV     R1,#LOW _?ix1000
000C C003              PUSH    AR3
000E C002              PUSH    AR2
0010 C001              PUSH    AR1
0012 7B01              MOV     R3,#01H
0014 7A00        R     MOV     R2,#HIGH settings_buffer
0016 7900        R     MOV     R1,#LOW settings_buffer
0018 A801              MOV     R0,AR1
001A AC02              MOV     R4,AR2
001C AD03              MOV     R5,AR3
001E D001              POP     AR1
0020 D002              POP     AR2
0022 D003              POP     AR3
0024 7E00              MOV     R6,#00H
0026 7F03              MOV     R7,#03H
0028 120000      E     LCALL   ?C?COPYAMD
002B         ?C0036:
                                           ; SOURCE LINE # 160
002B 120000      E     LCALL   USBUART_DataIsReady
002E EF                MOV     A,R7
002F 7006              JNZ     ?C0037
0031 120000      E     LCALL   Vbus_Read
0034 EF                MOV     A,R7
0035 70F4              JNZ     ?C0036
0037         ?C0037:
                                           ; SOURCE LINE # 162
0037 120000      E     LCALL   Vbus_Read
003A EF                MOV     A,R7
003B 605B              JZ      ?C0038
                                           ; SOURCE LINE # 163
003D 7B01              MOV     R3,#01H
003F 7A00        R     MOV     R2,#HIGH settings_buffer
0041 7900        R     MOV     R1,#LOW settings_buffer
0043 7D03              MOV     R5,#03H
0045 120000      R     LCALL   _retrieve_from_buffer
0048 EF                MOV     A,R7
0049 6420              XRL     A,#020H
004B 704B              JNZ     ?C0038
                                           ; SOURCE LINE # 164
004D 900000      R     MOV     DPTR,#settings_buffer
0050 E0                MOVX    A,@DPTR
0051 FF                MOV     R7,A
0052 900000      R     MOV     DPTR,#new_settings
C51 COMPILER V9.51   USB_HANDLER                                                           05/20/2014 04:52:19 PAGE 16  

0055 EF                MOV     A,R7
0056 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 165
0057 900000      R     MOV     DPTR,#settings_buffer+01H
005A E0                MOVX    A,@DPTR
005B FF                MOV     R7,A
005C 900000      R     MOV     DPTR,#new_settings+01H
005F EF                MOV     A,R7
0060 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 166
0061 900000      R     MOV     DPTR,#settings_buffer+02H
0064 E0                MOVX    A,@DPTR
0065 FF                MOV     R7,A
0066 900000      R     MOV     DPTR,#new_settings+02H
0069 EF                MOV     A,R7
006A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 168
006B 7B01              MOV     R3,#01H
006D 7A00        R     MOV     R2,#HIGH new_settings
006F 7900        R     MOV     R1,#LOW new_settings
0071 C003              PUSH    AR3
0073 C002              PUSH    AR2
0075 C001              PUSH    AR1
0077 7B01              MOV     R3,#01H
0079 7A00        R     MOV     R2,#HIGH ?update_settings?BYTE
007B 7900        R     MOV     R1,#LOW ?update_settings?BYTE
007D A801              MOV     R0,AR1
007F AC02              MOV     R4,AR2
0081 AD03              MOV     R5,AR3
0083 D001              POP     AR1
0085 D002              POP     AR2
0087 D003              POP     AR3
0089 7E00              MOV     R6,#00H
008B 7F03              MOV     R7,#03H
008D 120000      E     LCALL   ?C?COPYAMD
0090 120000      R     LCALL   update_settings
0093 900000      R     MOV     DPTR,#result
0096 EF                MOV     A,R7
0097 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 169
0098         ?C0039:
                                           ; SOURCE LINE # 170
0098         ?C0038:
                                           ; SOURCE LINE # 172
0098 900000      R     MOV     DPTR,#result
009B E0                MOVX    A,@DPTR
009C FF                MOV     R7,A
                                           ; SOURCE LINE # 173
009D         ?C0040:
009D 22                RET     
             ; FUNCTION apply_settings (END)

             ; FUNCTION update_settings (BEGIN)
                                           ; SOURCE LINE # 175
                                           ; SOURCE LINE # 178
0000 7F00              MOV     R7,#00H
0002 7E00              MOV     R6,#00H
0004 7D00              MOV     R5,#00H
0006 7C00              MOV     R4,#00H
0008 900000      R     MOV     DPTR,#rows_used
000B 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 179
C51 COMPILER V9.51   USB_HANDLER                                                           05/20/2014 04:52:19 PAGE 17  

000E 900000      R     MOV     DPTR,#remainder
0011 E4                CLR     A
0012 F0                MOVX    @DPTR,A
0013 A3                INC     DPTR
0014 E4                CLR     A
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 182
0016 900000      R     MOV     DPTR,#i
0019 E4                CLR     A
001A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 183
001B 7F00              MOV     R7,#00H
001D 7E00              MOV     R6,#00H
001F 7D40              MOV     R5,#040H
0021 7C40              MOV     R4,#040H
0023 900000      R     MOV     DPTR,#bytes_used
0026 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 184
0029 900000      R     MOV     DPTR,#result
002C 7420              MOV     A,#020H
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 189
002F 7B00              MOV     R3,#00H
0031 7A00              MOV     R2,#00H
0033 7980              MOV     R1,#080H
0035 7841              MOV     R0,#041H
0037 900000      R     MOV     DPTR,#bytes_used
003A 120000      E     LCALL   ?C?LLDXDATA
003D 120000      E     LCALL   ?C?FPDIV
0040 120000      E     LCALL   _ceil
0043 900000      R     MOV     DPTR,#rows_used
0046 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 190
0049 900000      R     MOV     DPTR,#rows_used
004C 120000      E     LCALL   ?C?LLDXDATA
004F 120000      E     LCALL   ?C?CASTF
0052 EF                MOV     A,R7
0053 C4                SWAP    A
0054 F8                MOV     R0,A
0055 540F              ANL     A,#0FH
0057 C8                XCH     A,R0
0058 68                XRL     A,R0
0059 FF                MOV     R7,A
005A EE                MOV     A,R6
005B C4                SWAP    A
005C 54F0              ANL     A,#0F0H
005E 48                ORL     A,R0
005F FE                MOV     R6,A
0060 120000      E     LCALL   _malloc
0063 AA06              MOV     R2,AR6
0065 A907              MOV     R1,AR7
0067 7B01              MOV     R3,#01H
0069 900000      R     MOV     DPTR,#buffer
006C 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 192
006F 900000      R     MOV     DPTR,#buffer
0072 120000      E     LCALL   ?C?PLDXDATA
0075 900000      R     MOV     DPTR,#dst_ptr
0078 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 193
007B 7F00              MOV     R7,#00H
007D 7E00              MOV     R6,#00H
C51 COMPILER V9.51   USB_HANDLER                                                           05/20/2014 04:52:19 PAGE 18  

007F 7D80              MOV     R5,#080H
0081 7C41              MOV     R4,#041H
0083 900000      R     MOV     DPTR,#rows_used
0086 120000      E     LCALL   ?C?LLDXDATA0
0089 120000      E     LCALL   ?C?FPMUL
008C 7B00              MOV     R3,#00H
008E 7A00              MOV     R2,#00H
0090 7940              MOV     R1,#040H
0092 78C0              MOV     R0,#0C0H
0094 120000      E     LCALL   ?C?FPADD
0097 120000      E     LCALL   ?C?CASTF
009A 900000      R     MOV     DPTR,#remainder
009D EE                MOV     A,R6
009E F0                MOVX    @DPTR,A
009F A3                INC     DPTR
00A0 EF                MOV     A,R7
00A1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 196
00A2 900000      R     MOV     DPTR,#i
00A5 E4                CLR     A
00A6 F0                MOVX    @DPTR,A
00A7         ?C0041:
00A7 900000      R     MOV     DPTR,#i
00AA E0                MOVX    A,@DPTR
00AB FF                MOV     R7,A
00AC EF                MOV     A,R7
00AD C3                CLR     C
00AE 9403              SUBB    A,#03H
00B0 5031              JNC     ?C0044
                                           ; SOURCE LINE # 197
00B2 900000      R     MOV     DPTR,#i
00B5 E0                MOVX    A,@DPTR
00B6 FF                MOV     R7,A
00B7 7E00              MOV     R6,#00H
00B9 EF                MOV     A,R7
00BA 2400              ADD     A,#00H
00BC FF                MOV     R7,A
00BD EE                MOV     A,R6
00BE 3480              ADDC    A,#080H
00C0 FE                MOV     R6,A
00C1 8F82              MOV     DPL,R7
00C3 8E83              MOV     DPH,R6
00C5 E0                MOVX    A,@DPTR
00C6 FF                MOV     R7,A
00C7 900000      R     MOV     DPTR,#dst_ptr
00CA 120000      E     LCALL   ?C?PLDXDATA
00CD EF                MOV     A,R7
00CE 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 198
00D1 900000      R     MOV     DPTR,#dst_ptr+01H
00D4 E4                CLR     A
00D5 75F001            MOV     B,#01H
00D8 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 199
00DB         ?C0043:
00DB 900000      R     MOV     DPTR,#i
00DE E0                MOVX    A,@DPTR
00DF 04                INC     A
00E0 F0                MOVX    @DPTR,A
00E1 80C4              SJMP    ?C0041
00E3         ?C0042:
00E3         ?C0044:
C51 COMPILER V9.51   USB_HANDLER                                                           05/20/2014 04:52:19 PAGE 19  

                                           ; SOURCE LINE # 202
00E3 900000      R     MOV     DPTR,#i
00E6 E0                MOVX    A,@DPTR
00E7 FF                MOV     R7,A
00E8 7E00              MOV     R6,#00H
00EA 900000      R     MOV     DPTR,#remainder
00ED E0                MOVX    A,@DPTR
00EE FC                MOV     R4,A
00EF A3                INC     DPTR
00F0 E0                MOVX    A,@DPTR
00F1 FD                MOV     R5,A
00F2 C3                CLR     C
00F3 EF                MOV     A,R7
00F4 9D                SUBB    A,R5
00F5 EE                MOV     A,R6
00F6 9C                SUBB    A,R4
00F7 5012              JNC     ?C0045
                                           ; SOURCE LINE # 203
00F9 900000      R     MOV     DPTR,#dst_ptr
00FC 120000      E     LCALL   ?C?PLDXDATA
00FF E4                CLR     A
0100 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 204
0103 900000      R     MOV     DPTR,#i
0106 E0                MOVX    A,@DPTR
0107 04                INC     A
0108 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 205
0109 80D8              SJMP    ?C0044
010B         ?C0045:
                                           ; SOURCE LINE # 208
010B 900000      R     MOV     DPTR,#new_settings
010E E0                MOVX    A,@DPTR
010F FF                MOV     R7,A
0110 900000      R     MOV     DPTR,#buffer
0113 120000      E     LCALL   ?C?PLDXDATA
0116 EF                MOV     A,R7
0117 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 209
011A 900000      R     MOV     DPTR,#new_settings+01H
011D E0                MOVX    A,@DPTR
011E FF                MOV     R7,A
011F 900000      R     MOV     DPTR,#buffer
0122 120000      E     LCALL   ?C?PLDXDATA
0125 E9                MOV     A,R1
0126 2401              ADD     A,#01H
0128 F9                MOV     R1,A
0129 EA                MOV     A,R2
012A 3400              ADDC    A,#00H
012C FA                MOV     R2,A
012D EF                MOV     A,R7
012E 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 210
0131 900000      R     MOV     DPTR,#new_settings+02H
0134 E0                MOVX    A,@DPTR
0135 FF                MOV     R7,A
0136 900000      R     MOV     DPTR,#buffer
0139 120000      E     LCALL   ?C?PLDXDATA
013C E9                MOV     A,R1
013D 2402              ADD     A,#02H
013F F9                MOV     R1,A
0140 EA                MOV     A,R2
C51 COMPILER V9.51   USB_HANDLER                                                           05/20/2014 04:52:19 PAGE 20  

0141 3400              ADDC    A,#00H
0143 FA                MOV     R2,A
0144 EF                MOV     A,R7
0145 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 213
0148 9044F4            MOV     DPTR,#044F4H
014B E0                MOVX    A,@DPTR
014C FF                MOV     R7,A
014D EF                MOV     A,R7
014E 4402              ORL     A,#02H
0150 FF                MOV     R7,A
0151 EF                MOV     A,R7
0152 F0                MOVX    @DPTR,A
0153 00                NOP     
0154 C2AF              CLR     EA
                                           ; SOURCE LINE # 214
0156 7F00              MOV     R7,#00H
0158 120000      E     LCALL   _Re_EEPROM_EraseSector
015B 900000      R     MOV     DPTR,#status
015E EF                MOV     A,R7
015F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 215
0160 D2AF              SETB    EA
0162 9044F4            MOV     DPTR,#044F4H
0165 74FD              MOV     A,#0FDH
0167 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 217
0168 900000      R     MOV     DPTR,#status
016B E0                MOVX    A,@DPTR
016C FF                MOV     R7,A
016D EF                MOV     A,R7
016E 6009              JZ      ?C0046
                                           ; SOURCE LINE # 218
0170 900000      R     MOV     DPTR,#result
0173 7430              MOV     A,#030H
0175 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 219
0176 020000      R     LJMP    exit
                                           ; SOURCE LINE # 220
0179         ?C0046:
                                           ; SOURCE LINE # 223
0179 900000      R     MOV     DPTR,#i
017C E4                CLR     A
017D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 224
017E 900000      R     MOV     DPTR,#buffer
0181 120000      E     LCALL   ?C?PLDXDATA
0184 900000      R     MOV     DPTR,#src_ptr
0187 120000      E     LCALL   ?C?PSTXDATA
018A         ?C0048:
                                           ; SOURCE LINE # 225
018A 900000      R     MOV     DPTR,#i
018D E0                MOVX    A,@DPTR
018E FC                MOV     R4,A
018F E4                CLR     A
0190 120000      E     LCALL   ?C?FCASTC
0193 900000      R     MOV     DPTR,#rows_used
0196 120000      E     LCALL   ?C?LLDXDATA0
0199 120000      E     LCALL   ?C?FPCMP3
019C 6058              JZ      ?C0049
019E 4056              JC      ?C0049
01A0 900000      R     MOV     DPTR,#i
C51 COMPILER V9.51   USB_HANDLER                                                           05/20/2014 04:52:19 PAGE 21  

01A3 E0                MOVX    A,@DPTR
01A4 FF                MOV     R7,A
01A5 EF                MOV     A,R7
01A6 C3                CLR     C
01A7 9480              SUBB    A,#080H
01A9 504B              JNC     ?C0049
                                           ; SOURCE LINE # 227
01AB 9044F4            MOV     DPTR,#044F4H
01AE E0                MOVX    A,@DPTR
01AF FF                MOV     R7,A
01B0 EF                MOV     A,R7
01B1 4402              ORL     A,#02H
01B3 FF                MOV     R7,A
01B4 EF                MOV     A,R7
01B5 F0                MOVX    @DPTR,A
01B6 00                NOP     
01B7 C2AF              CLR     EA
                                           ; SOURCE LINE # 228
01B9 900000      R     MOV     DPTR,#src_ptr
01BC 120000      E     LCALL   ?C?PLDXDATA
01BF 900000      R     MOV     DPTR,#i
01C2 E0                MOVX    A,@DPTR
01C3 FD                MOV     R5,A
01C4 120000      E     LCALL   _Re_EEPROM_Write
01C7 900000      R     MOV     DPTR,#status
01CA EF                MOV     A,R7
01CB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 229
01CC D2AF              SETB    EA
01CE 9044F4            MOV     DPTR,#044F4H
01D1 74FD              MOV     A,#0FDH
01D3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 231
01D4 900000      R     MOV     DPTR,#status
01D7 E0                MOVX    A,@DPTR
01D8 FF                MOV     R7,A
01D9 EF                MOV     A,R7
01DA 6008              JZ      ?C0050
                                           ; SOURCE LINE # 232
01DC 900000      R     MOV     DPTR,#result
01DF 7430              MOV     A,#030H
01E1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 233
01E2 801F              SJMP    exit
                                           ; SOURCE LINE # 234
01E4         ?C0050:
                                           ; SOURCE LINE # 235
01E4 900000      R     MOV     DPTR,#src_ptr+01H
01E7 E4                CLR     A
01E8 75F010            MOV     B,#010H
01EB 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 236
01EE 900000      R     MOV     DPTR,#i
01F1 E0                MOVX    A,@DPTR
01F2 04                INC     A
01F3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 237
01F4 8094              SJMP    ?C0048
01F6         ?C0049:
                                           ; SOURCE LINE # 239
01F6 900000      R     MOV     DPTR,#buffer
01F9 120000      E     LCALL   ?C?PLDXDATA
C51 COMPILER V9.51   USB_HANDLER                                                           05/20/2014 04:52:19 PAGE 22  

01FC AE02              MOV     R6,AR2
01FE AF01              MOV     R7,AR1
0200 120000      E     LCALL   _free
                                           ; SOURCE LINE # 241
0203         exit:
                                           ; SOURCE LINE # 242
0203 900000      R     MOV     DPTR,#result
0206 E0                MOVX    A,@DPTR
0207 FF                MOV     R7,A
                                           ; SOURCE LINE # 243
0208         ?C0051:
0208 22                RET     
             ; FUNCTION update_settings (END)

             ; FUNCTION export_samples (BEGIN)
                                           ; SOURCE LINE # 245
                                           ; SOURCE LINE # 247
0000 900000      R     MOV     DPTR,#result
0003 7420              MOV     A,#020H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 249
0006 900000      E     MOV     DPTR,#sample_head_index
0009 E0                MOVX    A,@DPTR
000A FE                MOV     R6,A
000B A3                INC     DPTR
000C E0                MOVX    A,@DPTR
000D FF                MOV     R7,A
000E 900000      R     MOV     DPTR,#export_index
0011 EE                MOV     A,R6
0012 F0                MOVX    @DPTR,A
0013 A3                INC     DPTR
0014 EF                MOV     A,R7
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 250
0016 900000      R     MOV     DPTR,#byte_count
0019 E4                CLR     A
001A F0                MOVX    @DPTR,A
001B A3                INC     DPTR
001C E4                CLR     A
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 251
001E 900000      R     MOV     DPTR,#i
0021 E4                CLR     A
0022 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 253
0023 900000      E     MOV     DPTR,#sample_tail_index
0026 E0                MOVX    A,@DPTR
0027 FE                MOV     R6,A
0028 A3                INC     DPTR
0029 E0                MOVX    A,@DPTR
002A FF                MOV     R7,A
002B 900000      R     MOV     DPTR,#export_index
002E E0                MOVX    A,@DPTR
002F FC                MOV     R4,A
0030 A3                INC     DPTR
0031 E0                MOVX    A,@DPTR
0032 FD                MOV     R5,A
0033 ED                MOV     A,R5
0034 6F                XRL     A,R7
0035 7002              JNZ     ?C0098
0037 EC                MOV     A,R4
0038 6E                XRL     A,R6
C51 COMPILER V9.51   USB_HANDLER                                                           05/20/2014 04:52:19 PAGE 23  

0039         ?C0098:
0039 7045              JNZ     ?C0060
003B 900000      E     MOV     DPTR,#mem_full_flag
003E E0                MOVX    A,@DPTR
003F FF                MOV     R7,A
0040 EF                MOV     A,R7
0041 703D              JNZ     ?C0060
                                           ; SOURCE LINE # 254
0043 900000      R     MOV     DPTR,#export_buffer
0046 74A0              MOV     A,#0A0H
0048 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 256
0049 900000      R     MOV     DPTR,#i
004C 7401              MOV     A,#01H
004E F0                MOVX    @DPTR,A
004F         ?C0053:
004F 900000      R     MOV     DPTR,#i
0052 E0                MOVX    A,@DPTR
0053 FF                MOV     R7,A
0054 EF                MOV     A,R7
0055 C3                CLR     C
0056 9440              SUBB    A,#040H
0058 501A              JNC     ?C0054
                                           ; SOURCE LINE # 257
005A 900000      R     MOV     DPTR,#i
005D E0                MOVX    A,@DPTR
005E FF                MOV     R7,A
005F 7400        R     MOV     A,#LOW export_buffer
0061 2F                ADD     A,R7
0062 F582              MOV     DPL,A
0064 E4                CLR     A
0065 3400        R     ADDC    A,#HIGH export_buffer
0067 F583              MOV     DPH,A
0069 7440              MOV     A,#040H
006B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 258
006C         ?C0055:
006C 900000      R     MOV     DPTR,#i
006F E0                MOVX    A,@DPTR
0070 04                INC     A
0071 F0                MOVX    @DPTR,A
0072 80DB              SJMP    ?C0053
0074         ?C0054:
                                           ; SOURCE LINE # 259
0074 7B01              MOV     R3,#01H
0076 7A00        R     MOV     R2,#HIGH export_buffer
0078 7900        R     MOV     R1,#LOW export_buffer
007A 120000      R     LCALL   _load_buffer
                                           ; SOURCE LINE # 261
007D 020000      R     LJMP    exit
                                           ; SOURCE LINE # 262
0080         ?C0052:
0080         ?C0059:
                                           ; SOURCE LINE # 266
0080         ?C0060:
                                           ; SOURCE LINE # 268
0080 900000      R     MOV     DPTR,#i
0083 E0                MOVX    A,@DPTR
0084 FF                MOV     R7,A
0085 EF                MOV     A,R7
0086 C3                CLR     C
0087 9440              SUBB    A,#040H
C51 COMPILER V9.51   USB_HANDLER                                                           05/20/2014 04:52:19 PAGE 24  

0089 4003              JC      $ + 5H
008B 020000      R     LJMP    ?C0061
                                           ; SOURCE LINE # 269
                                           ; SOURCE LINE # 270
008E 900000      R     MOV     DPTR,#export_index
0091 E0                MOVX    A,@DPTR
0092 FE                MOV     R6,A
0093 A3                INC     DPTR
0094 E0                MOVX    A,@DPTR
0095 FF                MOV     R7,A
0096 7400        E     MOV     A,#LOW sample_block
0098 2F                ADD     A,R7
0099 F582              MOV     DPL,A
009B 7400        E     MOV     A,#HIGH sample_block
009D 3E                ADDC    A,R6
009E F583              MOV     DPH,A
00A0 E4                CLR     A
00A1 93                MOVC    A,@A+DPTR
00A2 FF                MOV     R7,A
00A3 900000      R     MOV     DPTR,#i
00A6 E0                MOVX    A,@DPTR
00A7 FE                MOV     R6,A
00A8 7400        R     MOV     A,#LOW export_buffer
00AA 2E                ADD     A,R6
00AB F582              MOV     DPL,A
00AD E4                CLR     A
00AE 3400        R     ADDC    A,#HIGH export_buffer
00B0 F583              MOV     DPH,A
00B2 EF                MOV     A,R7
00B3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 271
00B4 900000      R     MOV     DPTR,#i
00B7 E0                MOVX    A,@DPTR
00B8 04                INC     A
00B9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 272
00BA 900000      R     MOV     DPTR,#export_index
00BD E4                CLR     A
00BE 75F001            MOV     B,#01H
00C1 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 273
00C4 900000      R     MOV     DPTR,#byte_count
00C7 E4                CLR     A
00C8 75F001            MOV     B,#01H
00CB 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 277
00CE 900000      R     MOV     DPTR,#export_index
00D1 E0                MOVX    A,@DPTR
00D2 FE                MOV     R6,A
00D3 A3                INC     DPTR
00D4 E0                MOVX    A,@DPTR
00D5 FF                MOV     R7,A
00D6 C3                CLR     C
00D7 EF                MOV     A,R7
00D8 94A8              SUBB    A,#0A8H
00DA EE                MOV     A,R6
00DB 9461              SUBB    A,#061H
00DD 4008              JC      ?C0062
                                           ; SOURCE LINE # 278
00DF 900000      R     MOV     DPTR,#export_index
00E2 E4                CLR     A
00E3 F0                MOVX    @DPTR,A
C51 COMPILER V9.51   USB_HANDLER                                                           05/20/2014 04:52:19 PAGE 25  

00E4 A3                INC     DPTR
00E5 E4                CLR     A
00E6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 279
00E7         ?C0062:
                                           ; SOURCE LINE # 283
00E7 900000      E     MOV     DPTR,#sample_tail_index
00EA E0                MOVX    A,@DPTR
00EB FE                MOV     R6,A
00EC A3                INC     DPTR
00ED E0                MOVX    A,@DPTR
00EE FF                MOV     R7,A
00EF 900000      R     MOV     DPTR,#export_index
00F2 E0                MOVX    A,@DPTR
00F3 FC                MOV     R4,A
00F4 A3                INC     DPTR
00F5 E0                MOVX    A,@DPTR
00F6 FD                MOV     R5,A
00F7 ED                MOV     A,R5
00F8 6F                XRL     A,R7
00F9 7002              JNZ     ?C0099
00FB EC                MOV     A,R4
00FC 6E                XRL     A,R6
00FD         ?C0099:
00FD 7081              JNZ     ?C0060
                                           ; SOURCE LINE # 284
00FF 900000      R     MOV     DPTR,#i
0102 E0                MOVX    A,@DPTR
0103 FF                MOV     R7,A
0104 7400        R     MOV     A,#LOW export_buffer
0106 2F                ADD     A,R7
0107 F582              MOV     DPL,A
0109 E4                CLR     A
010A 3400        R     ADDC    A,#HIGH export_buffer
010C F583              MOV     DPH,A
010E 7440              MOV     A,#040H
0110 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 285
0111 8003              SJMP    ?C0061
                                           ; SOURCE LINE # 286
0113         ?C0063:
                                           ; SOURCE LINE # 287
0113 020000      R     LJMP    ?C0060
0116         ?C0061:
                                           ; SOURCE LINE # 290
0116 7B01              MOV     R3,#01H
0118 7A00        R     MOV     R2,#HIGH export_buffer
011A 7900        R     MOV     R1,#LOW export_buffer
011C 120000      R     LCALL   _load_buffer
                                           ; SOURCE LINE # 291
011F 900000      R     MOV     DPTR,#i
0122 E4                CLR     A
0123 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 294
0124 120000      R     LCALL   wait_for_continue
0127 EF                MOV     A,R7
0128 B43008            CJNE    A,#030H,?C0057
                                           ; SOURCE LINE # 295
012B 900000      R     MOV     DPTR,#result
012E 7430              MOV     A,#030H
0130 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 296
C51 COMPILER V9.51   USB_HANDLER                                                           05/20/2014 04:52:19 PAGE 26  

0131 805B              SJMP    exit
                                           ; SOURCE LINE # 297
0133         ?C0064:
                                           ; SOURCE LINE # 298
0133         ?C0057:
0133 900000      E     MOV     DPTR,#sample_tail_index
0136 E0                MOVX    A,@DPTR
0137 FE                MOV     R6,A
0138 A3                INC     DPTR
0139 E0                MOVX    A,@DPTR
013A FF                MOV     R7,A
013B 900000      R     MOV     DPTR,#export_index
013E E0                MOVX    A,@DPTR
013F FC                MOV     R4,A
0140 A3                INC     DPTR
0141 E0                MOVX    A,@DPTR
0142 FD                MOV     R5,A
0143 ED                MOV     A,R5
0144 6F                XRL     A,R7
0145 7002              JNZ     ?C0100
0147 EC                MOV     A,R4
0148 6E                XRL     A,R6
0149         ?C0100:
0149 6003              JZ      $ + 5H
014B 020000      R     LJMP    ?C0060
014E         ?C0058:
                                           ; SOURCE LINE # 302
014E 900000      R     MOV     DPTR,#byte_count
0151 E4                CLR     A
0152 75F004            MOV     B,#04H
0155 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 305
0158 900000      R     MOV     DPTR,#export_buffer
015B 7480              MOV     A,#080H
015D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 306
015E 900000      R     MOV     DPTR,#export_buffer+01H
0161 E4                CLR     A
0162 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 310
0163 900000      R     MOV     DPTR,#byte_count
0166 E0                MOVX    A,@DPTR
0167 FE                MOV     R6,A
0168 A3                INC     DPTR
0169 E0                MOVX    A,@DPTR
016A FF                MOV     R7,A
016B EE                MOV     A,R6
016C FF                MOV     R7,A
016D 7E00              MOV     R6,#00H
016F 900000      R     MOV     DPTR,#export_buffer+02H
0172 EF                MOV     A,R7
0173 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 311
0174 900000      R     MOV     DPTR,#byte_count
0177 E0                MOVX    A,@DPTR
0178 FE                MOV     R6,A
0179 A3                INC     DPTR
017A E0                MOVX    A,@DPTR
017B FF                MOV     R7,A
017C EF                MOV     A,R7
017D 54FF              ANL     A,#0FFH
017F FF                MOV     R7,A
C51 COMPILER V9.51   USB_HANDLER                                                           05/20/2014 04:52:19 PAGE 27  

0180 900000      R     MOV     DPTR,#export_buffer+03H
0183 EF                MOV     A,R7
0184 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 313
0185 7B01              MOV     R3,#01H
0187 7A00        R     MOV     R2,#HIGH export_buffer
0189 7900        R     MOV     R1,#LOW export_buffer
018B 120000      R     LCALL   _load_buffer
                                           ; SOURCE LINE # 315
018E         exit:
                                           ; SOURCE LINE # 317
018E 900000      R     MOV     DPTR,#result
0191 E0                MOVX    A,@DPTR
0192 FF                MOV     R7,A
                                           ; SOURCE LINE # 318
0193         ?C0065:
0193 22                RET     
             ; FUNCTION export_samples (END)

             ; FUNCTION _load_buffer (BEGIN)
                                           ; SOURCE LINE # 320
0000 900000      R     MOV     DPTR,#export_buffer
0003 120000      E     LCALL   ?C?PSTXDATA
0006         ?C0066:
                                           ; SOURCE LINE # 322
0006 120000      E     LCALL   USBUART_CDCIsReady
0009 EF                MOV     A,R7
000A 7006              JNZ     ?C0067
000C 120000      E     LCALL   Vbus_Read
000F EF                MOV     A,R7
0010 70F4              JNZ     ?C0066
0012         ?C0067:
                                           ; SOURCE LINE # 323
0012 900000      R     MOV     DPTR,#export_buffer
0015 120000      E     LCALL   ?C?PLDXDATA
0018 7D40              MOV     R5,#040H
001A 7C00              MOV     R4,#00H
001C 120000      E     LCALL   _USBUART_PutData
001F         ?C0068:
                                           ; SOURCE LINE # 326
001F 120000      E     LCALL   USBUART_CDCIsReady
0022 EF                MOV     A,R7
0023 7006              JNZ     ?C0069
0025 120000      E     LCALL   Vbus_Read
0028 EF                MOV     A,R7
0029 70F4              JNZ     ?C0068
002B         ?C0069:
                                           ; SOURCE LINE # 327
002B 900000      R     MOV     DPTR,#export_buffer
002E 120000      E     LCALL   ?C?PLDXDATA
0031 7D00              MOV     R5,#00H
0033 7C00              MOV     R4,#00H
0035 120000      E     LCALL   _USBUART_PutData
                                           ; SOURCE LINE # 330
0038         ?C0070:
0038 22                RET     
             ; FUNCTION _load_buffer (END)

             ; FUNCTION wait_for_continue (BEGIN)
                                           ; SOURCE LINE # 332
                                           ; SOURCE LINE # 333
0000 900000      R     MOV     DPTR,#reply
C51 COMPILER V9.51   USB_HANDLER                                                           05/20/2014 04:52:19 PAGE 28  

0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 334
0005 900000      R     MOV     DPTR,#retrieve_from_buffer_status
0008 E4                CLR     A
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 335
000A 900000      R     MOV     DPTR,#continue_status
000D 7430              MOV     A,#030H
000F F0                MOVX    @DPTR,A
0010         ?C0071:
                                           ; SOURCE LINE # 337
0010 900000      R     MOV     DPTR,#reply
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
0015 EF                MOV     A,R7
0016 7050              JNZ     ?C0072
0018 120000      E     LCALL   Vbus_Read
001B EF                MOV     A,R7
001C 604A              JZ      ?C0072
001E         ?C0073:
                                           ; SOURCE LINE # 339
001E 120000      E     LCALL   USBUART_GetCount
0021 EF                MOV     A,R7
0022 4E                ORL     A,R6
0023 7006              JNZ     ?C0074
0025 120000      E     LCALL   Vbus_Read
0028 EF                MOV     A,R7
0029 70F3              JNZ     ?C0073
002B         ?C0074:
                                           ; SOURCE LINE # 340
002B 7B01              MOV     R3,#01H
002D 7A00        R     MOV     R2,#HIGH reply
002F 7900        R     MOV     R1,#LOW reply
0031 7D01              MOV     R5,#01H
0033 120000      R     LCALL   _retrieve_from_buffer
0036 900000      R     MOV     DPTR,#retrieve_from_buffer_status
0039 EF                MOV     A,R7
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 342
003B 900000      R     MOV     DPTR,#retrieve_from_buffer_status
003E E0                MOVX    A,@DPTR
003F FF                MOV     R7,A
0040 EF                MOV     A,R7
0041 B42013            CJNE    A,#020H,?C0075
0044 900000      R     MOV     DPTR,#reply
0047 E0                MOVX    A,@DPTR
0048 FF                MOV     R7,A
0049 EF                MOV     A,R7
004A B4070A            CJNE    A,#07H,?C0075
                                           ; SOURCE LINE # 344
004D 900000      R     MOV     DPTR,#continue_status
0050 7420              MOV     A,#020H
0052 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 345
0053 8013              SJMP    ?C0072
                                           ; SOURCE LINE # 346
0055 80B9              SJMP    ?C0071
0057         ?C0075:
                                           ; SOURCE LINE # 348
0057 900000      R     MOV     DPTR,#retrieve_from_buffer_status
005A E0                MOVX    A,@DPTR
C51 COMPILER V9.51   USB_HANDLER                                                           05/20/2014 04:52:19 PAGE 29  

005B FF                MOV     R7,A
005C EF                MOV     A,R7
005D B420B0            CJNE    A,#020H,?C0071
                                           ; SOURCE LINE # 349
0060 900000      R     MOV     DPTR,#continue_status
0063 7430              MOV     A,#030H
0065 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 350
0066         ?C0077:
0066         ?C0076:
                                           ; SOURCE LINE # 351
0066 80A8              SJMP    ?C0071
0068         ?C0072:
                                           ; SOURCE LINE # 353
0068 900000      R     MOV     DPTR,#continue_status
006B E0                MOVX    A,@DPTR
006C FF                MOV     R7,A
                                           ; SOURCE LINE # 354
006D         ?C0078:
006D 22                RET     
             ; FUNCTION wait_for_continue (END)

             ; FUNCTION confirm_export (BEGIN)
                                           ; SOURCE LINE # 356
                                           ; SOURCE LINE # 357
0000 900000      R     MOV     DPTR,#command
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
0005         ?C0079:
                                           ; SOURCE LINE # 359
0005 120000      E     LCALL   Vbus_Read
0008 EF                MOV     A,R7
0009 6047              JZ      ?C0089
000B         ?C0081:
                                           ; SOURCE LINE # 360
000B 120000      E     LCALL   USBUART_DataIsReady
000E EF                MOV     A,R7
000F 7006              JNZ     ?C0082
0011 120000      E     LCALL   Vbus_Read
0014 EF                MOV     A,R7
0015 70F4              JNZ     ?C0081
0017         ?C0082:
                                           ; SOURCE LINE # 362
0017 7B01              MOV     R3,#01H
0019 7A00        R     MOV     R2,#HIGH command
001B 7900        R     MOV     R1,#LOW command
001D 7D01              MOV     R5,#01H
001F 120000      R     LCALL   _retrieve_from_buffer
0022 EF                MOV     A,R7
0023 B420DF            CJNE    A,#020H,?C0079
                                           ; SOURCE LINE # 364
0026 900000      R     MOV     DPTR,#command
0029 E0                MOVX    A,@DPTR
002A FF                MOV     R7,A
002B EF                MOV     A,R7
002C B42006            CJNE    A,#020H,?C0084
                                           ; SOURCE LINE # 365
002F 120000      E     LCALL   clear_samples
                                           ; SOURCE LINE # 366
0032 22                RET     
                                           ; SOURCE LINE # 367
0033 80D0              SJMP    ?C0079
C51 COMPILER V9.51   USB_HANDLER                                                           05/20/2014 04:52:19 PAGE 30  

0035         ?C0084:
                                           ; SOURCE LINE # 369
0035 900000      R     MOV     DPTR,#command
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A EF                MOV     A,R7
003B B40708            CJNE    A,#07H,?C0086
                                           ; SOURCE LINE # 370
003E 7F30              MOV     R7,#030H
0040 120000      R     LCALL   _send_reply
                                           ; SOURCE LINE # 371
0043 22                RET     
                                           ; SOURCE LINE # 372
0044 80BF              SJMP    ?C0079
0046         ?C0086:
                                           ; SOURCE LINE # 374
0046 900000      R     MOV     DPTR,#command
0049 E0                MOVX    A,@DPTR
004A FF                MOV     R7,A
004B EF                MOV     A,R7
004C B430B6            CJNE    A,#030H,?C0079
                                           ; SOURCE LINE # 375
004F 22                RET     
                                           ; SOURCE LINE # 376
0050         ?C0088:
0050         ?C0087:
0050         ?C0085:
                                           ; SOURCE LINE # 377
0050         ?C0083:
                                           ; SOURCE LINE # 378
0050 80B3              SJMP    ?C0079
0052         ?C0080:
                                           ; SOURCE LINE # 381
0052         ?C0089:
0052 22                RET     
             ; FUNCTION confirm_export (END)

             ; FUNCTION update_RTC (BEGIN)
                                           ; SOURCE LINE # 383
                                           ; SOURCE LINE # 384
0000 900000      R     MOV     DPTR,#result
0003 7430              MOV     A,#030H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 385
0006 7BFF              MOV     R3,#0FFH
0008 7A00        R     MOV     R2,#HIGH _?ix1001
000A 7900        R     MOV     R1,#LOW _?ix1001
000C C003              PUSH    AR3
000E C002              PUSH    AR2
0010 C001              PUSH    AR1
0012 7B01              MOV     R3,#01H
0014 7A00        R     MOV     R2,#HIGH time_buffer
0016 7900        R     MOV     R1,#LOW time_buffer
0018 A801              MOV     R0,AR1
001A AC02              MOV     R4,AR2
001C AD03              MOV     R5,AR3
001E D001              POP     AR1
0020 D002              POP     AR2
0022 D003              POP     AR3
0024 7E00              MOV     R6,#00H
0026 7F07              MOV     R7,#07H
0028 120000      E     LCALL   ?C?COPYAMD
C51 COMPILER V9.51   USB_HANDLER                                                           05/20/2014 04:52:19 PAGE 31  

002B         ?C0090:
                                           ; SOURCE LINE # 388
002B 120000      E     LCALL   USBUART_DataIsReady
002E EF                MOV     A,R7
002F 7006              JNZ     ?C0091
0031 120000      E     LCALL   Vbus_Read
0034 EF                MOV     A,R7
0035 70F4              JNZ     ?C0090
0037         ?C0091:
                                           ; SOURCE LINE # 390
0037 120000      E     LCALL   Vbus_Read
003A EF                MOV     A,R7
003B 7003              JNZ     $ + 5H
003D 020000      R     LJMP    ?C0092
                                           ; SOURCE LINE # 391
0040 7B01              MOV     R3,#01H
0042 7A00        R     MOV     R2,#HIGH time_buffer
0044 7900        R     MOV     R1,#LOW time_buffer
0046 7D07              MOV     R5,#07H
0048 120000      R     LCALL   _retrieve_from_buffer
004B EF                MOV     A,R7
004C 6420              XRL     A,#020H
004E 7071              JNZ     ?C0092
                                           ; SOURCE LINE # 392
0050 900000      R     MOV     DPTR,#time_buffer
0053 E0                MOVX    A,@DPTR
0054 FF                MOV     R7,A
0055 7E00              MOV     R6,#00H
0057 EF                MOV     A,R7
0058 7F00              MOV     R7,#00H
005A FE                MOV     R6,A
005B 900000      R     MOV     DPTR,#new_time+08H
005E EE                MOV     A,R6
005F F0                MOVX    @DPTR,A
0060 A3                INC     DPTR
0061 EF                MOV     A,R7
0062 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 393
0063 900000      R     MOV     DPTR,#time_buffer+01H
0066 E0                MOVX    A,@DPTR
0067 FF                MOV     R7,A
0068 7E00              MOV     R6,#00H
006A 900000      R     MOV     DPTR,#new_time+08H
006D E0                MOVX    A,@DPTR
006E FC                MOV     R4,A
006F A3                INC     DPTR
0070 E0                MOVX    A,@DPTR
0071 FD                MOV     R5,A
0072 EE                MOV     A,R6
0073 4C                ORL     A,R4
0074 FE                MOV     R6,A
0075 EF                MOV     A,R7
0076 4D                ORL     A,R5
0077 FF                MOV     R7,A
0078 900000      R     MOV     DPTR,#new_time+08H
007B EE                MOV     A,R6
007C F0                MOVX    @DPTR,A
007D A3                INC     DPTR
007E EF                MOV     A,R7
007F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 394
0080 900000      R     MOV     DPTR,#time_buffer+02H
C51 COMPILER V9.51   USB_HANDLER                                                           05/20/2014 04:52:19 PAGE 32  

0083 E0                MOVX    A,@DPTR
0084 FF                MOV     R7,A
0085 900000      R     MOV     DPTR,#new_time
0088 EF                MOV     A,R7
0089 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 395
008A 900000      R     MOV     DPTR,#time_buffer+03H
008D E0                MOVX    A,@DPTR
008E FF                MOV     R7,A
008F 900000      R     MOV     DPTR,#new_time+01H
0092 EF                MOV     A,R7
0093 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 396
0094 900000      R     MOV     DPTR,#time_buffer+04H
0097 E0                MOVX    A,@DPTR
0098 FF                MOV     R7,A
0099 900000      R     MOV     DPTR,#new_time+02H
009C EF                MOV     A,R7
009D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 397
009E 900000      R     MOV     DPTR,#time_buffer+05H
00A1 E0                MOVX    A,@DPTR
00A2 FF                MOV     R7,A
00A3 900000      R     MOV     DPTR,#new_time+04H
00A6 EF                MOV     A,R7
00A7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 398
00A8 900000      R     MOV     DPTR,#time_buffer+06H
00AB E0                MOVX    A,@DPTR
00AC FF                MOV     R7,A
00AD 900000      R     MOV     DPTR,#new_time+07H
00B0 EF                MOV     A,R7
00B1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 400
00B2 7B01              MOV     R3,#01H
00B4 7A00        R     MOV     R2,#HIGH new_time
00B6 7900        R     MOV     R1,#LOW new_time
00B8 120000      E     LCALL   _RTC_WriteTime
                                           ; SOURCE LINE # 402
00BB 900000      R     MOV     DPTR,#result
00BE 7420              MOV     A,#020H
00C0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 404
00C1         ?C0093:
                                           ; SOURCE LINE # 405
00C1         ?C0092:
                                           ; SOURCE LINE # 407
00C1 900000      R     MOV     DPTR,#result
00C4 E0                MOVX    A,@DPTR
00C5 FF                MOV     R7,A
                                           ; SOURCE LINE # 408
00C6         ?C0094:
00C6 22                RET     
             ; FUNCTION update_RTC (END)

             ; FUNCTION reset_sample_pointers (BEGIN)
                                           ; SOURCE LINE # 410
                                           ; SOURCE LINE # 412
0000 120000      E     LCALL   reset_pointers
                                           ; SOURCE LINE # 415
0003         ?C0095:
0003 22                RET     
C51 COMPILER V9.51   USB_HANDLER                                                           05/20/2014 04:52:19 PAGE 33  

             ; FUNCTION reset_sample_pointers (END)

             ; FUNCTION USB_Close (BEGIN)
                                           ; SOURCE LINE # 417
                                           ; SOURCE LINE # 420
0000 120000      E     LCALL   USBUART_Stop
                                           ; SOURCE LINE # 421
0003 120000      E     LCALL   Vbus_ClearInterrupt
                                           ; SOURCE LINE # 422
0006 120000      E     LCALL   Vbus_IRQ_ClearPending
                                           ; SOURCE LINE # 423
0009 120000      E     LCALL   clear_button_interrupts
                                           ; SOURCE LINE # 424
000C 900000      E     MOV     DPTR,#USB_waiting
000F E4                CLR     A
0010 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 427
0011 120000      E     LCALL   sampling_setup
                                           ; SOURCE LINE # 430
0014 120000      E     LCALL   StartCollection_IRQ_Start
                                           ; SOURCE LINE # 431
0017 120000      E     LCALL   Vbus_IRQ_Start
                                           ; SOURCE LINE # 434
001A         ?C0096:
001A 22                RET     
             ; FUNCTION USB_Close (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2033    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =    141    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
