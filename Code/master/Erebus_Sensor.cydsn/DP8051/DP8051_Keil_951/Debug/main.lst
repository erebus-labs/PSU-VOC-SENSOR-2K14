C51 COMPILER V9.51   MAIN                                                                  05/30/2014 22:29:09 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\main.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\main.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\main.lst) CD DB NOIP OT(0,SIZE) DF(DEBUG) INCDIR
                    -(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\main.obj)

line level    source

   1          /* ========================================
   2           *
   3           * (c) Erebus Labs Ltd. 2014
   4           *
   5           * Project: Erebus Labs Sensor
   6           * File:    main.c
   7           *
   8           * Contains initializations and main()
   9           *
  10           * ========================================
  11          */
  12          
  13          #include "main.h"
  14          
  15          /*
  16           * ========================================
  17           * Global Variable Definitions
  18           * ========================================
  19          */
  20          
  21          /* Awaiting Action Flags */ 
  22          uint8 start_sampling_waiting = 0;
  23          uint8 stop_sampling_waiting = 0;
  24          uint8 take_sample_waiting = 0;
  25          uint8 USB_waiting = 0;
  26          uint8 battery_check_waiting = 0;
  27          uint8 low_battery_blink_waiting = 0;
  28          
  29          /* Condition Flags */
  30          uint8 sample_enable_flag = 0;
  31          uint8 low_power_flag = 0;
  32          uint8 mem_full_flag = 0;
  33          
  34          uint8 stop_collection_enabled = 0;
  35          uint8 start_collection_enabled = 0;
  36          
  37          /* Counters for Events */
  38          uint8 sample_interrupt_count = 0;
  39          uint8 battery_check_count = 0;
  40          uint8 low_batt_blink_count = 0;
  41          
  42          /* RTC Parameters */
  43          uint8 sample_unit;
  44          uint8 sample_interval;    
  45          
  46          /* Nonvolatile Variables stored in Flash */
  47          const uint8 CYCODE sample_block[SAMPLE_BLOCK_SIZE]; 
  48          const uint16 CYCODE current_sample_indices[MASTER_ROWS * FLASH_ROW_LENGTH];
  49          const uint16 CYCODE master_sample_indices[MASTER_PTR_COUNT];
  50          const uint8 CYCODE mem_full_flash_flag;
  51          
  52          /* SRAM Head/Tail Indexes */
  53          volatile uint16 pointer_head_index;
C51 COMPILER V9.51   MAIN                                                                  05/30/2014 22:29:09 PAGE 2   

  54          volatile uint16 pointer_tail_index;
  55          volatile uint16 sample_head_index;
  56          volatile uint16 sample_tail_index;
  57          
  58          int main()
  59          {
  60   1      
  61   1          /*
  62   1           * ========================================
  63   1           * Initialization
  64   1           * ========================================
  65   1          */
  66   1          
  67   1          /* Retrieve sample pointers from Flash */
  68   1          pointer_head_index = master_sample_indices[HEAD_INDEX];
  69   1          pointer_tail_index = master_sample_indices[TAIL_INDEX];
  70   1          sample_head_index = current_sample_indices[pointer_head_index];
  71   1          sample_tail_index = current_sample_indices[pointer_tail_index];
  72   1          
  73   1          /* Start Components */
  74   1          Re_EEPROM_Start();
  75   1          RTC_Start();
  76   1          LED_PWM_Start();
  77   1          LED_PWM_Sleep();
  78   1          ADC_Start();
  79   1          ADC_Sleep();
  80   1          ADC_MUX_Start();
  81   1          ADC_MUX_Select(SAMPLE_PIN);
  82   1          
  83   1          /* Retrieve sampling parameters and set RTC masks appropriately */
  84   1          sampling_setup();
  85   1          
  86   1          /* Enable global interrupts */
  87   1          CyGlobalIntEnable;
  88   1          
  89   1          /* Enable Individual Component Interrupts */  
  90   1          Vbus_IRQ_Start();
  91   1          ModifyCollection_IRQ_Start();
  92   1          start_collection_enabled = 1;
  93   1          
  94   1          
  95   1          /* Retrieve Full Memory Flag from Flash */
  96   1          mem_full_flag = mem_full_flash_flag;
  97   1          if (mem_full_flag){
  98   2              memory_full();
  99   2          }
 100   1          
 101   1          /* Initial check of battery level */
 102   1          check_battery();
 103   1          
 104   1          /*
 105   1           * ========================================
 106   1           * Main Loop
 107   1           * ========================================
 108   1          */
 109   1          
 110   1          for(;;){       
 111   2      
 112   2              #ifdef SLEEP_EN 
 113   2              /* Prepare for sleep */
 114   2              RTC_DisableInt();
 115   2              CyPmSaveClocks();        
C51 COMPILER V9.51   MAIN                                                                  05/30/2014 22:29:09 PAGE 3   

 116   2            
 117   2              /* Go to sleep for 1 second, allow waking from GPIO interrupts or RTC second pulse */
 118   2              CyPmSleep(PM_SLEEP_TIME_NONE, (PM_SLEEP_SRC_ONE_PPS | PM_SLEEP_SRC_PICU));     
 119   2      
 120   2              /* Restore on wakeup */
 121   2              CyPmRestoreClocks(); 
 122   2              RTC_EnableInt();
 123   2              #endif
 124   2              
 125   2              /* Cycle through and check each flag that may have been set while asleep */
 126   2              if (USB_waiting){
 127   3                  LED_PWM_Wakeup();
 128   3                  LED_on(CYAN);
 129   3                  Run_USB();
 130   3                  clear_button_interrupts();
 131   3                  LED_off();
 132   3              }
 133   2              
 134   2              if (mem_full_flag){
 135   3                  LED_on(RED);
 136   3                  continue;
 137   3              }
 138   2              
 139   2              if (take_sample_waiting){
 140   3                  LED_on(BLUE);
 141   3                  take_sample();          
 142   3                  CyDelay(LED_DELAY);
 143   3                  LED_off();
 144   3                  take_sample_waiting = 0;
 145   3              }
 146   2               
 147   2              if (start_sampling_waiting){
 148   3                  LED_on(GREEN);
 149   3                  clear_button_interrupts();            
 150   3                  start_collection();
 151   3                  CyDelay(LED_DELAY);
 152   3                  LED_off();
 153   3              }
 154   2              
 155   2              if (stop_sampling_waiting){
 156   3                  LED_on(RED);            
 157   3                  clear_button_interrupts();            
 158   3                  stop_collection();           
 159   3                  CyDelay(LED_DELAY);
 160   3                  LED_off();
 161   3              }        
 162   2              
 163   2              if (battery_check_waiting){
 164   3                  check_battery();
 165   3                  battery_check_waiting = 0;
 166   3              }
 167   2              
 168   2              if (low_battery_blink_waiting){
 169   3                  LED_PWM_Wakeup();
 170   3                  LED_on(YELLOW);
 171   3                  CyDelay(LOWBATT_BLINK_DELAY);
 172   3                  LED_off();
 173   3                  low_battery_blink_waiting = 0;
 174   3              }               
 175   2          }
 176   1          
 177   1          return (0);
C51 COMPILER V9.51   MAIN                                                                  05/30/2014 22:29:09 PAGE 4   

 178   1      }
 179          
 180          /* [] END OF FILE */
 181          
C51 COMPILER V9.51   MAIN                                                                  05/30/2014 22:29:09 PAGE 5   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 58
                                           ; SOURCE LINE # 59
                                           ; SOURCE LINE # 68
0000 900000      R     MOV     DPTR,#master_sample_indices
0003 E4                CLR     A
0004 93                MOVC    A,@A+DPTR
0005 FE                MOV     R6,A
0006 7401              MOV     A,#01H
0008 93                MOVC    A,@A+DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#pointer_head_index
000D EE                MOV     A,R6
000E F0                MOVX    @DPTR,A
000F A3                INC     DPTR
0010 EF                MOV     A,R7
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 69
0012 900000      R     MOV     DPTR,#master_sample_indices+02H
0015 E4                CLR     A
0016 93                MOVC    A,@A+DPTR
0017 FE                MOV     R6,A
0018 7401              MOV     A,#01H
001A 93                MOVC    A,@A+DPTR
001B FF                MOV     R7,A
001C 900000      R     MOV     DPTR,#pointer_tail_index
001F EE                MOV     A,R6
0020 F0                MOVX    @DPTR,A
0021 A3                INC     DPTR
0022 EF                MOV     A,R7
0023 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 70
0024 900000      R     MOV     DPTR,#pointer_head_index
0027 E0                MOVX    A,@DPTR
0028 FE                MOV     R6,A
0029 A3                INC     DPTR
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C EF                MOV     A,R7
002D 25E0              ADD     A,ACC
002F FF                MOV     R7,A
0030 EE                MOV     A,R6
0031 33                RLC     A
0032 FE                MOV     R6,A
0033 7400        R     MOV     A,#LOW current_sample_indices
0035 2F                ADD     A,R7
0036 F582              MOV     DPL,A
0038 7400        R     MOV     A,#HIGH current_sample_indices
003A 3E                ADDC    A,R6
003B F583              MOV     DPH,A
003D E4                CLR     A
003E 93                MOVC    A,@A+DPTR
003F FE                MOV     R6,A
0040 7401              MOV     A,#01H
0042 93                MOVC    A,@A+DPTR
0043 FF                MOV     R7,A
0044 900000      R     MOV     DPTR,#sample_head_index
0047 EE                MOV     A,R6
0048 F0                MOVX    @DPTR,A
C51 COMPILER V9.51   MAIN                                                                  05/30/2014 22:29:09 PAGE 6   

0049 A3                INC     DPTR
004A EF                MOV     A,R7
004B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 71
004C 900000      R     MOV     DPTR,#pointer_tail_index
004F E0                MOVX    A,@DPTR
0050 FE                MOV     R6,A
0051 A3                INC     DPTR
0052 E0                MOVX    A,@DPTR
0053 FF                MOV     R7,A
0054 EF                MOV     A,R7
0055 25E0              ADD     A,ACC
0057 FF                MOV     R7,A
0058 EE                MOV     A,R6
0059 33                RLC     A
005A FE                MOV     R6,A
005B 7400        R     MOV     A,#LOW current_sample_indices
005D 2F                ADD     A,R7
005E F582              MOV     DPL,A
0060 7400        R     MOV     A,#HIGH current_sample_indices
0062 3E                ADDC    A,R6
0063 F583              MOV     DPH,A
0065 E4                CLR     A
0066 93                MOVC    A,@A+DPTR
0067 FE                MOV     R6,A
0068 7401              MOV     A,#01H
006A 93                MOVC    A,@A+DPTR
006B FF                MOV     R7,A
006C 900000      R     MOV     DPTR,#sample_tail_index
006F EE                MOV     A,R6
0070 F0                MOVX    @DPTR,A
0071 A3                INC     DPTR
0072 EF                MOV     A,R7
0073 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 74
0074 120000      E     LCALL   Re_EEPROM_Start
                                           ; SOURCE LINE # 75
0077 120000      E     LCALL   RTC_Start
                                           ; SOURCE LINE # 76
007A 120000      E     LCALL   LED_PWM_Start
                                           ; SOURCE LINE # 77
007D 120000      E     LCALL   LED_PWM_Sleep
                                           ; SOURCE LINE # 78
0080 120000      E     LCALL   ADC_Start
                                           ; SOURCE LINE # 79
0083 120000      E     LCALL   ADC_Sleep
                                           ; SOURCE LINE # 80
0086 120000      E     LCALL   ADC_MUX_Start
                                           ; SOURCE LINE # 81
0089 7F00              MOV     R7,#00H
008B 120000      E     LCALL   _ADC_MUX_FastSelect
                                           ; SOURCE LINE # 84
008E 120000      E     LCALL   sampling_setup
                                           ; SOURCE LINE # 87
0091 D2AF              SETB    EA
0093 9044F4            MOV     DPTR,#044F4H
0096 74FD              MOV     A,#0FDH
0098 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 90
0099 120000      E     LCALL   Vbus_IRQ_Start
                                           ; SOURCE LINE # 91
009C 120000      E     LCALL   ModifyCollection_IRQ_Start
C51 COMPILER V9.51   MAIN                                                                  05/30/2014 22:29:09 PAGE 7   

                                           ; SOURCE LINE # 92
009F 900000      R     MOV     DPTR,#start_collection_enabled
00A2 7401              MOV     A,#01H
00A4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 96
00A5 900000      R     MOV     DPTR,#mem_full_flash_flag
00A8 E4                CLR     A
00A9 93                MOVC    A,@A+DPTR
00AA FF                MOV     R7,A
00AB 900000      R     MOV     DPTR,#mem_full_flag
00AE EF                MOV     A,R7
00AF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 97
00B0 900000      R     MOV     DPTR,#mem_full_flag
00B3 E0                MOVX    A,@DPTR
00B4 FF                MOV     R7,A
00B5 EF                MOV     A,R7
00B6 6003              JZ      ?C0001
                                           ; SOURCE LINE # 98
00B8 120000      E     LCALL   memory_full
                                           ; SOURCE LINE # 99
00BB         ?C0001:
                                           ; SOURCE LINE # 102
00BB 120000      E     LCALL   check_battery
                                           ; SOURCE LINE # 110
00BE         ?C0002:
                                           ; SOURCE LINE # 114
00BE 120000      E     LCALL   RTC_DisableInt
                                           ; SOURCE LINE # 115
00C1 120000      E     LCALL   CyPmSaveClocks
                                           ; SOURCE LINE # 118
00C4 7D40              MOV     R5,#040H
00C6 7C08              MOV     R4,#08H
00C8 7F00              MOV     R7,#00H
00CA 120000      E     LCALL   _CyPmSleep
                                           ; SOURCE LINE # 121
00CD 120000      E     LCALL   CyPmRestoreClocks
                                           ; SOURCE LINE # 122
00D0 120000      E     LCALL   RTC_EnableInt
                                           ; SOURCE LINE # 126
00D3 900000      R     MOV     DPTR,#USB_waiting
00D6 E0                MOVX    A,@DPTR
00D7 FF                MOV     R7,A
00D8 EF                MOV     A,R7
00D9 6011              JZ      ?C0004
                                           ; SOURCE LINE # 127
00DB 120000      E     LCALL   LED_PWM_Wakeup
                                           ; SOURCE LINE # 128
00DE 7F06              MOV     R7,#06H
00E0 120000      E     LCALL   _LED_on
                                           ; SOURCE LINE # 129
00E3 120000      E     LCALL   Run_USB
                                           ; SOURCE LINE # 130
00E6 120000      E     LCALL   clear_button_interrupts
                                           ; SOURCE LINE # 131
00E9 120000      E     LCALL   LED_off
                                           ; SOURCE LINE # 132
00EC         ?C0004:
                                           ; SOURCE LINE # 134
00EC 900000      R     MOV     DPTR,#mem_full_flag
00EF E0                MOVX    A,@DPTR
00F0 FF                MOV     R7,A
C51 COMPILER V9.51   MAIN                                                                  05/30/2014 22:29:09 PAGE 8   

00F1 EF                MOV     A,R7
00F2 6007              JZ      ?C0005
                                           ; SOURCE LINE # 135
00F4 7F02              MOV     R7,#02H
00F6 120000      E     LCALL   _LED_on
                                           ; SOURCE LINE # 136
00F9 80C3              SJMP    ?C0002
                                           ; SOURCE LINE # 137
00FB         ?C0005:
                                           ; SOURCE LINE # 139
00FB 900000      R     MOV     DPTR,#take_sample_waiting
00FE E0                MOVX    A,@DPTR
00FF FF                MOV     R7,A
0100 EF                MOV     A,R7
0101 601B              JZ      ?C0006
                                           ; SOURCE LINE # 140
0103 7F04              MOV     R7,#04H
0105 120000      E     LCALL   _LED_on
                                           ; SOURCE LINE # 141
0108 120000      E     LCALL   take_sample
                                           ; SOURCE LINE # 142
010B 7F19              MOV     R7,#019H
010D 7E00              MOV     R6,#00H
010F 7D00              MOV     R5,#00H
0111 7C00              MOV     R4,#00H
0113 120000      E     LCALL   _?CyDelay
                                           ; SOURCE LINE # 143
0116 120000      E     LCALL   LED_off
                                           ; SOURCE LINE # 144
0119 900000      R     MOV     DPTR,#take_sample_waiting
011C E4                CLR     A
011D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 145
011E         ?C0006:
                                           ; SOURCE LINE # 147
011E 900000      R     MOV     DPTR,#start_sampling_waiting
0121 E0                MOVX    A,@DPTR
0122 FF                MOV     R7,A
0123 EF                MOV     A,R7
0124 6019              JZ      ?C0007
                                           ; SOURCE LINE # 148
0126 7F01              MOV     R7,#01H
0128 120000      E     LCALL   _LED_on
                                           ; SOURCE LINE # 149
012B 120000      E     LCALL   clear_button_interrupts
                                           ; SOURCE LINE # 150
012E 120000      E     LCALL   start_collection
                                           ; SOURCE LINE # 151
0131 7F19              MOV     R7,#019H
0133 7E00              MOV     R6,#00H
0135 7D00              MOV     R5,#00H
0137 7C00              MOV     R4,#00H
0139 120000      E     LCALL   _?CyDelay
                                           ; SOURCE LINE # 152
013C 120000      E     LCALL   LED_off
                                           ; SOURCE LINE # 153
013F         ?C0007:
                                           ; SOURCE LINE # 155
013F 900000      R     MOV     DPTR,#stop_sampling_waiting
0142 E0                MOVX    A,@DPTR
0143 FF                MOV     R7,A
0144 EF                MOV     A,R7
C51 COMPILER V9.51   MAIN                                                                  05/30/2014 22:29:09 PAGE 9   

0145 6019              JZ      ?C0008
                                           ; SOURCE LINE # 156
0147 7F02              MOV     R7,#02H
0149 120000      E     LCALL   _LED_on
                                           ; SOURCE LINE # 157
014C 120000      E     LCALL   clear_button_interrupts
                                           ; SOURCE LINE # 158
014F 120000      E     LCALL   stop_collection
                                           ; SOURCE LINE # 159
0152 7F19              MOV     R7,#019H
0154 7E00              MOV     R6,#00H
0156 7D00              MOV     R5,#00H
0158 7C00              MOV     R4,#00H
015A 120000      E     LCALL   _?CyDelay
                                           ; SOURCE LINE # 160
015D 120000      E     LCALL   LED_off
                                           ; SOURCE LINE # 161
0160         ?C0008:
                                           ; SOURCE LINE # 163
0160 900000      R     MOV     DPTR,#battery_check_waiting
0163 E0                MOVX    A,@DPTR
0164 FF                MOV     R7,A
0165 EF                MOV     A,R7
0166 6008              JZ      ?C0009
                                           ; SOURCE LINE # 164
0168 120000      E     LCALL   check_battery
                                           ; SOURCE LINE # 165
016B 900000      R     MOV     DPTR,#battery_check_waiting
016E E4                CLR     A
016F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 166
0170         ?C0009:
                                           ; SOURCE LINE # 168
0170 900000      R     MOV     DPTR,#low_battery_blink_waiting
0173 E0                MOVX    A,@DPTR
0174 FF                MOV     R7,A
0175 EF                MOV     A,R7
0176 7003              JNZ     $ + 5H
0178 020000      R     LJMP    ?C0002
                                           ; SOURCE LINE # 169
017B 120000      E     LCALL   LED_PWM_Wakeup
                                           ; SOURCE LINE # 170
017E 7F05              MOV     R7,#05H
0180 120000      E     LCALL   _LED_on
                                           ; SOURCE LINE # 171
0183 7F64              MOV     R7,#064H
0185 7E00              MOV     R6,#00H
0187 7D00              MOV     R5,#00H
0189 7C00              MOV     R4,#00H
018B 120000      E     LCALL   _?CyDelay
                                           ; SOURCE LINE # 172
018E 120000      E     LCALL   LED_off
                                           ; SOURCE LINE # 173
0191 900000      R     MOV     DPTR,#low_battery_blink_waiting
0194 E4                CLR     A
0195 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 174
0196         ?C0010:
                                           ; SOURCE LINE # 175
0196 020000      R     LJMP    ?C0002
0199         ?C0003:
                                           ; SOURCE LINE # 177
C51 COMPILER V9.51   MAIN                                                                  05/30/2014 22:29:09 PAGE 10  

0199 E4                CLR     A
019A 7E00              MOV     R6,#00H
019C 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 178
019E         ?C0011:
019E 22                RET     
             ; FUNCTION main (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    415    ----
   CONSTANT SIZE    =  26733    ----
   XDATA SIZE       =     24    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
