C51 COMPILER V9.51   MAIN                                                                  05/08/2014 01:47:57 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\main.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\main.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\main.lst) CD DB NOIP OT(0,SIZE) DF(DEBUG) INCDIR
                    -(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\main.obj)

line level    source

   1          /* ========================================
   2           *
   3           * Copyright YOUR COMPANY, THE YEAR
   4           * All Rights Reserved
   5           * UNPUBLISHED, LICENSED SOFTWARE.
   6           *
   7           * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8           * WHICH IS THE PROPERTY OF your company.
   9           *
  10           * ========================================
  11          */
  12          
  13          #include "main.h"
  14          
  15          /* Globals */
  16          
  17          // Flash
  18          const uint8 CYCODE MemoryLocation[EmEEPROMSize]; 
  19          const volatile uint8* TailPtr = (uint8*) MemoryLocation;
  20          const uint8 CYCODE hard_reset_flag;
  21          
  22          // Flags
  23          uint8 low_power_flag;
  24          uint8 USB_waiting;
  25          uint8 DataStart_waiting;
  26          uint8 DataStop_waiting;
  27          uint8 Sample_waiting;
  28          
  29          // RTC
  30          uint8 sample_interval;
  31          
  32          // Sampling
  33          uint16 sample_int_count;
  34          
  35          
  36          int main()
  37          {
  38   1          low_power_flag = 0;
  39   1          USB_waiting = 0;
  40   1          DataStart_waiting = 0;
  41   1          DataStop_waiting = 0;
  42   1          Sample_waiting = 0;
  43   1          sample_int_count = 0;
  44   1          
  45   1          // Check for hard reset flag
  46   1          if (hard_reset_flag){
  47   2              hard_reset();   
  48   2          }
  49   1          /* Initialization*/
  50   1      
  51   1          // Start Components
  52   1          EEPROM_R_Start();
  53   1          RTC_Start();
C51 COMPILER V9.51   MAIN                                                                  05/08/2014 01:47:57 PAGE 2   

  54   1          rtc_setup();
  55   1          LED_PWM_Start();
  56   1          LED_PWM_Sleep();
  57   1          ADC_Start();
  58   1          ADC_Sleep();
  59   1          
  60   1          // Enable global interrupts
  61   1          CyGlobalIntEnable;
  62   1          
  63   1          // Enable individual interrupts as necessary   
  64   1          Vbus_IRQ_Start();
  65   1          StartCollection_IRQ_Start();
  66   1          
  67   1          for(;;){       
  68   2      
  69   2              if (Sample_waiting){
  70   3                  ++sample_int_count;
  71   3          
  72   3                  if (sample_int_count == sample_interval)
  73   3                  {
  74   4                      LED_on(BLUE);
  75   4                      take_sample();
  76   4                      
  77   4                      sample_int_count = 0;
  78   4                      
  79   4                      CyDelay(LED_DELAY);
  80   4                      LED_off();
  81   4                  }
  82   3                  Sample_waiting = 0;
  83   3              }
  84   2                      
  85   2              else if(DataStart_waiting){
  86   3                  LED_on(GREEN);
  87   3                  clear_buttons();            
  88   3                  StartCollection();
  89   3                  CyDelay(LED_DELAY);
  90   3                  LED_off();
  91   3              }
  92   2              
  93   2              else if(DataStop_waiting){
  94   3                  LED_on(RED);            
  95   3                  clear_buttons();            
  96   3                  StopCollection();           
  97   3                  CyDelay(LED_DELAY);
  98   3                  LED_off();
  99   3              }
 100   2              
 101   2              else if(USB_waiting){
 102   3                  LED_PWM_Wakeup();
 103   3                  LED_on(CYAN);
 104   3                  usb_prep();
 105   3                  Run_USB();
 106   3                  usb_exit();
 107   3                  clear_vbus();
 108   3                  LED_off();
 109   3              }
 110   2                      
 111   2              #ifdef SLEEP_EN 
 112   2              RTC_DisableInt();
 113   2              CyPmSaveClocks();        
 114   2            
 115   2              CyPmSleep(PM_SLEEP_TIME_NONE, (PM_SLEEP_SRC_ONE_PPS | PM_SLEEP_SRC_PICU));     
C51 COMPILER V9.51   MAIN                                                                  05/08/2014 01:47:57 PAGE 3   

 116   2      
 117   2              CyPmRestoreClocks(); 
 118   2              RTC_EnableInt();
 119   2      
 120   2              #endif
 121   2             
 122   2          }
 123   1          
 124   1          return (0);
 125   1      }
 126          
 127          /* [] END OF FILE */
C51 COMPILER V9.51   MAIN                                                                  05/08/2014 01:47:57 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 36
                                           ; SOURCE LINE # 37
                                           ; SOURCE LINE # 38
0000 900000      R     MOV     DPTR,#low_power_flag
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 39
0005 900000      R     MOV     DPTR,#USB_waiting
0008 E4                CLR     A
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 40
000A 900000      R     MOV     DPTR,#DataStart_waiting
000D E4                CLR     A
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 41
000F 900000      R     MOV     DPTR,#DataStop_waiting
0012 E4                CLR     A
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 42
0014 900000      R     MOV     DPTR,#Sample_waiting
0017 E4                CLR     A
0018 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 43
0019 900000      R     MOV     DPTR,#sample_int_count
001C E4                CLR     A
001D F0                MOVX    @DPTR,A
001E A3                INC     DPTR
001F E4                CLR     A
0020 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 46
0021 900000      R     MOV     DPTR,#hard_reset_flag
0024 E4                CLR     A
0025 93                MOVC    A,@A+DPTR
0026 FF                MOV     R7,A
0027 EF                MOV     A,R7
0028 6003              JZ      ?C0001
                                           ; SOURCE LINE # 47
002A 120000      E     LCALL   hard_reset
                                           ; SOURCE LINE # 48
002D         ?C0001:
                                           ; SOURCE LINE # 52
002D 120000      E     LCALL   EEPROM_R_Start
                                           ; SOURCE LINE # 53
0030 120000      E     LCALL   RTC_Start
                                           ; SOURCE LINE # 54
0033 120000      E     LCALL   rtc_setup
                                           ; SOURCE LINE # 55
0036 120000      E     LCALL   LED_PWM_Start
                                           ; SOURCE LINE # 56
0039 120000      E     LCALL   LED_PWM_Sleep
                                           ; SOURCE LINE # 57
003C 120000      E     LCALL   ADC_Start
                                           ; SOURCE LINE # 58
003F 120000      E     LCALL   ADC_Sleep
                                           ; SOURCE LINE # 61
0042 D2AF              SETB    EA
0044 9044F4            MOV     DPTR,#044F4H
0047 74FD              MOV     A,#0FDH
C51 COMPILER V9.51   MAIN                                                                  05/08/2014 01:47:57 PAGE 5   

0049 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 64
004A 120000      E     LCALL   Vbus_IRQ_Start
                                           ; SOURCE LINE # 65
004D 120000      E     LCALL   StartCollection_IRQ_Start
                                           ; SOURCE LINE # 67
0050         ?C0002:
                                           ; SOURCE LINE # 69
0050 900000      R     MOV     DPTR,#Sample_waiting
0053 E0                MOVX    A,@DPTR
0054 FF                MOV     R7,A
0055 EF                MOV     A,R7
0056 6046              JZ      ?C0004
                                           ; SOURCE LINE # 70
0058 900000      R     MOV     DPTR,#sample_int_count
005B E4                CLR     A
005C 75F001            MOV     B,#01H
005F 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 72
0062 900000      R     MOV     DPTR,#sample_interval
0065 E0                MOVX    A,@DPTR
0066 FF                MOV     R7,A
0067 7E00              MOV     R6,#00H
0069 900000      R     MOV     DPTR,#sample_int_count
006C E0                MOVX    A,@DPTR
006D FC                MOV     R4,A
006E A3                INC     DPTR
006F E0                MOVX    A,@DPTR
0070 FD                MOV     R5,A
0071 EF                MOV     A,R7
0072 B50522            CJNE    A,AR5,?C0005
0075 EE                MOV     A,R6
0076 B5041E            CJNE    A,AR4,?C0005
                                           ; SOURCE LINE # 73
                                           ; SOURCE LINE # 74
0079 7F02              MOV     R7,#02H
007B 120000      E     LCALL   _LED_on
                                           ; SOURCE LINE # 75
007E 120000      E     LCALL   take_sample
                                           ; SOURCE LINE # 77
0081 900000      R     MOV     DPTR,#sample_int_count
0084 E4                CLR     A
0085 F0                MOVX    @DPTR,A
0086 A3                INC     DPTR
0087 E4                CLR     A
0088 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 79
0089 7F19              MOV     R7,#019H
008B 7E00              MOV     R6,#00H
008D 7D00              MOV     R5,#00H
008F 7C00              MOV     R4,#00H
0091 120000      E     LCALL   _?CyDelay
                                           ; SOURCE LINE # 80
0094 120000      E     LCALL   LED_off
                                           ; SOURCE LINE # 81
0097         ?C0005:
                                           ; SOURCE LINE # 82
0097 900000      R     MOV     DPTR,#Sample_waiting
009A E4                CLR     A
009B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 83
009C 8065              SJMP    ?C0006
C51 COMPILER V9.51   MAIN                                                                  05/08/2014 01:47:57 PAGE 6   

009E         ?C0004:
                                           ; SOURCE LINE # 85
009E 900000      R     MOV     DPTR,#DataStart_waiting
00A1 E0                MOVX    A,@DPTR
00A2 FF                MOV     R7,A
00A3 EF                MOV     A,R7
00A4 601B              JZ      ?C0007
                                           ; SOURCE LINE # 86
00A6 7F04              MOV     R7,#04H
00A8 120000      E     LCALL   _LED_on
                                           ; SOURCE LINE # 87
00AB 120000      E     LCALL   clear_buttons
                                           ; SOURCE LINE # 88
00AE 120000      E     LCALL   StartCollection
                                           ; SOURCE LINE # 89
00B1 7F19              MOV     R7,#019H
00B3 7E00              MOV     R6,#00H
00B5 7D00              MOV     R5,#00H
00B7 7C00              MOV     R4,#00H
00B9 120000      E     LCALL   _?CyDelay
                                           ; SOURCE LINE # 90
00BC 120000      E     LCALL   LED_off
                                           ; SOURCE LINE # 91
00BF 8042              SJMP    ?C0006
00C1         ?C0007:
                                           ; SOURCE LINE # 93
00C1 900000      R     MOV     DPTR,#DataStop_waiting
00C4 E0                MOVX    A,@DPTR
00C5 FF                MOV     R7,A
00C6 EF                MOV     A,R7
00C7 601B              JZ      ?C0009
                                           ; SOURCE LINE # 94
00C9 7F01              MOV     R7,#01H
00CB 120000      E     LCALL   _LED_on
                                           ; SOURCE LINE # 95
00CE 120000      E     LCALL   clear_buttons
                                           ; SOURCE LINE # 96
00D1 120000      E     LCALL   StopCollection
                                           ; SOURCE LINE # 97
00D4 7F19              MOV     R7,#019H
00D6 7E00              MOV     R6,#00H
00D8 7D00              MOV     R5,#00H
00DA 7C00              MOV     R4,#00H
00DC 120000      E     LCALL   _?CyDelay
                                           ; SOURCE LINE # 98
00DF 120000      E     LCALL   LED_off
                                           ; SOURCE LINE # 99
00E2 801F              SJMP    ?C0006
00E4         ?C0009:
                                           ; SOURCE LINE # 101
00E4 900000      R     MOV     DPTR,#USB_waiting
00E7 E0                MOVX    A,@DPTR
00E8 FF                MOV     R7,A
00E9 EF                MOV     A,R7
00EA 6017              JZ      ?C0006
                                           ; SOURCE LINE # 102
00EC 120000      E     LCALL   LED_PWM_Wakeup
                                           ; SOURCE LINE # 103
00EF 7F06              MOV     R7,#06H
00F1 120000      E     LCALL   _LED_on
                                           ; SOURCE LINE # 104
00F4 120000      E     LCALL   usb_prep
C51 COMPILER V9.51   MAIN                                                                  05/08/2014 01:47:57 PAGE 7   

                                           ; SOURCE LINE # 105
00F7 120000      E     LCALL   Run_USB
                                           ; SOURCE LINE # 106
00FA 120000      E     LCALL   usb_exit
                                           ; SOURCE LINE # 107
00FD 120000      E     LCALL   clear_vbus
                                           ; SOURCE LINE # 108
0100 120000      E     LCALL   LED_off
                                           ; SOURCE LINE # 109
0103         ?C0011:
0103         ?C0010:
0103         ?C0008:
0103         ?C0006:
                                           ; SOURCE LINE # 112
0103 120000      E     LCALL   RTC_DisableInt
                                           ; SOURCE LINE # 113
0106 120000      E     LCALL   CyPmSaveClocks
                                           ; SOURCE LINE # 115
0109 7D40              MOV     R5,#040H
010B 7C08              MOV     R4,#08H
010D 7F00              MOV     R7,#00H
010F 120000      E     LCALL   _CyPmSleep
                                           ; SOURCE LINE # 117
0112 120000      E     LCALL   CyPmRestoreClocks
                                           ; SOURCE LINE # 118
0115 120000      E     LCALL   RTC_EnableInt
                                           ; SOURCE LINE # 122
0118 020000      R     LJMP    ?C0002
011B         ?C0003:
                                           ; SOURCE LINE # 124
011B E4                CLR     A
011C 7E00              MOV     R6,#00H
011E 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 125
0120         ?C0012:
0120 22                RET     
             ; FUNCTION main (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    289    ----
   CONSTANT SIZE    =   1025    ----
   XDATA SIZE       =     11    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
