C51 COMPILER V9.51   INTERFACE                                                             04/28/2014 15:03:36 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE INTERFACE
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\Interface.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Interface.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\Interface.lst) CD DB NOIP OT(0,SIZE) DF(DEB
                    -UG) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\Interface.obj)

line level    source

   1          /* ========================================
   2           *
   3           * Copyright YOUR COMPANY, THE YEAR
   4           * All Rights Reserved
   5           * UNPUBLISHED, LICENSED SOFTWARE.
   6           *
   7           * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8           * WHICH IS THE PROPERTY OF your company.
   9           *
  10           * ========================================
  11          */
  12          
  13          #include "Interface.h"
  14          
  15          void Hibernate_ISR(){
  16   1          
  17   1          return;   
  18   1      }
  19          
  20          void StartCollection_ISR(){
  21   1          
  22   1          struct header_package header;
  23   1          uint8 header_size = sizeof(struct header_package);
  24   1          
  25   1          /* Store Header */
  26   1          header.start_block = STARTBLOCK;
  27   1          header.sample_sensor = get_variable(EE_SENSOR);
  28   1          header.sample_unit = get_variable(EE_SAMPLE_UNIT);
  29   1          header.sample_interval = get_variable(EE_SAMPLE_INTERVAL);
  30   1          header.second = RTC_ReadSecond();
  31   1          header.minute = RTC_ReadMinute();
  32   1          header.hour = RTC_ReadHour();
  33   1          header.day = RTC_ReadDayOfMonth();
  34   1          header.month = RTC_ReadMonth();
  35   1          header.year = RTC_ReadYear();
  36   1      
  37   1          Em_EEPROM_Write((uint8*) (&header), TailPtr, header_size);
  38   1          TailPtr = TailPtr + header_size;
  39   1          
  40   1          TakeSample_IRQ_Start();
  41   1          StopCollection_IRQ_Start();
  42   1          
  43   1          return;   
  44   1      }
  45          
  46          void StopCollection_ISR(){
  47   1          
  48   1          TakeSample_IRQ_Stop();
  49   1          
  50   1          return;   
  51   1      }
  52          
  53          /* [] END OF FILE */
C51 COMPILER V9.51   INTERFACE                                                             04/28/2014 15:03:36 PAGE 2   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Hibernate_ISR (BEGIN)
                                           ; SOURCE LINE # 15
                                           ; SOURCE LINE # 18
0000         ?C0001:
0000 22                RET     
             ; FUNCTION Hibernate_ISR (END)

             ; FUNCTION StartCollection_ISR (BEGIN)
                                           ; SOURCE LINE # 20
                                           ; SOURCE LINE # 23
0000 900000      R     MOV     DPTR,#header_size
0003 740C              MOV     A,#0CH
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 26
0006 900000      R     MOV     DPTR,#header
0009 7420              MOV     A,#020H
000B F0                MOVX    @DPTR,A
000C A3                INC     DPTR
000D E4                CLR     A
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 27
000F 7F00              MOV     R7,#00H
0011 7E00              MOV     R6,#00H
0013 120000      E     LCALL   _get_variable
0016 900000      R     MOV     DPTR,#header+04H
0019 EF                MOV     A,R7
001A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 28
001B 7F01              MOV     R7,#01H
001D 7E00              MOV     R6,#00H
001F 120000      E     LCALL   _get_variable
0022 900000      R     MOV     DPTR,#header+05H
0025 EF                MOV     A,R7
0026 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 29
0027 7F02              MOV     R7,#02H
0029 7E00              MOV     R6,#00H
002B 120000      E     LCALL   _get_variable
002E 900000      R     MOV     DPTR,#header+06H
0031 EF                MOV     A,R7
0032 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 30
0033 120000      E     LCALL   RTC_ReadSecond
0036 900000      R     MOV     DPTR,#header+07H
0039 EF                MOV     A,R7
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 31
003B 120000      E     LCALL   RTC_ReadMinute
003E 900000      R     MOV     DPTR,#header+08H
0041 EF                MOV     A,R7
0042 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 32
0043 120000      E     LCALL   RTC_ReadHour
0046 900000      R     MOV     DPTR,#header+09H
0049 EF                MOV     A,R7
004A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 33
004B 120000      E     LCALL   RTC_ReadDayOfMonth
004E 900000      R     MOV     DPTR,#header+0AH
C51 COMPILER V9.51   INTERFACE                                                             04/28/2014 15:03:36 PAGE 3   

0051 EF                MOV     A,R7
0052 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 34
0053 120000      E     LCALL   RTC_ReadMonth
0056 900000      R     MOV     DPTR,#header+0BH
0059 EF                MOV     A,R7
005A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 35
005B 120000      E     LCALL   RTC_ReadYear
005E 900000      R     MOV     DPTR,#header+02H
0061 EE                MOV     A,R6
0062 F0                MOVX    @DPTR,A
0063 A3                INC     DPTR
0064 EF                MOV     A,R7
0065 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 37
0066 7B01              MOV     R3,#01H
0068 7A00        R     MOV     R2,#HIGH header
006A 7900        R     MOV     R1,#LOW header
006C C003              PUSH    AR3
006E C002              PUSH    AR2
0070 C001              PUSH    AR1
0072 900000      E     MOV     DPTR,#TailPtr
0075 120000      E     LCALL   ?C?PLDXDATA
0078 900000      E     MOV     DPTR,#?_Em_EEPROM_Write?BYTE+03H
007B 120000      E     LCALL   ?C?PSTXDATA
007E 900000      R     MOV     DPTR,#header_size
0081 E0                MOVX    A,@DPTR
0082 FF                MOV     R7,A
0083 7E00              MOV     R6,#00H
0085 900000      E     MOV     DPTR,#?_Em_EEPROM_Write?BYTE+06H
0088 EE                MOV     A,R6
0089 F0                MOVX    @DPTR,A
008A A3                INC     DPTR
008B EF                MOV     A,R7
008C F0                MOVX    @DPTR,A
008D D001              POP     AR1
008F D002              POP     AR2
0091 D003              POP     AR3
0093 120000      E     LCALL   _Em_EEPROM_Write
                                           ; SOURCE LINE # 38
0096 900000      R     MOV     DPTR,#header_size
0099 E0                MOVX    A,@DPTR
009A FF                MOV     R7,A
009B 7E00              MOV     R6,#00H
009D 900000      E     MOV     DPTR,#TailPtr+01H
00A0 EE                MOV     A,R6
00A1 8FF0              MOV     B,R7
00A3 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 40
00A6 120000      E     LCALL   TakeSample_IRQ_Start
                                           ; SOURCE LINE # 41
00A9 120000      E     LCALL   StopCollection_IRQ_Start
                                           ; SOURCE LINE # 44
00AC         ?C0002:
00AC 22                RET     
             ; FUNCTION StartCollection_ISR (END)

             ; FUNCTION StopCollection_ISR (BEGIN)
                                           ; SOURCE LINE # 46
                                           ; SOURCE LINE # 48
0000 120000      E     LCALL   TakeSample_IRQ_Stop
C51 COMPILER V9.51   INTERFACE                                                             04/28/2014 15:03:36 PAGE 4   

                                           ; SOURCE LINE # 51
0003         ?C0003:
0003 22                RET     
             ; FUNCTION StopCollection_ISR (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    178    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     13    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
