C51 COMPILER V9.51   INTERFACE                                                             05/07/2014 04:57:58 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE INTERFACE
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\Interface.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Interface.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\Interface.lst) CD DB NOIP OT(0,SIZE) DF(DEB
                    -UG) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\Interface.obj)

line level    source

   1          /* ========================================
   2           *
   3           * Copyright YOUR COMPANY, THE YEAR
   4           * All Rights Reserved
   5           * UNPUBLISHED, LICENSED SOFTWARE.
   6           *
   7           * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8           * WHICH IS THE PROPERTY OF your company.
   9           *
  10           * ========================================
  11          */
  12          
  13          #include "Interface.h"
  14          
  15          void StartCollection(){
  16   1          
  17   1          struct header_package header;
  18   1          uint8 header_size = sizeof(struct header_package);
  19   1          RTC_TIME_DATE* datetime = RTC_ReadTime();
  20   1          
  21   1          /* Store Header */
  22   1          header.start_block = STARTBLOCK;
  23   1          header.sample_sensor = get_variable(EE_SENSOR);
  24   1          header.sample_unit = get_variable(EE_SAMPLE_UNIT);
  25   1          header.sample_interval = get_variable(EE_SAMPLE_INTERVAL);
  26   1          header.second = datetime -> Sec;
  27   1          header.minute = datetime -> Min;
  28   1          header.hour = datetime -> Hour;
  29   1          header.day = datetime -> DayOfMonth;
  30   1          header.month = datetime -> Month;
  31   1          header.year = datetime -> Year;
  32   1      
  33   1          Em_EEPROM_Write((uint8*) (&header), TailPtr, header_size);
  34   1          TailPtr = TailPtr + header_size;
  35   1          
  36   1          StopCollection_IRQ_Start();
  37   1          StartCollection_IRQ_Stop();
  38   1          RTC_WriteIntervalMask(RTC_int_mask);
  39   1          
  40   1          return;   
  41   1      }
  42          
  43          void StopCollection(){
  44   1          
  45   1          StartCollection_IRQ_Start();
  46   1          StopCollection_IRQ_Stop();
  47   1          RTC_WriteIntervalMask(NONE_MASK);
  48   1          
  49   1          return;   
  50   1      }
  51          
  52          void LED_on(uint8 target){
  53   1          
C51 COMPILER V9.51   INTERFACE                                                             05/07/2014 04:57:58 PAGE 2   

  54   1          switch (target){   
  55   2          
  56   2              case USB:
  57   2                  /* Green */
  58   2                  LED0_CTRL_Write(GREEN);
  59   2                  LED1_CTRL_Write(GREEN);
  60   2                  break;
  61   2              
  62   2              case ERROR:
  63   2                  /* Red */
  64   2                  LED0_CTRL_Write(RED);
  65   2                  LED1_CTRL_Write(RED);
  66   2                  break;
  67   2                  
  68   2              case LOWBATT:
  69   2                  /* Yellow */
  70   2                  LED0_CTRL_Write(GREEN);
  71   2                  LED1_CTRL_Write(RED);
  72   2                  break;
  73   2              
  74   2              case SAMPLE:
  75   2                  /* BLUE */
  76   2                  LED0_CTRL_Write(BLUE);
  77   2                  LED1_CTRL_Write(GREEN);
  78   2                  break;  
  79   2                  
  80   2              case MEM:
  81   2                  /* Cyan */
  82   2                  LED0_CTRL_Write(BLUE);
  83   2                  LED1_CTRL_Write(BLUE);  
  84   2                  break;
  85   2              
  86   2              case BUTTON:
  87   2                  /* Magenta */
  88   2                  LED0_CTRL_Write(BLUE);
  89   2                  LED1_CTRL_Write(RED);
  90   2                  break;
  91   2          }
  92   1          return;
  93   1      }
  94          
  95          void LED_off(uint8 target){
  96   1          
  97   1          switch (target){
  98   2              
  99   2              case ALL:
 100   2                  LED0_CTRL_Write(OFF);
 101   2                  LED1_CTRL_Write(OFF);
 102   2                  break;
 103   2              
 104   2              case USB:
 105   2                  LED0_CTRL_Write(OFF);
 106   2                  LED1_CTRL_Write(OFF);
 107   2                  break;
 108   2         
 109   2              case SAMPLE:
 110   2                      
 111   2                  if (low_power_flag){
 112   3                      LED0_CTRL_Write(GREEN);
 113   3                      LED1_CTRL_Write(RED);
 114   3                  }
 115   2                  
C51 COMPILER V9.51   INTERFACE                                                             05/07/2014 04:57:58 PAGE 3   

 116   2                  else{
 117   3                      LED0_CTRL_Write(OFF);
 118   3                      LED1_CTRL_Write(OFF);
 119   3                  }      
 120   2                  break;  
 121   2                  
 122   2              case MEM:         
 123   2                  if (Vbus_Read()){
 124   3                      LED0_CTRL_Write(GREEN);
 125   3                      LED1_CTRL_Write(GREEN);
 126   3                  }
 127   2                  else{
 128   3                      LED0_CTRL_Write(OFF);
 129   3                      LED1_CTRL_Write(OFF);
 130   3                  } 
 131   2                  break;
 132   2                  
 133   2              case BUTTON:
 134   2                  LED0_CTRL_Write(OFF);
 135   2                  LED1_CTRL_Write(OFF);
 136   2                  break;
 137   2          }
 138   1          
 139   1          return;
 140   1      }
 141          
 142          /* [] END OF FILE */
C51 COMPILER V9.51   INTERFACE                                                             05/07/2014 04:57:58 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION StartCollection (BEGIN)
                                           ; SOURCE LINE # 15
                                           ; SOURCE LINE # 18
0000 900000      R     MOV     DPTR,#header_size
0003 740C              MOV     A,#0CH
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 19
0006 120000      E     LCALL   RTC_ReadTime
0009 900000      R     MOV     DPTR,#datetime
000C 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 22
000F 900000      R     MOV     DPTR,#header
0012 7420              MOV     A,#020H
0014 F0                MOVX    @DPTR,A
0015 A3                INC     DPTR
0016 E4                CLR     A
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 23
0018 7F00              MOV     R7,#00H
001A 7E00              MOV     R6,#00H
001C 120000      E     LCALL   _get_variable
001F 900000      R     MOV     DPTR,#header+04H
0022 EF                MOV     A,R7
0023 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 24
0024 7F01              MOV     R7,#01H
0026 7E00              MOV     R6,#00H
0028 120000      E     LCALL   _get_variable
002B 900000      R     MOV     DPTR,#header+05H
002E EF                MOV     A,R7
002F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 25
0030 7F02              MOV     R7,#02H
0032 7E00              MOV     R6,#00H
0034 120000      E     LCALL   _get_variable
0037 900000      R     MOV     DPTR,#header+06H
003A EF                MOV     A,R7
003B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 26
003C 900000      R     MOV     DPTR,#datetime
003F 120000      E     LCALL   ?C?PLDXDATA
0042 120000      E     LCALL   ?C?CLDPTR
0045 FF                MOV     R7,A
0046 900000      R     MOV     DPTR,#header+07H
0049 EF                MOV     A,R7
004A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 27
004B 900000      R     MOV     DPTR,#datetime
004E 120000      E     LCALL   ?C?PLDXDATA
0051 E9                MOV     A,R1
0052 2401              ADD     A,#01H
0054 F9                MOV     R1,A
0055 EA                MOV     A,R2
0056 3400              ADDC    A,#00H
0058 FA                MOV     R2,A
0059 120000      E     LCALL   ?C?CLDPTR
005C FF                MOV     R7,A
005D 900000      R     MOV     DPTR,#header+08H
0060 EF                MOV     A,R7
C51 COMPILER V9.51   INTERFACE                                                             05/07/2014 04:57:58 PAGE 5   

0061 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 28
0062 900000      R     MOV     DPTR,#datetime
0065 120000      E     LCALL   ?C?PLDXDATA
0068 E9                MOV     A,R1
0069 2402              ADD     A,#02H
006B F9                MOV     R1,A
006C EA                MOV     A,R2
006D 3400              ADDC    A,#00H
006F FA                MOV     R2,A
0070 120000      E     LCALL   ?C?CLDPTR
0073 FF                MOV     R7,A
0074 900000      R     MOV     DPTR,#header+09H
0077 EF                MOV     A,R7
0078 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 29
0079 900000      R     MOV     DPTR,#datetime
007C 120000      E     LCALL   ?C?PLDXDATA
007F E9                MOV     A,R1
0080 2404              ADD     A,#04H
0082 F9                MOV     R1,A
0083 EA                MOV     A,R2
0084 3400              ADDC    A,#00H
0086 FA                MOV     R2,A
0087 120000      E     LCALL   ?C?CLDPTR
008A FF                MOV     R7,A
008B 900000      R     MOV     DPTR,#header+0AH
008E EF                MOV     A,R7
008F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 30
0090 900000      R     MOV     DPTR,#datetime
0093 120000      E     LCALL   ?C?PLDXDATA
0096 E9                MOV     A,R1
0097 2407              ADD     A,#07H
0099 F9                MOV     R1,A
009A EA                MOV     A,R2
009B 3400              ADDC    A,#00H
009D FA                MOV     R2,A
009E 120000      E     LCALL   ?C?CLDPTR
00A1 FF                MOV     R7,A
00A2 900000      R     MOV     DPTR,#header+0BH
00A5 EF                MOV     A,R7
00A6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 31
00A7 900000      R     MOV     DPTR,#datetime
00AA 120000      E     LCALL   ?C?PLDXDATA
00AD E9                MOV     A,R1
00AE 2408              ADD     A,#08H
00B0 F9                MOV     R1,A
00B1 EA                MOV     A,R2
00B2 3400              ADDC    A,#00H
00B4 FA                MOV     R2,A
00B5 120000      E     LCALL   ?C?ILDPTR
00B8 FF                MOV     R7,A
00B9 AEF0              MOV     R6,B
00BB 900000      R     MOV     DPTR,#header+02H
00BE EE                MOV     A,R6
00BF F0                MOVX    @DPTR,A
00C0 A3                INC     DPTR
00C1 EF                MOV     A,R7
00C2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 33
C51 COMPILER V9.51   INTERFACE                                                             05/07/2014 04:57:58 PAGE 6   

00C3 7B01              MOV     R3,#01H
00C5 7A00        R     MOV     R2,#HIGH header
00C7 7900        R     MOV     R1,#LOW header
00C9 C003              PUSH    AR3
00CB C002              PUSH    AR2
00CD C001              PUSH    AR1
00CF 900000      E     MOV     DPTR,#TailPtr
00D2 120000      E     LCALL   ?C?PLDXDATA
00D5 900000      E     MOV     DPTR,#?_Em_EEPROM_Write?BYTE+03H
00D8 120000      E     LCALL   ?C?PSTXDATA
00DB 900000      R     MOV     DPTR,#header_size
00DE E0                MOVX    A,@DPTR
00DF FF                MOV     R7,A
00E0 7E00              MOV     R6,#00H
00E2 900000      E     MOV     DPTR,#?_Em_EEPROM_Write?BYTE+06H
00E5 EE                MOV     A,R6
00E6 F0                MOVX    @DPTR,A
00E7 A3                INC     DPTR
00E8 EF                MOV     A,R7
00E9 F0                MOVX    @DPTR,A
00EA D001              POP     AR1
00EC D002              POP     AR2
00EE D003              POP     AR3
00F0 120000      E     LCALL   _Em_EEPROM_Write
                                           ; SOURCE LINE # 34
00F3 900000      R     MOV     DPTR,#header_size
00F6 E0                MOVX    A,@DPTR
00F7 FF                MOV     R7,A
00F8 7E00              MOV     R6,#00H
00FA 900000      E     MOV     DPTR,#TailPtr+01H
00FD EE                MOV     A,R6
00FE 8FF0              MOV     B,R7
0100 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 36
0103 120000      E     LCALL   StopCollection_IRQ_Start
                                           ; SOURCE LINE # 37
0106 120000      E     LCALL   StartCollection_IRQ_Stop
                                           ; SOURCE LINE # 38
0109 900000      E     MOV     DPTR,#RTC_int_mask
010C E0                MOVX    A,@DPTR
010D FF                MOV     R7,A
010E 120000      E     LCALL   _RTC_WriteIntervalMask
                                           ; SOURCE LINE # 41
0111         ?C0001:
0111 22                RET     
             ; FUNCTION StartCollection (END)

             ; FUNCTION StopCollection (BEGIN)
                                           ; SOURCE LINE # 43
                                           ; SOURCE LINE # 45
0000 120000      E     LCALL   StartCollection_IRQ_Start
                                           ; SOURCE LINE # 46
0003 120000      E     LCALL   StopCollection_IRQ_Stop
                                           ; SOURCE LINE # 47
0006 7F00              MOV     R7,#00H
0008 120000      E     LCALL   _RTC_WriteIntervalMask
                                           ; SOURCE LINE # 50
000B         ?C0002:
000B 22                RET     
             ; FUNCTION StopCollection (END)

             ; FUNCTION _LED_on (BEGIN)
C51 COMPILER V9.51   INTERFACE                                                             05/07/2014 04:57:58 PAGE 7   

                                           ; SOURCE LINE # 52
0000 900000      R     MOV     DPTR,#target
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 54
0005 900000      R     MOV     DPTR,#target
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 120000      E     LCALL   ?C?CCASE
000E 0000        R     DW      ?C0004
0010 01                DB      01H
0011 0000        R     DW      ?C0008
0013 02                DB      02H
0014 0000        R     DW      ?C0006
0016 03                DB      03H
0017 0000        R     DW      ?C0005
0019 04                DB      04H
001A 0000        R     DW      ?C0007
001C 05                DB      05H
001D 0000        R     DW      ?C0009
001F 06                DB      06H
0020 0000              DW      00H
0022 0000        R     DW      ?C0010
                                           ; SOURCE LINE # 56
0024         ?C0004:
                                           ; SOURCE LINE # 58
0024 7F03              MOV     R7,#03H
0026 120000      E     LCALL   _LED0_CTRL_Write
                                           ; SOURCE LINE # 59
0029 7F03              MOV     R7,#03H
002B 120000      E     LCALL   _LED1_CTRL_Write
                                           ; SOURCE LINE # 60
002E 22                RET     
                                           ; SOURCE LINE # 62
002F         ?C0005:
                                           ; SOURCE LINE # 64
002F 7F01              MOV     R7,#01H
0031 120000      E     LCALL   _LED0_CTRL_Write
                                           ; SOURCE LINE # 65
0034 7F01              MOV     R7,#01H
0036 120000      E     LCALL   _LED1_CTRL_Write
                                           ; SOURCE LINE # 66
0039 22                RET     
                                           ; SOURCE LINE # 68
003A         ?C0006:
                                           ; SOURCE LINE # 70
003A 7F03              MOV     R7,#03H
003C 120000      E     LCALL   _LED0_CTRL_Write
                                           ; SOURCE LINE # 71
003F 7F01              MOV     R7,#01H
0041 120000      E     LCALL   _LED1_CTRL_Write
                                           ; SOURCE LINE # 72
0044 22                RET     
                                           ; SOURCE LINE # 74
0045         ?C0007:
                                           ; SOURCE LINE # 76
0045 7F02              MOV     R7,#02H
0047 120000      E     LCALL   _LED0_CTRL_Write
                                           ; SOURCE LINE # 77
004A 7F03              MOV     R7,#03H
004C 120000      E     LCALL   _LED1_CTRL_Write
C51 COMPILER V9.51   INTERFACE                                                             05/07/2014 04:57:58 PAGE 8   

                                           ; SOURCE LINE # 78
004F 22                RET     
                                           ; SOURCE LINE # 80
0050         ?C0008:
                                           ; SOURCE LINE # 82
0050 7F02              MOV     R7,#02H
0052 120000      E     LCALL   _LED0_CTRL_Write
                                           ; SOURCE LINE # 83
0055 7F02              MOV     R7,#02H
0057 120000      E     LCALL   _LED1_CTRL_Write
                                           ; SOURCE LINE # 84
005A 22                RET     
                                           ; SOURCE LINE # 86
005B         ?C0009:
                                           ; SOURCE LINE # 88
005B 7F02              MOV     R7,#02H
005D 120000      E     LCALL   _LED0_CTRL_Write
                                           ; SOURCE LINE # 89
0060 7F01              MOV     R7,#01H
0062 120000      E     LCALL   _LED1_CTRL_Write
                                           ; SOURCE LINE # 90
                                           ; SOURCE LINE # 91
0065         ?C0003:
                                           ; SOURCE LINE # 93
0065         ?C0010:
0065 22                RET     
             ; FUNCTION _LED_on (END)

             ; FUNCTION _LED_off (BEGIN)
                                           ; SOURCE LINE # 95
0000 900000      R     MOV     DPTR,#target
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 97
0005 900000      R     MOV     DPTR,#target
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 120000      E     LCALL   ?C?CCASE
000E 0000        R     DW      ?C0012
0010 00                DB      00H
0011 0000        R     DW      ?C0013
0013 01                DB      01H
0014 0000        R     DW      ?C0017
0016 02                DB      02H
0017 0000        R     DW      ?C0014
0019 05                DB      05H
001A 0000        R     DW      ?C0020
001C 06                DB      06H
001D 0000              DW      00H
001F 0000        R     DW      ?C0021
                                           ; SOURCE LINE # 99
0021         ?C0012:
                                           ; SOURCE LINE # 100
0021 7F00              MOV     R7,#00H
0023 120000      E     LCALL   _LED0_CTRL_Write
                                           ; SOURCE LINE # 101
0026 7F00              MOV     R7,#00H
0028 120000      E     LCALL   _LED1_CTRL_Write
                                           ; SOURCE LINE # 102
002B 22                RET     
                                           ; SOURCE LINE # 104
C51 COMPILER V9.51   INTERFACE                                                             05/07/2014 04:57:58 PAGE 9   

002C         ?C0013:
                                           ; SOURCE LINE # 105
002C 7F00              MOV     R7,#00H
002E 120000      E     LCALL   _LED0_CTRL_Write
                                           ; SOURCE LINE # 106
0031 7F00              MOV     R7,#00H
0033 120000      E     LCALL   _LED1_CTRL_Write
                                           ; SOURCE LINE # 107
0036 22                RET     
                                           ; SOURCE LINE # 109
0037         ?C0014:
                                           ; SOURCE LINE # 111
0037 900000      E     MOV     DPTR,#low_power_flag
003A E0                MOVX    A,@DPTR
003B FF                MOV     R7,A
003C EF                MOV     A,R7
003D 600B              JZ      ?C0015
                                           ; SOURCE LINE # 112
003F 7F03              MOV     R7,#03H
0041 120000      E     LCALL   _LED0_CTRL_Write
                                           ; SOURCE LINE # 113
0044 7F01              MOV     R7,#01H
0046 120000      E     LCALL   _LED1_CTRL_Write
                                           ; SOURCE LINE # 114
0049 22                RET     
004A         ?C0015:
                                           ; SOURCE LINE # 116
                                           ; SOURCE LINE # 117
004A 7F00              MOV     R7,#00H
004C 120000      E     LCALL   _LED0_CTRL_Write
                                           ; SOURCE LINE # 118
004F 7F00              MOV     R7,#00H
0051 120000      E     LCALL   _LED1_CTRL_Write
                                           ; SOURCE LINE # 119
0054         ?C0016:
                                           ; SOURCE LINE # 120
0054 22                RET     
                                           ; SOURCE LINE # 122
0055         ?C0017:
                                           ; SOURCE LINE # 123
0055 120000      E     LCALL   Vbus_Read
0058 EF                MOV     A,R7
0059 600B              JZ      ?C0018
                                           ; SOURCE LINE # 124
005B 7F03              MOV     R7,#03H
005D 120000      E     LCALL   _LED0_CTRL_Write
                                           ; SOURCE LINE # 125
0060 7F03              MOV     R7,#03H
0062 120000      E     LCALL   _LED1_CTRL_Write
                                           ; SOURCE LINE # 126
0065 22                RET     
0066         ?C0018:
                                           ; SOURCE LINE # 127
                                           ; SOURCE LINE # 128
0066 7F00              MOV     R7,#00H
0068 120000      E     LCALL   _LED0_CTRL_Write
                                           ; SOURCE LINE # 129
006B 7F00              MOV     R7,#00H
006D 120000      E     LCALL   _LED1_CTRL_Write
                                           ; SOURCE LINE # 130
0070         ?C0019:
                                           ; SOURCE LINE # 131
C51 COMPILER V9.51   INTERFACE                                                             05/07/2014 04:57:58 PAGE 10  

0070 22                RET     
                                           ; SOURCE LINE # 133
0071         ?C0020:
                                           ; SOURCE LINE # 134
0071 7F00              MOV     R7,#00H
0073 120000      E     LCALL   _LED0_CTRL_Write
                                           ; SOURCE LINE # 135
0076 7F00              MOV     R7,#00H
0078 120000      E     LCALL   _LED1_CTRL_Write
                                           ; SOURCE LINE # 136
                                           ; SOURCE LINE # 137
007B         ?C0011:
                                           ; SOURCE LINE # 140
007B         ?C0021:
007B 22                RET     
             ; FUNCTION _LED_off (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    512    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     18    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
