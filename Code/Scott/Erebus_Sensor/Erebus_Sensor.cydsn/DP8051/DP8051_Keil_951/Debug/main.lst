C51 COMPILER V9.51   MAIN                                                                  05/07/2014 04:57:56 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\main.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\main.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\main.lst) CD DB NOIP OT(0,SIZE) DF(DEBUG) INCDIR
                    -(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\main.obj)

line level    source

   1          /* ========================================
   2           *
   3           * Copyright YOUR COMPANY, THE YEAR
   4           * All Rights Reserved
   5           * UNPUBLISHED, LICENSED SOFTWARE.
   6           *
   7           * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8           * WHICH IS THE PROPERTY OF your company.
   9           *
  10           * ========================================
  11          */
  12          
  13          #include "main.h"
  14          
  15          /* Globals */
  16          
  17          // Flash
  18          const uint8 CYCODE MemoryLocation[EmEEPROMSize]; 
  19          const volatile uint8* TailPtr = (uint8*) MemoryLocation;
  20          const uint8 CYCODE hard_reset_flag;
  21          
  22          // Flags
  23          uint8 low_power_flag;
  24          uint8 USB_waiting;
  25          uint8 DataStart_waiting;
  26          uint8 DataStop_waiting;
  27          
  28          int main()
  29          {
  30   1          low_power_flag = 0;
  31   1          USB_waiting = 0;
  32   1          DataStart_waiting = 0;
  33   1          DataStop_waiting = 0;
  34   1          
  35   1          // Check for hard reset flag
  36   1          if (hard_reset_flag){
  37   2              hard_reset();   
  38   2          }
  39   1          /* Initialization*/
  40   1      
  41   1          // Start Components
  42   1          EEPROM_R_Start();
  43   1          LED_PWM_Start();
  44   1          ADC_Start();
  45   1          ADC_Sleep();
  46   1          RTC_Start();
  47   1          rtc_setup();
  48   1          
  49   1          // Set interrupts for pins that can wake the chip
  50   1          CY_SET_REG8(CYREG_PICU12_INTTYPE6, 0x02); //Port 12, pin 6, falling edge
  51   1          CY_SET_REG8(CYREG_PICU3_INTTYPE0, 0x02); //Port 3, pin 0, falling edge
  52   1          CY_SET_REG8(CYREG_PICU6_INTTYPE0, 0x01); //Port 6, pin 0, rising edge
  53   1          
C51 COMPILER V9.51   MAIN                                                                  05/07/2014 04:57:56 PAGE 2   

  54   1          // Enable global interrupts
  55   1          CyGlobalIntEnable;
  56   1          
  57   1          // Enable individual interrupts as necessary   
  58   1          Vbus_IRQ_Start();
  59   1          StartCollection_IRQ_Start();
  60   1          
  61   1          for(;;){       
  62   2              
  63   2              #ifdef SLEEP_EN 
  64   2              LED_PWM_Sleep();
  65   2              RTC_DisableInt();
  66   2              CyPmSaveClocks();        
  67   2            
  68   2              CyPmSleep(PM_SLEEP_TIME_ONE_PPS, (PM_SLEEP_SRC_ONE_PPS | PM_SLEEP_SRC_PICU));     
  69   2      
  70   2              CyPmRestoreClocks(); 
  71   2              RTC_EnableInt();
  72   2              LED_PWM_Wakeup();
  73   2              #endif
  74   2              
  75   2              if(USB_waiting){
  76   3                  Run_USB();
  77   3                  Vbus_ClearInterrupt();
  78   3                  Vbus_IRQ_ClearPending();
  79   3                  USB_waiting = 0;
  80   3              }
  81   2              
  82   2              else if(DataStart_waiting){
  83   3                  StartCollection();
  84   3                  DataStart_waiting = 0;
  85   3                  CyDelay(LED_DELAY);
  86   3                  StartCollection_B_ClearInterrupt();
  87   3                  StartCollection_IRQ_ClearPending();
  88   3                  LED_off(BUTTON);
  89   3              }
  90   2              
  91   2              else if(DataStop_waiting){
  92   3                  StopCollection();
  93   3                  DataStop_waiting = 0;
  94   3                  CyDelay(LED_DELAY);
  95   3                  StopCollection_B_ClearInterrupt();
  96   3                  StopCollection_IRQ_ClearPending();
  97   3                  LED_off(BUTTON);
  98   3              }
  99   2              
 100   2          }
 101   1          
 102   1          return (0);
 103   1      }
 104          
 105          /* [] END OF FILE */
C51 COMPILER V9.51   MAIN                                                                  05/07/2014 04:57:56 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 28
                                           ; SOURCE LINE # 29
                                           ; SOURCE LINE # 30
0000 900000      R     MOV     DPTR,#low_power_flag
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 31
0005 900000      R     MOV     DPTR,#USB_waiting
0008 E4                CLR     A
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 32
000A 900000      R     MOV     DPTR,#DataStart_waiting
000D E4                CLR     A
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 33
000F 900000      R     MOV     DPTR,#DataStop_waiting
0012 E4                CLR     A
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 36
0014 900000      R     MOV     DPTR,#hard_reset_flag
0017 E4                CLR     A
0018 93                MOVC    A,@A+DPTR
0019 FF                MOV     R7,A
001A EF                MOV     A,R7
001B 6003              JZ      ?C0001
                                           ; SOURCE LINE # 37
001D 120000      E     LCALL   hard_reset
                                           ; SOURCE LINE # 38
0020         ?C0001:
                                           ; SOURCE LINE # 42
0020 120000      E     LCALL   EEPROM_R_Start
                                           ; SOURCE LINE # 43
0023 120000      E     LCALL   LED_PWM_Start
                                           ; SOURCE LINE # 44
0026 120000      E     LCALL   ADC_Start
                                           ; SOURCE LINE # 45
0029 120000      E     LCALL   ADC_Sleep
                                           ; SOURCE LINE # 46
002C 120000      E     LCALL   RTC_Start
                                           ; SOURCE LINE # 47
002F 120000      E     LCALL   rtc_setup
                                           ; SOURCE LINE # 50
0032 904566            MOV     DPTR,#04566H
0035 7402              MOV     A,#02H
0037 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 51
0038 904518            MOV     DPTR,#04518H
003B 7402              MOV     A,#02H
003D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 52
003E 904530            MOV     DPTR,#04530H
0041 7401              MOV     A,#01H
0043 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 55
0044 D2AF              SETB    EA
0046 9044F4            MOV     DPTR,#044F4H
0049 74FD              MOV     A,#0FDH
004B F0                MOVX    @DPTR,A
C51 COMPILER V9.51   MAIN                                                                  05/07/2014 04:57:56 PAGE 4   

                                           ; SOURCE LINE # 58
004C 120000      E     LCALL   Vbus_IRQ_Start
                                           ; SOURCE LINE # 59
004F 120000      E     LCALL   StartCollection_IRQ_Start
                                           ; SOURCE LINE # 61
0052         ?C0002:
                                           ; SOURCE LINE # 64
0052 120000      E     LCALL   LED_PWM_Sleep
                                           ; SOURCE LINE # 65
0055 120000      E     LCALL   RTC_DisableInt
                                           ; SOURCE LINE # 66
0058 120000      E     LCALL   CyPmSaveClocks
                                           ; SOURCE LINE # 68
005B 7D40              MOV     R5,#040H
005D 7C08              MOV     R4,#08H
005F 7F01              MOV     R7,#01H
0061 120000      E     LCALL   _CyPmSleep
                                           ; SOURCE LINE # 70
0064 120000      E     LCALL   CyPmRestoreClocks
                                           ; SOURCE LINE # 71
0067 120000      E     LCALL   RTC_EnableInt
                                           ; SOURCE LINE # 72
006A 120000      E     LCALL   LED_PWM_Wakeup
                                           ; SOURCE LINE # 75
006D 900000      R     MOV     DPTR,#USB_waiting
0070 E0                MOVX    A,@DPTR
0071 FF                MOV     R7,A
0072 EF                MOV     A,R7
0073 6010              JZ      ?C0004
                                           ; SOURCE LINE # 76
0075 120000      E     LCALL   Run_USB
                                           ; SOURCE LINE # 77
0078 120000      E     LCALL   Vbus_ClearInterrupt
                                           ; SOURCE LINE # 78
007B 120000      E     LCALL   Vbus_IRQ_ClearPending
                                           ; SOURCE LINE # 79
007E 900000      R     MOV     DPTR,#USB_waiting
0081 E4                CLR     A
0082 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 80
0083 80CD              SJMP    ?C0002
0085         ?C0004:
                                           ; SOURCE LINE # 82
0085 900000      R     MOV     DPTR,#DataStart_waiting
0088 E0                MOVX    A,@DPTR
0089 FF                MOV     R7,A
008A EF                MOV     A,R7
008B 6020              JZ      ?C0006
                                           ; SOURCE LINE # 83
008D 120000      E     LCALL   StartCollection
                                           ; SOURCE LINE # 84
0090 900000      R     MOV     DPTR,#DataStart_waiting
0093 E4                CLR     A
0094 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 85
0095 7FFA              MOV     R7,#0FAH
0097 7E00              MOV     R6,#00H
0099 7D00              MOV     R5,#00H
009B 7C00              MOV     R4,#00H
009D 120000      E     LCALL   _?CyDelay
                                           ; SOURCE LINE # 86
00A0 120000      E     LCALL   StartCollection_B_ClearInterrupt
C51 COMPILER V9.51   MAIN                                                                  05/07/2014 04:57:56 PAGE 5   

                                           ; SOURCE LINE # 87
00A3 120000      E     LCALL   StartCollection_IRQ_ClearPending
                                           ; SOURCE LINE # 88
00A6 7F06              MOV     R7,#06H
00A8 120000      E     LCALL   _LED_off
                                           ; SOURCE LINE # 89
00AB 80A5              SJMP    ?C0002
00AD         ?C0006:
                                           ; SOURCE LINE # 91
00AD 900000      R     MOV     DPTR,#DataStop_waiting
00B0 E0                MOVX    A,@DPTR
00B1 FF                MOV     R7,A
00B2 EF                MOV     A,R7
00B3 609D              JZ      ?C0002
                                           ; SOURCE LINE # 92
00B5 120000      E     LCALL   StopCollection
                                           ; SOURCE LINE # 93
00B8 900000      R     MOV     DPTR,#DataStop_waiting
00BB E4                CLR     A
00BC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 94
00BD 7FFA              MOV     R7,#0FAH
00BF 7E00              MOV     R6,#00H
00C1 7D00              MOV     R5,#00H
00C3 7C00              MOV     R4,#00H
00C5 120000      E     LCALL   _?CyDelay
                                           ; SOURCE LINE # 95
00C8 120000      E     LCALL   StopCollection_B_ClearInterrupt
                                           ; SOURCE LINE # 96
00CB 120000      E     LCALL   StopCollection_IRQ_ClearPending
                                           ; SOURCE LINE # 97
00CE 7F06              MOV     R7,#06H
00D0 120000      E     LCALL   _LED_off
                                           ; SOURCE LINE # 98
00D3         ?C0008:
00D3         ?C0007:
00D3         ?C0005:
                                           ; SOURCE LINE # 100
00D3 020000      R     LJMP    ?C0002
00D6         ?C0003:
                                           ; SOURCE LINE # 102
00D6 E4                CLR     A
00D7 7E00              MOV     R6,#00H
00D9 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 103
00DB         ?C0009:
00DB 22                RET     
             ; FUNCTION main (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    220    ----
   CONSTANT SIZE    =   1025    ----
   XDATA SIZE       =      7    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
C51 COMPILER V9.51   MAIN                                                                  05/07/2014 04:57:56 PAGE 6   

   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
