C51 COMPILER V9.51   MAIN                                                                  03/02/2014 17:35:36 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\main.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\main.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\main.lst) CD DB NOIP OT(2,SIZE) DF(DEBUG) INCDIR
                    -(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\main.obj)

line level    source

   1          /* ========================================
   2           *
   3           * Copyright YOUR COMPANY, THE YEAR
   4           * All Rights Reserved
   5           * UNPUBLISHED, LICENSED SOFTWARE.
   6           *
   7           * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8           * WHICH IS THE PROPERTY OF your company.
   9           *
  10           * ========================================
  11          */
  12          #include <project.h>
  13          #include <stdlib.h>
  14          #include "main.h"
  15          
  16          // Globals
  17              uint16 delay = 500;
  18          
  19              
  20          void main()
  21          {
  22   1          /* Initialization*/
  23   1          
  24   1          // Variable declarations
  25   1          char8 buffer[BUFFER_LEN] = {0};
  26   1          char8* ptr = buffer;
  27   1          uint8 count = 0;
  28   1          
  29   1          // Enable and start EEPROM
  30   1       //   EEPROM_Real_Enable();
  31   1       //   EEPROM_Real_Start();
  32   1          
  33   1          // Enable global interrupts
  34   1          CyGlobalIntEnable;
  35   1          Timer_1_Start();   
  36   1          // Start USB
  37   1          USBUART_1_Start(0u, USBUART_1_3V_OPERATION);
  38   1          /* Wait for Device to enumerate */
  39   1          while(!USBUART_1_GetConfiguration());
  40   1          /* Enumeration is done, enable OUT endpoint for receive data from Host */
  41   1          USBUART_1_CDC_Init();
  42   1          
  43   1          
  44   1          for(;;)
  45   1          {
  46   2              if(USBUART_1_DataIsReady() != 0u)               /* Check for input data from PC */
  47   2              {   
  48   3                  do
  49   3                  {
  50   4                      *ptr = USBUART_1_GetChar();           /* Read received data and re-enable OUT endpoint */
  51   4                      ++ptr;
  52   4                      ++count;
  53   4                  }while (buffer[count-1] != '\n' && count < BUFFER_LEN);
C51 COMPILER V9.51   MAIN                                                                  03/02/2014 17:35:36 PAGE 2   

  54   3                  
  55   3                  buffer[count] = '\0';
  56   3                  delay = (uint16) atoi(buffer);
  57   3                  count = 0;
  58   3                  ptr = buffer;
  59   3                  Timer_1_WritePeriod(delay);
  60   3              }
  61   2              
  62   2              
  63   2              
  64   2              
  65   2          }
  66   1      }
  67          
  68          /* [] END OF FILE */
C51 COMPILER V9.51   MAIN                                                                  03/02/2014 17:35:36 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 20
                                           ; SOURCE LINE # 21
                                           ; SOURCE LINE # 25
0000 7BFF              MOV     R3,#0FFH
0002 7A00        R     MOV     R2,#HIGH _?ix1000
0004 7900        R     MOV     R1,#LOW _?ix1000
0006 C003              PUSH    AR3
0008 C002              PUSH    AR2
000A C001              PUSH    AR1
000C 7B01              MOV     R3,#01H
000E 7A00        R     MOV     R2,#HIGH buffer
0010 7900        R     MOV     R1,#LOW buffer
0012 A801              MOV     R0,AR1
0014 AC02              MOV     R4,AR2
0016 AD03              MOV     R5,AR3
0018 D001              POP     AR1
001A D002              POP     AR2
001C D003              POP     AR3
001E 7E00              MOV     R6,#00H
0020 7F40              MOV     R7,#040H
0022 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 26
0025 7B01              MOV     R3,#01H
0027 7A00        R     MOV     R2,#HIGH buffer
0029 7900        R     MOV     R1,#LOW buffer
002B 900000      R     MOV     DPTR,#ptr
002E 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 27
0031 900000      R     MOV     DPTR,#count
0034 E4                CLR     A
0035 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 34
0036 D2AF              SETB    EA
0038 9044F4            MOV     DPTR,#044F4H
003B 74FD              MOV     A,#0FDH
003D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 35
003E 120000      E     LCALL   Timer_1_Start
                                           ; SOURCE LINE # 37
0041 7D00              MOV     R5,#00H
0043 7F00              MOV     R7,#00H
0045 120000      E     LCALL   _USBUART_1_Start
0048         ?C0001:
                                           ; SOURCE LINE # 39
0048 120000      E     LCALL   USBUART_1_GetConfiguration
004B EF                MOV     A,R7
004C 60FA              JZ      ?C0001
004E         ?C0002:
                                           ; SOURCE LINE # 41
004E 120000      E     LCALL   USBUART_1_CDC_Init
                                           ; SOURCE LINE # 44
0051         ?C0003:
                                           ; SOURCE LINE # 45
                                           ; SOURCE LINE # 46
0051 120000      E     LCALL   USBUART_1_DataIsReady
0054 EF                MOV     A,R7
0055 60FA              JZ      ?C0003
                                           ; SOURCE LINE # 47
C51 COMPILER V9.51   MAIN                                                                  03/02/2014 17:35:36 PAGE 4   

0057         ?C0008:
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 50
0057 120000      E     LCALL   USBUART_1_GetChar
005A 900000      R     MOV     DPTR,#ptr
005D 120000      E     LCALL   ?C?PLDXDATA
0060 EF                MOV     A,R7
0061 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 51
0064 900000      R     MOV     DPTR,#ptr+01H
0067 E4                CLR     A
0068 75F001            MOV     B,#01H
006B 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 52
006E 900000      R     MOV     DPTR,#count
0071 E0                MOVX    A,@DPTR
0072 04                INC     A
0073 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 53
0074 900000      R     MOV     DPTR,#count
0077 E0                MOVX    A,@DPTR
0078 FF                MOV     R7,A
0079 7400        R     MOV     A,#LOW buffer+0FFFFH
007B 2F                ADD     A,R7
007C F582              MOV     DPL,A
007E E4                CLR     A
007F 3400        R     ADDC    A,#HIGH buffer+0FFFFH
0081 F583              MOV     DPH,A
0083 E0                MOVX    A,@DPTR
0084 FF                MOV     R7,A
0085 EF                MOV     A,R7
0086 640A              XRL     A,#0AH
0088 600B              JZ      ?C0007
008A 900000      R     MOV     DPTR,#count
008D E0                MOVX    A,@DPTR
008E FF                MOV     R7,A
008F EF                MOV     A,R7
0090 C3                CLR     C
0091 9440              SUBB    A,#040H
0093 40C2              JC      ?C0008
0095         ?C0007:
                                           ; SOURCE LINE # 55
0095 900000      R     MOV     DPTR,#count
0098 E0                MOVX    A,@DPTR
0099 FF                MOV     R7,A
009A 7400        R     MOV     A,#LOW buffer
009C 2F                ADD     A,R7
009D F582              MOV     DPL,A
009F E4                CLR     A
00A0 3400        R     ADDC    A,#HIGH buffer
00A2 F583              MOV     DPH,A
00A4 E4                CLR     A
00A5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 56
00A6 7B01              MOV     R3,#01H
00A8 7A00        R     MOV     R2,#HIGH buffer
00AA 7900        R     MOV     R1,#LOW buffer
00AC 120000      E     LCALL   _atoi
00AF 900000      R     MOV     DPTR,#delay
00B2 EE                MOV     A,R6
00B3 F0                MOVX    @DPTR,A
00B4 A3                INC     DPTR
C51 COMPILER V9.51   MAIN                                                                  03/02/2014 17:35:36 PAGE 5   

00B5 EF                MOV     A,R7
00B6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 57
00B7 900000      R     MOV     DPTR,#count
00BA E4                CLR     A
00BB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 58
00BC 7B01              MOV     R3,#01H
00BE 7A00        R     MOV     R2,#HIGH buffer
00C0 7900        R     MOV     R1,#LOW buffer
00C2 900000      R     MOV     DPTR,#ptr
00C5 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 59
00C8 900000      R     MOV     DPTR,#delay
00CB E0                MOVX    A,@DPTR
00CC FE                MOV     R6,A
00CD A3                INC     DPTR
00CE E0                MOVX    A,@DPTR
00CF FF                MOV     R7,A
00D0 120000      E     LCALL   _Timer_1_WritePeriod
                                           ; SOURCE LINE # 60
                                           ; SOURCE LINE # 65
00D3 020000      R     LJMP    ?C0003
00D6 22                RET     
             ; FUNCTION main (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    215    ----
   CONSTANT SIZE    =     64    ----
   XDATA SIZE       =      2      68
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
