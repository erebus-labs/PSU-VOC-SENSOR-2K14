C51 COMPILER V9.51   VBUS_IRQ                                                              03/15/2014 15:13:45 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE VBUS_IRQ
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\Vbus_IRQ.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\Vbus_IRQ.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\Vbus_IRQ.lst) CD DB N
                    -OIP OT(2,SIZE) DF(DEBUG) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\Vbus_IRQ.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: Vbus_IRQ.c  
   3          * Version 1.70
   4          *
   5          *  Description:
   6          *   API for controlling the state of an interrupt.
   7          *
   8          *
   9          *  Note:
  10          *
  11          ********************************************************************************
  12          * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  13          * You may use this file only in accordance with the license, terms, conditions, 
  14          * disclaimers, and limitations in the end user license agreement accompanying 
  15          * the software package with which this file was provided.
  16          *******************************************************************************/
  17          
  18          #include <cydevice_trm.h>
  19          #include <CyLib.h>
  20          #include <Vbus_IRQ.h>
  21          
  22          #if !defined(Vbus_IRQ__REMOVED) /* Check for removal by optimization */
  23          
  24          /*******************************************************************************
  25          *  Place your includes, defines and code here 
  26          ********************************************************************************/
  27          /* `#START Vbus_IRQ_intc` */
  28              #include "USBUART.h"
  29              #include "Blink_Timer.h"
  30              #include "Vbus.h"
  31          /* `#END` */
  32          
  33          
  34          /*******************************************************************************
  35          * Function Name: Vbus_IRQ_Start
  36          ********************************************************************************
  37          *
  38          * Summary:
  39          *  Set up the interrupt and enable it.
  40          *
  41          * Parameters:  
  42          *   None
  43          *
  44          * Return:
  45          *   None
  46          *
  47          *******************************************************************************/
  48          void Vbus_IRQ_Start(void) 
  49          {
  50   1          /* For all we know the interrupt is active. */
  51   1          Vbus_IRQ_Disable();
  52   1      
  53   1          /* Set the ISR to point to the Vbus_IRQ Interrupt. */
C51 COMPILER V9.51   VBUS_IRQ                                                              03/15/2014 15:13:45 PAGE 2   

  54   1          Vbus_IRQ_SetVector(&Vbus_IRQ_Interrupt);
  55   1      
  56   1          /* Set the priority. */
  57   1          Vbus_IRQ_SetPriority((uint8)Vbus_IRQ_INTC_PRIOR_NUMBER);
  58   1      
  59   1          /* Enable it. */
  60   1          Vbus_IRQ_Enable();
  61   1      }
  62          
  63          
  64          /*******************************************************************************
  65          * Function Name: Vbus_IRQ_StartEx
  66          ********************************************************************************
  67          *
  68          * Summary:
  69          *  Set up the interrupt and enable it.
  70          *
  71          * Parameters:  
  72          *   address: Address of the ISR to set in the interrupt vector table.
  73          *
  74          * Return:
  75          *   None
  76          *
  77          *******************************************************************************/
  78          void Vbus_IRQ_StartEx(cyisraddress address) 
  79          {
  80   1          /* For all we know the interrupt is active. */
  81   1          Vbus_IRQ_Disable();
  82   1      
  83   1          /* Set the ISR to point to the Vbus_IRQ Interrupt. */
  84   1          Vbus_IRQ_SetVector(address);
  85   1      
  86   1          /* Set the priority. */
  87   1          Vbus_IRQ_SetPriority((uint8)Vbus_IRQ_INTC_PRIOR_NUMBER);
  88   1      
  89   1          /* Enable it. */
  90   1          Vbus_IRQ_Enable();
  91   1      }
  92          
  93          
  94          /*******************************************************************************
  95          * Function Name: Vbus_IRQ_Stop
  96          ********************************************************************************
  97          *
  98          * Summary:
  99          *   Disables and removes the interrupt.
 100          *
 101          * Parameters:  
 102          *   None
 103          *
 104          * Return:
 105          *   None
 106          *
 107          *******************************************************************************/
 108          void Vbus_IRQ_Stop(void) 
 109          {
 110   1          /* Disable this interrupt. */
 111   1          Vbus_IRQ_Disable();
 112   1      }
 113          
 114          
 115          /*******************************************************************************
C51 COMPILER V9.51   VBUS_IRQ                                                              03/15/2014 15:13:45 PAGE 3   

 116          * Function Name: Vbus_IRQ_Interrupt
 117          ********************************************************************************
 118          * Summary:
 119          *   The default Interrupt Service Routine for Vbus_IRQ.
 120          *
 121          *   Add custom code between the coments to keep the next version of this file
 122          *   from over writting your code.
 123          *
 124          * Parameters:  
 125          *   None
 126          *
 127          * Return:
 128          *   None
 129          *
 130          *******************************************************************************/
 131          CY_ISR(Vbus_IRQ_Interrupt)
 132          {
 133   1          /*  Place your Interrupt code here. */
 134   1          /* `#START Vbus_IRQ_Interrupt` */
 135   1          
 136   1          while(1){
 137   2              Blink_Timer_WritePeriod(250);
 138   2              if (!Vbus_Read()){
 139   3                  break;
 140   3              }
 141   2          }
 142   1          
 143   1          Blink_Timer_WritePeriod(500);
 144   1      
 145   1          /* `#END` */
 146   1      
 147   1          /* PSoC3 ES1, ES2 RTC ISR PATCH  */ 
 148   1          #if(CYDEV_CHIP_FAMILY_USED == CYDEV_CHIP_FAMILY_PSOC3)
 149   1              #if((CYDEV_CHIP_REVISION_USED <= CYDEV_CHIP_REVISION_3A_ES2) && (Vbus_IRQ__ES2_PATCH ))      
                          Vbus_IRQ_ISR_PATCH();
                      #endif /* CYDEV_CHIP_REVISION_USED */
 152   1          #endif /* (CYDEV_CHIP_FAMILY_USED == CYDEV_CHIP_FAMILY_PSOC3) */
 153   1      }
 154          
 155          
 156          /*******************************************************************************
 157          * Function Name: Vbus_IRQ_SetVector
 158          ********************************************************************************
 159          *
 160          * Summary:
 161          *   Change the ISR vector for the Interrupt. Note calling Vbus_IRQ_Start
 162          *   will override any effect this method would have had. To set the vector 
 163          *   before the component has been started use Vbus_IRQ_StartEx instead.
 164          *
 165          * Parameters:
 166          *   address: Address of the ISR to set in the interrupt vector table.
 167          *
 168          * Return:
 169          *   None
 170          *
 171          *******************************************************************************/
 172          void Vbus_IRQ_SetVector(cyisraddress address) 
 173          {
 174   1          CY_SET_REG16(Vbus_IRQ_INTC_VECTOR, (uint16) address);
 175   1      }
 176          
 177          
C51 COMPILER V9.51   VBUS_IRQ                                                              03/15/2014 15:13:45 PAGE 4   

 178          /*******************************************************************************
 179          * Function Name: Vbus_IRQ_GetVector
 180          ********************************************************************************
 181          *
 182          * Summary:
 183          *   Gets the "address" of the current ISR vector for the Interrupt.
 184          *
 185          * Parameters:
 186          *   None
 187          *
 188          * Return:
 189          *   Address of the ISR in the interrupt vector table.
 190          *
 191          *******************************************************************************/
 192          cyisraddress Vbus_IRQ_GetVector(void) 
 193          {
 194   1          return (cyisraddress) CY_GET_REG16(Vbus_IRQ_INTC_VECTOR);
 195   1      }
 196          
 197          
 198          /*******************************************************************************
 199          * Function Name: Vbus_IRQ_SetPriority
 200          ********************************************************************************
 201          *
 202          * Summary:
 203          *   Sets the Priority of the Interrupt. Note calling Vbus_IRQ_Start
 204          *   or Vbus_IRQ_StartEx will override any effect this method would 
 205          *   have had. This method should only be called after Vbus_IRQ_Start or 
 206          *   Vbus_IRQ_StartEx has been called. To set the initial
 207          *   priority for the component use the cydwr file in the tool.
 208          *
 209          * Parameters:
 210          *   priority: Priority of the interrupt. 0 - 7, 0 being the highest.
 211          *
 212          * Return:
 213          *   None
 214          *
 215          *******************************************************************************/
 216          void Vbus_IRQ_SetPriority(uint8 priority) 
 217          {
 218   1          *Vbus_IRQ_INTC_PRIOR = priority << 5;
 219   1      }
 220          
 221          
 222          /*******************************************************************************
 223          * Function Name: Vbus_IRQ_GetPriority
 224          ********************************************************************************
 225          *
 226          * Summary:
 227          *   Gets the Priority of the Interrupt.
 228          *
 229          * Parameters:
 230          *   None
 231          *
 232          * Return:
 233          *   Priority of the interrupt. 0 - 7, 0 being the highest.
 234          *
 235          *******************************************************************************/
 236          uint8 Vbus_IRQ_GetPriority(void) 
 237          {
 238   1          uint8 priority;
 239   1      
C51 COMPILER V9.51   VBUS_IRQ                                                              03/15/2014 15:13:45 PAGE 5   

 240   1      
 241   1          priority = *Vbus_IRQ_INTC_PRIOR >> 5;
 242   1      
 243   1          return priority;
 244   1      }
 245          
 246          
 247          /*******************************************************************************
 248          * Function Name: Vbus_IRQ_Enable
 249          ********************************************************************************
 250          *
 251          * Summary:
 252          *   Enables the interrupt.
 253          *
 254          * Parameters:
 255          *   None
 256          *
 257          * Return:
 258          *   None
 259          *
 260          *******************************************************************************/
 261          void Vbus_IRQ_Enable(void) 
 262          {
 263   1          /* Enable the general interrupt. */
 264   1          *Vbus_IRQ_INTC_SET_EN = Vbus_IRQ__INTC_MASK;
 265   1      }
 266          
 267          
 268          /*******************************************************************************
 269          * Function Name: Vbus_IRQ_GetState
 270          ********************************************************************************
 271          *
 272          * Summary:
 273          *   Gets the state (enabled, disabled) of the Interrupt.
 274          *
 275          * Parameters:
 276          *   None
 277          *
 278          * Return:
 279          *   1 if enabled, 0 if disabled.
 280          *
 281          *******************************************************************************/
 282          uint8 Vbus_IRQ_GetState(void) 
 283          {
 284   1          /* Get the state of the general interrupt. */
 285   1          return ((*Vbus_IRQ_INTC_SET_EN & (uint8)Vbus_IRQ__INTC_MASK) != 0u) ? 1u:0u;
 286   1      }
 287          
 288          
 289          /*******************************************************************************
 290          * Function Name: Vbus_IRQ_Disable
 291          ********************************************************************************
 292          *
 293          * Summary:
 294          *   Disables the Interrupt.
 295          *
 296          * Parameters:
 297          *   None
 298          *
 299          * Return:
 300          *   None
 301          *
C51 COMPILER V9.51   VBUS_IRQ                                                              03/15/2014 15:13:45 PAGE 6   

 302          *******************************************************************************/
 303          void Vbus_IRQ_Disable(void) 
 304          {
 305   1          /* Disable the general interrupt. */
 306   1          *Vbus_IRQ_INTC_CLR_EN = Vbus_IRQ__INTC_MASK;
 307   1      }
 308          
 309          
 310          /*******************************************************************************
 311          * Function Name: Vbus_IRQ_SetPending
 312          ********************************************************************************
 313          *
 314          * Summary:
 315          *   Causes the Interrupt to enter the pending state, a software method of
 316          *   generating the interrupt.
 317          *
 318          * Parameters:
 319          *   None
 320          *
 321          * Return:
 322          *   None
 323          *
 324          *******************************************************************************/
 325          void Vbus_IRQ_SetPending(void) 
 326          {
 327   1          *Vbus_IRQ_INTC_SET_PD = Vbus_IRQ__INTC_MASK;
 328   1      }
 329          
 330          
 331          /*******************************************************************************
 332          * Function Name: Vbus_IRQ_ClearPending
 333          ********************************************************************************
 334          *
 335          * Summary:
 336          *   Clears a pending interrupt.
 337          *
 338          * Parameters:
 339          *   None
 340          *
 341          * Return:
 342          *   None
 343          *
 344          *******************************************************************************/
 345          void Vbus_IRQ_ClearPending(void) 
 346          {
 347   1          *Vbus_IRQ_INTC_CLR_PD = Vbus_IRQ__INTC_MASK;
 348   1      }
 349          
 350          #endif /* End check for removal by optimization */
 351          
 352          
 353          /* [] END OF FILE */
C51 COMPILER V9.51   VBUS_IRQ                                                              03/15/2014 15:13:45 PAGE 7   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Vbus_IRQ_Start (BEGIN)
                                           ; SOURCE LINE # 48
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 51
0000 120000      R     LCALL   Vbus_IRQ_Disable
                                           ; SOURCE LINE # 54
0003 7E00        R     MOV     R6,#HIGH Vbus_IRQ_Interrupt
0005 7F00        R     MOV     R7,#LOW Vbus_IRQ_Interrupt
0007 120000      R     LCALL   _Vbus_IRQ_SetVector
                                           ; SOURCE LINE # 57
000A 7F07              MOV     R7,#07H
000C 120000      R     LCALL   _Vbus_IRQ_SetPriority
                                           ; SOURCE LINE # 60
000F 120000      R     LCALL   Vbus_IRQ_Enable
                                           ; SOURCE LINE # 61
0012 22                RET     
             ; FUNCTION Vbus_IRQ_Start (END)

             ; FUNCTION _Vbus_IRQ_StartEx (BEGIN)
                                           ; SOURCE LINE # 78
0000 900000      R     MOV     DPTR,#address
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 79
                                           ; SOURCE LINE # 81
0008 120000      R     LCALL   Vbus_IRQ_Disable
                                           ; SOURCE LINE # 84
000B 900000      R     MOV     DPTR,#address
000E E0                MOVX    A,@DPTR
000F FE                MOV     R6,A
0010 A3                INC     DPTR
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 120000      R     LCALL   _Vbus_IRQ_SetVector
                                           ; SOURCE LINE # 87
0016 7F07              MOV     R7,#07H
0018 120000      R     LCALL   _Vbus_IRQ_SetPriority
                                           ; SOURCE LINE # 90
001B 120000      R     LCALL   Vbus_IRQ_Enable
                                           ; SOURCE LINE # 91
001E 22                RET     
             ; FUNCTION _Vbus_IRQ_StartEx (END)

             ; FUNCTION Vbus_IRQ_Stop (BEGIN)
                                           ; SOURCE LINE # 108
                                           ; SOURCE LINE # 109
                                           ; SOURCE LINE # 111
0000 120000      R     LCALL   Vbus_IRQ_Disable
                                           ; SOURCE LINE # 112
0003 22                RET     
             ; FUNCTION Vbus_IRQ_Stop (END)

             ; FUNCTION Vbus_IRQ_Interrupt (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0F0              PUSH    B
0004 C083              PUSH    DPH
C51 COMPILER V9.51   VBUS_IRQ                                                              03/15/2014 15:13:45 PAGE 8   

0006 C082              PUSH    DPL
0008 C085              PUSH    DPH1
000A C084              PUSH    DPL1
000C C086              PUSH    DPS
000E 758600            MOV     DPS,#00H
0011 C000        E     PUSH    ?C?XPAGE1SFR
0013 750000      E     MOV     ?C?XPAGE1SFR,#?C?XPAGE1RST
0016 C0D0              PUSH    PSW
0018 75D000            MOV     PSW,#00H
001B C000              PUSH    AR0
001D C001              PUSH    AR1
001F C002              PUSH    AR2
0021 C003              PUSH    AR3
0023 C004              PUSH    AR4
0025 C005              PUSH    AR5
0027 C006              PUSH    AR6
0029 C007              PUSH    AR7
                                           ; SOURCE LINE # 131
002B         ?C0004:
                                           ; SOURCE LINE # 136
                                           ; SOURCE LINE # 137
002B 7FFA              MOV     R7,#0FAH
002D 7E00              MOV     R6,#00H
002F 120000      E     LCALL   _Blink_Timer_WritePeriod
                                           ; SOURCE LINE # 138
0032 120000      E     LCALL   Vbus_Read
0035 EF                MOV     A,R7
0036 70F3              JNZ     ?C0004
                                           ; SOURCE LINE # 139
0038 8002              SJMP    ?C0005
                                           ; SOURCE LINE # 140
003A         ?C0006:
                                           ; SOURCE LINE # 141
003A 80EF              SJMP    ?C0004
003C         ?C0005:
                                           ; SOURCE LINE # 143
003C 7FF4              MOV     R7,#0F4H
003E 7E01              MOV     R6,#01H
0040 120000      E     LCALL   _Blink_Timer_WritePeriod
                                           ; SOURCE LINE # 153
0043 D007              POP     AR7
0045 D006              POP     AR6
0047 D005              POP     AR5
0049 D004              POP     AR4
004B D003              POP     AR3
004D D002              POP     AR2
004F D001              POP     AR1
0051 D000              POP     AR0
0053 D0D0              POP     PSW
0055 D000        E     POP     ?C?XPAGE1SFR
0057 D086              POP     DPS
0059 D084              POP     DPL1
005B D085              POP     DPH1
005D D082              POP     DPL
005F D083              POP     DPH
0061 D0F0              POP     B
0063 D0E0              POP     ACC
0065 32                RETI    
             ; FUNCTION Vbus_IRQ_Interrupt (END)

             ; FUNCTION _Vbus_IRQ_SetVector (BEGIN)
                                           ; SOURCE LINE # 172
C51 COMPILER V9.51   VBUS_IRQ                                                              03/15/2014 15:13:45 PAGE 9   

0000 900000      R     MOV     DPTR,#address
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 173
                                           ; SOURCE LINE # 174
0008 7B02              MOV     R3,#02H
000A 7A44              MOV     R2,#044H
000C 7900              MOV     R1,#00H
000E 900000      R     MOV     DPTR,#address
0011 E0                MOVX    A,@DPTR
0012 FE                MOV     R6,A
0013 A3                INC     DPTR
0014 E0                MOVX    A,@DPTR
0015 FF                MOV     R7,A
0016 AD07              MOV     R5,AR7
0018 AC06              MOV     R4,AR6
001A 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 175
001D 22                RET     
             ; FUNCTION _Vbus_IRQ_SetVector (END)

             ; FUNCTION Vbus_IRQ_GetVector (BEGIN)
                                           ; SOURCE LINE # 192
                                           ; SOURCE LINE # 193
                                           ; SOURCE LINE # 194
0000 7B02              MOV     R3,#02H
0002 7A44              MOV     R2,#044H
0004 7900              MOV     R1,#00H
0006 120000      E     LCALL   _cyread16_nodpx
                                           ; SOURCE LINE # 195
0009         ?C0009:
0009 22                RET     
             ; FUNCTION Vbus_IRQ_GetVector (END)

             ; FUNCTION _Vbus_IRQ_SetPriority (BEGIN)
                                           ; SOURCE LINE # 216
0000 900000      R     MOV     DPTR,#priority
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 217
                                           ; SOURCE LINE # 218
0005 900000      R     MOV     DPTR,#priority
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B C4                SWAP    A
000C 33                RLC     A
000D 54E0              ANL     A,#0E0H
000F FF                MOV     R7,A
0010 904480            MOV     DPTR,#04480H
0013 EF                MOV     A,R7
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 219
0015 22                RET     
             ; FUNCTION _Vbus_IRQ_SetPriority (END)

             ; FUNCTION Vbus_IRQ_GetPriority (BEGIN)
                                           ; SOURCE LINE # 236
                                           ; SOURCE LINE # 237
C51 COMPILER V9.51   VBUS_IRQ                                                              03/15/2014 15:13:45 PAGE 10  

                                           ; SOURCE LINE # 241
0000 904480            MOV     DPTR,#04480H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 C4                SWAP    A
0007 13                RRC     A
0008 5407              ANL     A,#07H
000A FF                MOV     R7,A
000B 900000      R     MOV     DPTR,#priority
000E EF                MOV     A,R7
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 243
0010 900000      R     MOV     DPTR,#priority
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
                                           ; SOURCE LINE # 244
0015         ?C0011:
0015 22                RET     
             ; FUNCTION Vbus_IRQ_GetPriority (END)

             ; FUNCTION Vbus_IRQ_Enable (BEGIN)
                                           ; SOURCE LINE # 261
                                           ; SOURCE LINE # 262
                                           ; SOURCE LINE # 264
0000 9044C0            MOV     DPTR,#044C0H
0003 7401              MOV     A,#01H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 265
0006 22                RET     
             ; FUNCTION Vbus_IRQ_Enable (END)

             ; FUNCTION Vbus_IRQ_GetState (BEGIN)
                                           ; SOURCE LINE # 282
                                           ; SOURCE LINE # 283
                                           ; SOURCE LINE # 285
0000 9044C0            MOV     DPTR,#044C0H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 30E004            JNB     ACC.0,?C0013
0009 7F01              MOV     R7,#01H
000B 8002              SJMP    ?C0014
000D         ?C0013:
000D 7F00              MOV     R7,#00H
000F         ?C0014:
                                           ; SOURCE LINE # 286
000F         ?C0015:
000F 22                RET     
             ; FUNCTION Vbus_IRQ_GetState (END)

             ; FUNCTION Vbus_IRQ_Disable (BEGIN)
                                           ; SOURCE LINE # 303
                                           ; SOURCE LINE # 304
                                           ; SOURCE LINE # 306
0000 9044C8            MOV     DPTR,#044C8H
0003 7401              MOV     A,#01H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 307
0006 22                RET     
             ; FUNCTION Vbus_IRQ_Disable (END)

C51 COMPILER V9.51   VBUS_IRQ                                                              03/15/2014 15:13:45 PAGE 11  

             ; FUNCTION Vbus_IRQ_SetPending (BEGIN)
                                           ; SOURCE LINE # 325
                                           ; SOURCE LINE # 326
                                           ; SOURCE LINE # 327
0000 9044D0            MOV     DPTR,#044D0H
0003 7401              MOV     A,#01H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 328
0006 22                RET     
             ; FUNCTION Vbus_IRQ_SetPending (END)

             ; FUNCTION Vbus_IRQ_ClearPending (BEGIN)
                                           ; SOURCE LINE # 345
                                           ; SOURCE LINE # 346
                                           ; SOURCE LINE # 347
0000 9044D8            MOV     DPTR,#044D8H
0003 7401              MOV     A,#01H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 348
0006 22                RET     
             ; FUNCTION Vbus_IRQ_ClearPending (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    284    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
