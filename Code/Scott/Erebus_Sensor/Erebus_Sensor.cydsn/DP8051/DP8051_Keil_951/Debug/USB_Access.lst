C51 COMPILER V9.51   USB_ACCESS                                                            04/26/2014 14:34:16 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE USB_ACCESS
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\USB_Access.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\USB_Access.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\USB_Access.lst) CD DB NOIP OT(0,SIZE) DF(D
                    -EBUG) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\USB_Access.obj)

line level    source

   1          /* ========================================
   2           *
   3           * Copyright YOUR COMPANY, THE YEAR
   4           * All Rights Reserved
   5           * UNPUBLISHED, LICENSED SOFTWARE.
   6           *
   7           * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8           * WHICH IS THE PROPERTY OF your company.
   9           *
  10           * ========================================
  11          */
  12          #include "USB_Access.h"
  13          #include "EmEEPROM_Access.h" // Location of sampled data in flash
  14          /* This file provides function definitions for USB interactions */
  15          
  16          void USB_ISR(){
  17   1          
  18   1          // Power has just been applied to the Vbus pin, so we enter USB communication mode
  19   1      
  20   1          uint8 result = 0;
  21   1          uint8 command = 0;
  22   1          USB_LED_on();
  23   1                 
  24   1          /* Start USBFS Operation with 5V operation */
  25   1          USBUART_Start(0u, USBUART_5V_OPERATION);
  26   1          
  27   1          /* Wait for Device to enumerate */
  28   1          while(!USBUART_GetConfiguration() && Vbus_Read());
  29   1      
  30   1          /* Enumeration is done, enable OUT endpoint for receive data from Host */
  31   1          USBUART_CDC_Init();
  32   1            
  33   1          while(Vbus_Read())
  34   1          {  
  35   2              if(USBUART_DataIsReady() != 0u){   /* Check for input data from PC */
  36   3                  result = retrieve(&command, COMMAND_LENGTH);
  37   3                  
  38   3                  if (command == NULL_BYTE){
  39   4                      continue;
  40   4                  }
  41   3              
  42   3                  if (result == SUCCESS){
  43   4                      
  44   4                      switch (command){
  45   5                      
  46   5                          case IDENTIFY:
  47   5                              send_reply(IDENTIFIER);
  48   5                              break;
  49   5                          
  50   5                          case DUMP_DATA:
  51   5                              dump_data();
  52   5                              confirm_dump();
  53   5                              break;
C51 COMPILER V9.51   USB_ACCESS                                                            04/26/2014 14:34:16 PAGE 2   

  54   5                              
  55   5                          case GET_SETTINGS:
  56   5                              send_settings();
  57   5                              
  58   5                          case CHANGE_SETTING:
  59   5                              send_reply(apply_settings());                  
  60   5                              break;
  61   5                           
  62   5                          case HARD_RESET:
  63   5                              hard_reset();
  64   5                              send_reply(SUCCESS);
  65   5                              break;
  66   5                              
  67   5                          default:
  68   5                              send_reply(FAIL);
  69   5                      }
  70   4                  }   
  71   3                  else{
  72   4                      send_reply(FAIL);
  73   4                  }
  74   3              }
  75   2          }
  76   1          
  77   1          USB_Close();
  78   1          USB_LED_off();
  79   1          
  80   1          return;
  81   1      }
  82          
  83          uint8 retrieve(uint8* buffer, uint8 num_bytes){
  84   1          uint16 count = 0;
  85   1          uint8 attempts = 0;
  86   1          uint8 result = SUCCESS;
  87   1          
  88   1          count = USBUART_GetCount(); 
  89   1          
  90   1          // If data in buffer is the right amount for a command,
  91   1          // retrieve it
  92   1          if(count == num_bytes){
  93   2              USBUART_GetData(buffer, num_bytes);
  94   2          }
  95   1          // Otherwise, flush the USB buffer and report fail
  96   1          else{
  97   2              USBUART_GetChar();
  98   2              result = FAIL;
  99   2          }
 100   1          
 101   1          return result;
 102   1      }
 103          
 104          uint8 apply_settings(){
 105   1          uint8 result = FAIL;
 106   1          uint8 settings_buffer[NUM_SETTINGS] = {0};
 107   1          settings_group new_settings;
 108   1          
 109   1          while (!USBUART_DataIsReady() && Vbus_Read());
 110   1          
 111   1          if (Vbus_Read()){
 112   2              if (retrieve(settings_buffer, NUM_SETTINGS) == SUCCESS){
 113   3                  new_settings.sensor = settings_buffer[0];
 114   3                  new_settings.sample_unit = settings_buffer[1];
 115   3                  new_settings.sample_interval = settings_buffer[2];
C51 COMPILER V9.51   USB_ACCESS                                                            04/26/2014 14:34:16 PAGE 3   

 116   3                  
 117   3                  result = update_settings(new_settings);   
 118   3              }
 119   2          }
 120   1          
 121   1          
 122   1          return result;
 123   1      }
 124          
 125          void send_settings(){
 126   1          
 127   1          uint8 settings[NUM_SETTINGS];
 128   1          
 129   1          settings[0] = get_variable(EE_SENSOR);
 130   1          settings[1] = get_variable(EE_SAMPLE_UNIT);
 131   1          settings[2] = get_variable(EE_SAMPLE_INTERVAL);
 132   1          
 133   1          while(!USBUART_CDCIsReady() && Vbus_Read());
 134   1          
 135   1          if(Vbus_Read()){
 136   2              USBUART_PutData((uint8*) &settings, sizeof(settings));
 137   2          }
 138   1          
 139   1          return;   
 140   1      }
 141          
 142          void dump_data(){
 143   1          uint8  ExportBuffer[BUFFER_LEN]; // 64 Bytes per USB data packet.
 144   1          uint8* ExportPtr =(uint8*) MemoryLocation; 
 145   1          uint16 DataCnt = 0;
 146   1          uint8  i = 0;
 147   1          
 148   1          flash_LED_on();
 149   1          while (ExportPtr < TailPtr)
 150   1          {   
 151   2              while (i < BUFFER_LEN)
 152   2              {
 153   3                  if (ExportPtr < TailPtr)
 154   3                  {
 155   4                      ExportBuffer[i] = *ExportPtr; // Copy sampled data from flash at *ExportPtr to buffer for 
             -send over usb com 
 156   4                      ++i;
 157   4                      ++ExportPtr;
 158   4                      ++DataCnt;
 159   4                  }
 160   3                  else
 161   3                  {
 162   4                      ExportBuffer[i] = PADBYTE;
 163   4                      ++i;
 164   4                  }           
 165   3              }
 166   2              
 167   2              while(!USBUART_CDCIsReady() && Vbus_Read());
 168   2              USBUART_PutData(ExportBuffer, BUFFER_LEN); // Send 64 byte packet of data from memory
 169   2              i = 0;
 170   2          }
 171   1          
 172   1          // Add the size trailer packet to get total transmission size
 173   1          DataCnt = DataCnt + 4;
 174   1          
 175   1          /* Trailer Packet to Identify End of Sampled Data in Memory */
 176   1          ExportBuffer[0] = 0x80;               // End of Data Identifier
C51 COMPILER V9.51   USB_ACCESS                                                            04/26/2014 14:34:16 PAGE 4   

 177   1          ExportBuffer[1] = 0x00;
 178   1          
 179   1          //2 byte Count split into two 1 byte packages to be arrayed.
 180   1          ExportBuffer[2] = (uint8)(DataCnt >> 8);;          // Count of Total Bytes Sent
 181   1          ExportBuffer[3] = (uint8)0x00FF & DataCnt;
 182   1          
 183   1          // Wait for UART to be ready
 184   1          while(!USBUART_CDCIsReady() && Vbus_Read());
 185   1          USBUART_PutData(ExportBuffer, 64u);
 186   1          
 187   1          flash_LED_off();
 188   1          
 189   1          return;
 190   1      }
 191          
 192          void send_reply(uint8 message){
 193   1         
 194   1          while(!USBUART_CDCIsReady() && Vbus_Read());
 195   1          
 196   1          if(Vbus_Read()){
 197   2              USBUART_PutData(&message, REPLY_LEN);
 198   2          }
 199   1          
 200   1          return;
 201   1      }
 202          
 203          void confirm_dump(){
 204   1          uint8 result = 0;
 205   1          uint8 command = 0;
 206   1          
 207   1          while(1){
 208   2              while(!USBUART_DataIsReady() && Vbus_Read());
 209   2              
 210   2              result = retrieve(&command, COMMAND_LENGTH);
 211   2              
 212   2              if(result == SUCCESS){
 213   3                  if (command == SUCCESS){
 214   4                      TailPtr = (uint8*) MemoryLocation;
 215   4                  }
 216   3                  break;
 217   3              }
 218   2          }
 219   1          
 220   1          return;
 221   1      }
 222          
 223          void CMD_hard_reset(){
 224   1      
 225   1          uint8 reset_flag = 0xFF;
 226   1          
 227   1          flash_LED_on();
 228   1          Em_EEPROM_Write(&reset_flag, &hard_reset_flag, 1u);
 229   1          flash_LED_off();
 230   1          
 231   1          return;
 232   1      }
 233          
 234          void USB_Close(){
 235   1          
 236   1          EEPROM_R_Stop();
 237   1          USBUART_Stop();
 238   1          CySoftwareReset();
C51 COMPILER V9.51   USB_ACCESS                                                            04/26/2014 14:34:16 PAGE 5   

 239   1          
 240   1          return;
 241   1      }
 242          
 243          
 244          
 245          
 246          /* [] END OF FILE */
C51 COMPILER V9.51   USB_ACCESS                                                            04/26/2014 14:34:16 PAGE 6   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION USB_ISR (BEGIN)
                                           ; SOURCE LINE # 16
                                           ; SOURCE LINE # 20
0000 900000      R     MOV     DPTR,#result
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 21
0005 900000      R     MOV     DPTR,#command
0008 E4                CLR     A
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 22
000A 120000      E     LCALL   USB_LED_on
                                           ; SOURCE LINE # 25
000D 7D01              MOV     R5,#01H
000F 7F00              MOV     R7,#00H
0011 120000      E     LCALL   _USBUART_Start
0014         ?C0001:
                                           ; SOURCE LINE # 28
0014 120000      E     LCALL   USBUART_GetConfiguration
0017 EF                MOV     A,R7
0018 7006              JNZ     ?C0002
001A 120000      E     LCALL   Vbus_Read
001D EF                MOV     A,R7
001E 70F4              JNZ     ?C0001
0020         ?C0002:
                                           ; SOURCE LINE # 31
0020 120000      E     LCALL   USBUART_CDC_Init
0023         ?C0003:
                                           ; SOURCE LINE # 33
0023 120000      E     LCALL   Vbus_Read
0026 EF                MOV     A,R7
0027 6076              JZ      ?C0004
                                           ; SOURCE LINE # 34
                                           ; SOURCE LINE # 35
0029 120000      E     LCALL   USBUART_DataIsReady
002C EF                MOV     A,R7
002D 60F4              JZ      ?C0003
                                           ; SOURCE LINE # 36
002F 7B01              MOV     R3,#01H
0031 7A00        R     MOV     R2,#HIGH command
0033 7900        R     MOV     R1,#LOW command
0035 7D01              MOV     R5,#01H
0037 120000      R     LCALL   _retrieve
003A 900000      R     MOV     DPTR,#result
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 38
003F 900000      R     MOV     DPTR,#command
0042 E0                MOVX    A,@DPTR
0043 FF                MOV     R7,A
0044 EF                MOV     A,R7
0045 60DC              JZ      ?C0003
                                           ; SOURCE LINE # 39
                                           ; SOURCE LINE # 40
0047         ?C0006:
                                           ; SOURCE LINE # 42
0047 900000      R     MOV     DPTR,#result
004A E0                MOVX    A,@DPTR
004B FF                MOV     R7,A
C51 COMPILER V9.51   USB_ACCESS                                                            04/26/2014 14:34:16 PAGE 7   

004C EF                MOV     A,R7
004D 6402              XRL     A,#02H
004F 7047              JNZ     ?C0007
                                           ; SOURCE LINE # 44
0051 900000      R     MOV     DPTR,#command
0054 E0                MOVX    A,@DPTR
0055 FF                MOV     R7,A
0056 EF                MOV     A,R7
0057 120000      E     LCALL   ?C?CCASE
005A 0000        R     DW      ?C0009
005C 01                DB      01H
005D 0000        R     DW      ?C0010
005F 02                DB      02H
0060 0000        R     DW      ?C0011
0062 03                DB      03H
0063 0000        R     DW      ?C0012
0065 04                DB      04H
0066 0000        R     DW      ?C0013
0068 05                DB      05H
0069 0000              DW      00H
006B 0000        R     DW      ?C0014
                                           ; SOURCE LINE # 46
006D         ?C0009:
                                           ; SOURCE LINE # 47
006D 7F01              MOV     R7,#01H
006F 120000      R     LCALL   _send_reply
                                           ; SOURCE LINE # 48
0072 80AF              SJMP    ?C0003
                                           ; SOURCE LINE # 50
0074         ?C0010:
                                           ; SOURCE LINE # 51
0074 120000      R     LCALL   dump_data
                                           ; SOURCE LINE # 52
0077 120000      R     LCALL   confirm_dump
                                           ; SOURCE LINE # 53
007A 80A7              SJMP    ?C0003
                                           ; SOURCE LINE # 55
007C         ?C0011:
                                           ; SOURCE LINE # 56
007C 120000      R     LCALL   send_settings
                                           ; SOURCE LINE # 58
007F         ?C0012:
                                           ; SOURCE LINE # 59
007F 120000      R     LCALL   apply_settings
0082 120000      R     LCALL   _send_reply
                                           ; SOURCE LINE # 60
0085 809C              SJMP    ?C0003
                                           ; SOURCE LINE # 62
0087         ?C0013:
                                           ; SOURCE LINE # 63
0087 120000      E     LCALL   hard_reset
                                           ; SOURCE LINE # 64
008A 7F02              MOV     R7,#02H
008C 120000      R     LCALL   _send_reply
                                           ; SOURCE LINE # 65
008F 8092              SJMP    ?C0003
                                           ; SOURCE LINE # 67
0091         ?C0014:
                                           ; SOURCE LINE # 68
0091 7F03              MOV     R7,#03H
0093 120000      R     LCALL   _send_reply
                                           ; SOURCE LINE # 69
C51 COMPILER V9.51   USB_ACCESS                                                            04/26/2014 14:34:16 PAGE 8   

0096         ?C0008:
                                           ; SOURCE LINE # 70
0096 808B              SJMP    ?C0003
0098         ?C0007:
                                           ; SOURCE LINE # 71
                                           ; SOURCE LINE # 72
0098 7F03              MOV     R7,#03H
009A 120000      R     LCALL   _send_reply
                                           ; SOURCE LINE # 73
009D         ?C0015:
                                           ; SOURCE LINE # 74
009D         ?C0005:
                                           ; SOURCE LINE # 75
009D 8084              SJMP    ?C0003
009F         ?C0004:
                                           ; SOURCE LINE # 77
009F 120000      R     LCALL   USB_Close
                                           ; SOURCE LINE # 78
00A2 120000      E     LCALL   USB_LED_off
                                           ; SOURCE LINE # 81
00A5         ?C0016:
00A5 22                RET     
             ; FUNCTION USB_ISR (END)

             ; FUNCTION _retrieve (BEGIN)
                                           ; SOURCE LINE # 83
0000 900000      R     MOV     DPTR,#buffer
0003 120000      E     LCALL   ?C?PSTXDATA
0006 900000      R     MOV     DPTR,#num_bytes
0009 ED                MOV     A,R5
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 84
000B 900000      R     MOV     DPTR,#count
000E E4                CLR     A
000F F0                MOVX    @DPTR,A
0010 A3                INC     DPTR
0011 E4                CLR     A
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 85
0013 900000      R     MOV     DPTR,#attempts
0016 E4                CLR     A
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 86
0018 900000      R     MOV     DPTR,#result
001B 7402              MOV     A,#02H
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 88
001E 120000      E     LCALL   USBUART_GetCount
0021 900000      R     MOV     DPTR,#count
0024 EE                MOV     A,R6
0025 F0                MOVX    @DPTR,A
0026 A3                INC     DPTR
0027 EF                MOV     A,R7
0028 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 92
0029 900000      R     MOV     DPTR,#num_bytes
002C E0                MOVX    A,@DPTR
002D FF                MOV     R7,A
002E 7E00              MOV     R6,#00H
0030 900000      R     MOV     DPTR,#count
0033 E0                MOVX    A,@DPTR
0034 FC                MOV     R4,A
C51 COMPILER V9.51   USB_ACCESS                                                            04/26/2014 14:34:16 PAGE 9   

0035 A3                INC     DPTR
0036 E0                MOVX    A,@DPTR
0037 FD                MOV     R5,A
0038 EF                MOV     A,R7
0039 B50518            CJNE    A,AR5,?C0017
003C EE                MOV     A,R6
003D B50414            CJNE    A,AR4,?C0017
                                           ; SOURCE LINE # 93
0040 900000      R     MOV     DPTR,#buffer
0043 120000      E     LCALL   ?C?PLDXDATA
0046 900000      R     MOV     DPTR,#num_bytes
0049 E0                MOVX    A,@DPTR
004A FF                MOV     R7,A
004B EF                MOV     A,R7
004C FD                MOV     R5,A
004D 7C00              MOV     R4,#00H
004F 120000      E     LCALL   _USBUART_GetData
                                           ; SOURCE LINE # 94
0052 8009              SJMP    ?C0018
0054         ?C0017:
                                           ; SOURCE LINE # 96
                                           ; SOURCE LINE # 97
0054 120000      E     LCALL   USBUART_GetChar
                                           ; SOURCE LINE # 98
0057 900000      R     MOV     DPTR,#result
005A 7403              MOV     A,#03H
005C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 99
005D         ?C0018:
                                           ; SOURCE LINE # 101
005D 900000      R     MOV     DPTR,#result
0060 E0                MOVX    A,@DPTR
0061 FF                MOV     R7,A
                                           ; SOURCE LINE # 102
0062         ?C0019:
0062 22                RET     
             ; FUNCTION _retrieve (END)

             ; FUNCTION apply_settings (BEGIN)
                                           ; SOURCE LINE # 104
                                           ; SOURCE LINE # 105
0000 900000      R     MOV     DPTR,#result
0003 7403              MOV     A,#03H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 106
0006 7BFF              MOV     R3,#0FFH
0008 7A00        R     MOV     R2,#HIGH _?ix1000
000A 7900        R     MOV     R1,#LOW _?ix1000
000C C003              PUSH    AR3
000E C002              PUSH    AR2
0010 C001              PUSH    AR1
0012 7B01              MOV     R3,#01H
0014 7A00        R     MOV     R2,#HIGH settings_buffer
0016 7900        R     MOV     R1,#LOW settings_buffer
0018 A801              MOV     R0,AR1
001A AC02              MOV     R4,AR2
001C AD03              MOV     R5,AR3
001E D001              POP     AR1
0020 D002              POP     AR2
0022 D003              POP     AR3
0024 7E00              MOV     R6,#00H
0026 7F03              MOV     R7,#03H
C51 COMPILER V9.51   USB_ACCESS                                                            04/26/2014 14:34:16 PAGE 10  

0028 120000      E     LCALL   ?C?COPYAMD
002B         ?C0020:
                                           ; SOURCE LINE # 109
002B 120000      E     LCALL   USBUART_DataIsReady
002E EF                MOV     A,R7
002F 7006              JNZ     ?C0021
0031 120000      E     LCALL   Vbus_Read
0034 EF                MOV     A,R7
0035 70F4              JNZ     ?C0020
0037         ?C0021:
                                           ; SOURCE LINE # 111
0037 120000      E     LCALL   Vbus_Read
003A EF                MOV     A,R7
003B 605B              JZ      ?C0022
                                           ; SOURCE LINE # 112
003D 7B01              MOV     R3,#01H
003F 7A00        R     MOV     R2,#HIGH settings_buffer
0041 7900        R     MOV     R1,#LOW settings_buffer
0043 7D03              MOV     R5,#03H
0045 120000      R     LCALL   _retrieve
0048 EF                MOV     A,R7
0049 6402              XRL     A,#02H
004B 704B              JNZ     ?C0022
                                           ; SOURCE LINE # 113
004D 900000      R     MOV     DPTR,#settings_buffer
0050 E0                MOVX    A,@DPTR
0051 FF                MOV     R7,A
0052 900000      R     MOV     DPTR,#new_settings
0055 EF                MOV     A,R7
0056 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 114
0057 900000      R     MOV     DPTR,#settings_buffer+01H
005A E0                MOVX    A,@DPTR
005B FF                MOV     R7,A
005C 900000      R     MOV     DPTR,#new_settings+01H
005F EF                MOV     A,R7
0060 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 115
0061 900000      R     MOV     DPTR,#settings_buffer+02H
0064 E0                MOVX    A,@DPTR
0065 FF                MOV     R7,A
0066 900000      R     MOV     DPTR,#new_settings+02H
0069 EF                MOV     A,R7
006A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 117
006B 7B01              MOV     R3,#01H
006D 7A00        R     MOV     R2,#HIGH new_settings
006F 7900        R     MOV     R1,#LOW new_settings
0071 C003              PUSH    AR3
0073 C002              PUSH    AR2
0075 C001              PUSH    AR1
0077 7B01              MOV     R3,#01H
0079 7A00        E     MOV     R2,#HIGH ?update_settings?BYTE
007B 7900        E     MOV     R1,#LOW ?update_settings?BYTE
007D A801              MOV     R0,AR1
007F AC02              MOV     R4,AR2
0081 AD03              MOV     R5,AR3
0083 D001              POP     AR1
0085 D002              POP     AR2
0087 D003              POP     AR3
0089 7E00              MOV     R6,#00H
008B 7F03              MOV     R7,#03H
C51 COMPILER V9.51   USB_ACCESS                                                            04/26/2014 14:34:16 PAGE 11  

008D 120000      E     LCALL   ?C?COPYAMD
0090 120000      E     LCALL   update_settings
0093 900000      R     MOV     DPTR,#result
0096 EF                MOV     A,R7
0097 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 118
0098         ?C0023:
                                           ; SOURCE LINE # 119
0098         ?C0022:
                                           ; SOURCE LINE # 122
0098 900000      R     MOV     DPTR,#result
009B E0                MOVX    A,@DPTR
009C FF                MOV     R7,A
                                           ; SOURCE LINE # 123
009D         ?C0024:
009D 22                RET     
             ; FUNCTION apply_settings (END)

             ; FUNCTION send_settings (BEGIN)
                                           ; SOURCE LINE # 125
                                           ; SOURCE LINE # 129
0000 7F02              MOV     R7,#02H
0002 7E00              MOV     R6,#00H
0004 120000      E     LCALL   _get_variable
0007 900000      R     MOV     DPTR,#settings
000A EF                MOV     A,R7
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 130
000C 7F00              MOV     R7,#00H
000E 7E00              MOV     R6,#00H
0010 120000      E     LCALL   _get_variable
0013 900000      R     MOV     DPTR,#settings+01H
0016 EF                MOV     A,R7
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 131
0018 7F01              MOV     R7,#01H
001A 7E00              MOV     R6,#00H
001C 120000      E     LCALL   _get_variable
001F 900000      R     MOV     DPTR,#settings+02H
0022 EF                MOV     A,R7
0023 F0                MOVX    @DPTR,A
0024         ?C0025:
                                           ; SOURCE LINE # 133
0024 120000      E     LCALL   USBUART_CDCIsReady
0027 EF                MOV     A,R7
0028 7006              JNZ     ?C0026
002A 120000      E     LCALL   Vbus_Read
002D EF                MOV     A,R7
002E 70F4              JNZ     ?C0025
0030         ?C0026:
                                           ; SOURCE LINE # 135
0030 120000      E     LCALL   Vbus_Read
0033 EF                MOV     A,R7
0034 600D              JZ      ?C0028
                                           ; SOURCE LINE # 136
0036 7B01              MOV     R3,#01H
0038 7A00        R     MOV     R2,#HIGH settings
003A 7900        R     MOV     R1,#LOW settings
003C 7D03              MOV     R5,#03H
003E 7C00              MOV     R4,#00H
0040 120000      E     LCALL   _USBUART_PutData
                                           ; SOURCE LINE # 137
C51 COMPILER V9.51   USB_ACCESS                                                            04/26/2014 14:34:16 PAGE 12  

0043         ?C0027:
                                           ; SOURCE LINE # 140
0043         ?C0028:
0043 22                RET     
             ; FUNCTION send_settings (END)

             ; FUNCTION dump_data (BEGIN)
                                           ; SOURCE LINE # 142
                                           ; SOURCE LINE # 144
0000 7BFF              MOV     R3,#0FFH
0002 7A00        E     MOV     R2,#HIGH MemoryLocation
0004 7900        E     MOV     R1,#LOW MemoryLocation
0006 900000      R     MOV     DPTR,#ExportPtr
0009 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 145
000C 900000      R     MOV     DPTR,#DataCnt
000F E4                CLR     A
0010 F0                MOVX    @DPTR,A
0011 A3                INC     DPTR
0012 E4                CLR     A
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 146
0014 900000      R     MOV     DPTR,#i
0017 E4                CLR     A
0018 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 148
0019 120000      E     LCALL   flash_LED_on
001C         ?C0029:
                                           ; SOURCE LINE # 149
001C 900000      E     MOV     DPTR,#TailPtr
001F 120000      E     LCALL   ?C?PLDXDATA
0022 C003              PUSH    AR3
0024 C002              PUSH    AR2
0026 C001              PUSH    AR1
0028 900000      R     MOV     DPTR,#ExportPtr
002B 120000      E     LCALL   ?C?PLDXDATA
002E C3                CLR     C
002F D082              POP     DPL
0031 D083              POP     DPH
0033 D0E0              POP     ACC
0035 E9                MOV     A,R1
0036 9582              SUBB    A,DPL
0038 EA                MOV     A,R2
0039 9583              SUBB    A,DPH
003B         ?C0054:
003B 4003              JC      $ + 5H
003D 020000      R     LJMP    ?C0030
                                           ; SOURCE LINE # 150
0040         ?C0031:
                                           ; SOURCE LINE # 151
0040 900000      R     MOV     DPTR,#i
0043 E0                MOVX    A,@DPTR
0044 FF                MOV     R7,A
0045 EF                MOV     A,R7
0046 C3                CLR     C
0047 9440              SUBB    A,#040H
0049 5072              JNC     ?C0035
                                           ; SOURCE LINE # 152
                                           ; SOURCE LINE # 153
004B 900000      E     MOV     DPTR,#TailPtr
004E 120000      E     LCALL   ?C?PLDXDATA
0051 C003              PUSH    AR3
C51 COMPILER V9.51   USB_ACCESS                                                            04/26/2014 14:34:16 PAGE 13  

0053 C002              PUSH    AR2
0055 C001              PUSH    AR1
0057 900000      R     MOV     DPTR,#ExportPtr
005A 120000      E     LCALL   ?C?PLDXDATA
005D C3                CLR     C
005E D082              POP     DPL
0060 D083              POP     DPH
0062 D0E0              POP     ACC
0064 E9                MOV     A,R1
0065 9582              SUBB    A,DPL
0067 EA                MOV     A,R2
0068 9583              SUBB    A,DPH
006A         ?C0055:
006A 5037              JNC     ?C0033
                                           ; SOURCE LINE # 154
                                           ; SOURCE LINE # 155
006C 900000      R     MOV     DPTR,#ExportPtr
006F 120000      E     LCALL   ?C?PLDXDATA
0072 120000      E     LCALL   ?C?CLDPTR
0075 FF                MOV     R7,A
0076 900000      R     MOV     DPTR,#i
0079 E0                MOVX    A,@DPTR
007A FE                MOV     R6,A
007B 7400        R     MOV     A,#LOW ExportBuffer
007D 2E                ADD     A,R6
007E F582              MOV     DPL,A
0080 E4                CLR     A
0081 3400        R     ADDC    A,#HIGH ExportBuffer
0083 F583              MOV     DPH,A
0085 EF                MOV     A,R7
0086 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 156
0087 900000      R     MOV     DPTR,#i
008A E0                MOVX    A,@DPTR
008B 04                INC     A
008C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 157
008D 900000      R     MOV     DPTR,#ExportPtr+01H
0090 E4                CLR     A
0091 75F001            MOV     B,#01H
0094 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 158
0097 900000      R     MOV     DPTR,#DataCnt
009A E4                CLR     A
009B 75F001            MOV     B,#01H
009E 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 159
00A1 809D              SJMP    ?C0031
00A3         ?C0033:
                                           ; SOURCE LINE # 161
                                           ; SOURCE LINE # 162
00A3 900000      R     MOV     DPTR,#i
00A6 E0                MOVX    A,@DPTR
00A7 FF                MOV     R7,A
00A8 7400        R     MOV     A,#LOW ExportBuffer
00AA 2F                ADD     A,R7
00AB F582              MOV     DPL,A
00AD E4                CLR     A
00AE 3400        R     ADDC    A,#HIGH ExportBuffer
00B0 F583              MOV     DPH,A
00B2 7440              MOV     A,#040H
00B4 F0                MOVX    @DPTR,A
C51 COMPILER V9.51   USB_ACCESS                                                            04/26/2014 14:34:16 PAGE 14  

                                           ; SOURCE LINE # 163
00B5 900000      R     MOV     DPTR,#i
00B8 E0                MOVX    A,@DPTR
00B9 04                INC     A
00BA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 164
00BB         ?C0034:
                                           ; SOURCE LINE # 165
00BB 8083              SJMP    ?C0031
00BD         ?C0032:
00BD         ?C0035:
                                           ; SOURCE LINE # 167
00BD 120000      E     LCALL   USBUART_CDCIsReady
00C0 EF                MOV     A,R7
00C1 7006              JNZ     ?C0036
00C3 120000      E     LCALL   Vbus_Read
00C6 EF                MOV     A,R7
00C7 70F4              JNZ     ?C0035
00C9         ?C0036:
                                           ; SOURCE LINE # 168
00C9 7B01              MOV     R3,#01H
00CB 7A00        R     MOV     R2,#HIGH ExportBuffer
00CD 7900        R     MOV     R1,#LOW ExportBuffer
00CF 7D40              MOV     R5,#040H
00D1 7C00              MOV     R4,#00H
00D3 120000      E     LCALL   _USBUART_PutData
                                           ; SOURCE LINE # 169
00D6 900000      R     MOV     DPTR,#i
00D9 E4                CLR     A
00DA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 170
00DB 020000      R     LJMP    ?C0029
00DE         ?C0030:
                                           ; SOURCE LINE # 173
00DE 900000      R     MOV     DPTR,#DataCnt
00E1 E4                CLR     A
00E2 75F004            MOV     B,#04H
00E5 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 176
00E8 900000      R     MOV     DPTR,#ExportBuffer
00EB 7480              MOV     A,#080H
00ED F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 177
00EE 900000      R     MOV     DPTR,#ExportBuffer+01H
00F1 E4                CLR     A
00F2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 180
00F3 900000      R     MOV     DPTR,#DataCnt
00F6 E0                MOVX    A,@DPTR
00F7 FE                MOV     R6,A
00F8 A3                INC     DPTR
00F9 E0                MOVX    A,@DPTR
00FA FF                MOV     R7,A
00FB EE                MOV     A,R6
00FC FF                MOV     R7,A
00FD 7E00              MOV     R6,#00H
00FF 900000      R     MOV     DPTR,#ExportBuffer+02H
0102 EF                MOV     A,R7
0103 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 181
0104 900000      R     MOV     DPTR,#DataCnt
0107 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   USB_ACCESS                                                            04/26/2014 14:34:16 PAGE 15  

0108 FE                MOV     R6,A
0109 A3                INC     DPTR
010A E0                MOVX    A,@DPTR
010B FF                MOV     R7,A
010C EF                MOV     A,R7
010D 54FF              ANL     A,#0FFH
010F FF                MOV     R7,A
0110 900000      R     MOV     DPTR,#ExportBuffer+03H
0113 EF                MOV     A,R7
0114 F0                MOVX    @DPTR,A
0115         ?C0037:
                                           ; SOURCE LINE # 184
0115 120000      E     LCALL   USBUART_CDCIsReady
0118 EF                MOV     A,R7
0119 7006              JNZ     ?C0038
011B 120000      E     LCALL   Vbus_Read
011E EF                MOV     A,R7
011F 70F4              JNZ     ?C0037
0121         ?C0038:
                                           ; SOURCE LINE # 185
0121 7B01              MOV     R3,#01H
0123 7A00        R     MOV     R2,#HIGH ExportBuffer
0125 7900        R     MOV     R1,#LOW ExportBuffer
0127 7D40              MOV     R5,#040H
0129 7C00              MOV     R4,#00H
012B 120000      E     LCALL   _USBUART_PutData
                                           ; SOURCE LINE # 187
012E 120000      E     LCALL   flash_LED_off
                                           ; SOURCE LINE # 190
0131         ?C0039:
0131 22                RET     
             ; FUNCTION dump_data (END)

             ; FUNCTION _send_reply (BEGIN)
                                           ; SOURCE LINE # 192
0000 900000      R     MOV     DPTR,#message
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005         ?C0040:
                                           ; SOURCE LINE # 194
0005 120000      E     LCALL   USBUART_CDCIsReady
0008 EF                MOV     A,R7
0009 7006              JNZ     ?C0041
000B 120000      E     LCALL   Vbus_Read
000E EF                MOV     A,R7
000F 70F4              JNZ     ?C0040
0011         ?C0041:
                                           ; SOURCE LINE # 196
0011 120000      E     LCALL   Vbus_Read
0014 EF                MOV     A,R7
0015 600D              JZ      ?C0043
                                           ; SOURCE LINE # 197
0017 7B01              MOV     R3,#01H
0019 7A00        R     MOV     R2,#HIGH message
001B 7900        R     MOV     R1,#LOW message
001D 7D01              MOV     R5,#01H
001F 7C00              MOV     R4,#00H
0021 120000      E     LCALL   _USBUART_PutData
                                           ; SOURCE LINE # 198
0024         ?C0042:
                                           ; SOURCE LINE # 201
0024         ?C0043:
C51 COMPILER V9.51   USB_ACCESS                                                            04/26/2014 14:34:16 PAGE 16  

0024 22                RET     
             ; FUNCTION _send_reply (END)

             ; FUNCTION confirm_dump (BEGIN)
                                           ; SOURCE LINE # 203
                                           ; SOURCE LINE # 204
0000 900000      R     MOV     DPTR,#result
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 205
0005 900000      R     MOV     DPTR,#command
0008 E4                CLR     A
0009 F0                MOVX    @DPTR,A
000A         ?C0044:
                                           ; SOURCE LINE # 207
000A         ?C0046:
                                           ; SOURCE LINE # 208
000A 120000      E     LCALL   USBUART_DataIsReady
000D EF                MOV     A,R7
000E 7006              JNZ     ?C0047
0010 120000      E     LCALL   Vbus_Read
0013 EF                MOV     A,R7
0014 70F4              JNZ     ?C0046
0016         ?C0047:
                                           ; SOURCE LINE # 210
0016 7B01              MOV     R3,#01H
0018 7A00        R     MOV     R2,#HIGH command
001A 7900        R     MOV     R1,#LOW command
001C 7D01              MOV     R5,#01H
001E 120000      R     LCALL   _retrieve
0021 900000      R     MOV     DPTR,#result
0024 EF                MOV     A,R7
0025 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 212
0026 900000      R     MOV     DPTR,#result
0029 E0                MOVX    A,@DPTR
002A FF                MOV     R7,A
002B EF                MOV     A,R7
002C B402DB            CJNE    A,#02H,?C0046
                                           ; SOURCE LINE # 213
002F 900000      R     MOV     DPTR,#command
0032 E0                MOVX    A,@DPTR
0033 FF                MOV     R7,A
0034 EF                MOV     A,R7
0035 B4020F            CJNE    A,#02H,?C0050
                                           ; SOURCE LINE # 214
0038 7BFF              MOV     R3,#0FFH
003A 7A00        E     MOV     R2,#HIGH MemoryLocation
003C 7900        E     MOV     R1,#LOW MemoryLocation
003E 900000      E     MOV     DPTR,#TailPtr
0041 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 215
0044         ?C0049:
                                           ; SOURCE LINE # 216
0044 22                RET     
                                           ; SOURCE LINE # 217
0045         ?C0048:
                                           ; SOURCE LINE # 218
0045 80C3              SJMP    ?C0046
0047         ?C0045:
                                           ; SOURCE LINE # 221
0047         ?C0050:
C51 COMPILER V9.51   USB_ACCESS                                                            04/26/2014 14:34:16 PAGE 17  

0047 22                RET     
             ; FUNCTION confirm_dump (END)

             ; FUNCTION CMD_hard_reset (BEGIN)
                                           ; SOURCE LINE # 223
                                           ; SOURCE LINE # 225
0000 900000      R     MOV     DPTR,#reset_flag
0003 74FF              MOV     A,#0FFH
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 227
0006 120000      E     LCALL   flash_LED_on
                                           ; SOURCE LINE # 228
0009 7B01              MOV     R3,#01H
000B 7A00        R     MOV     R2,#HIGH reset_flag
000D 7900        R     MOV     R1,#LOW reset_flag
000F C003              PUSH    AR3
0011 C002              PUSH    AR2
0013 C001              PUSH    AR1
0015 7BFF              MOV     R3,#0FFH
0017 7A00        E     MOV     R2,#HIGH hard_reset_flag
0019 7900        E     MOV     R1,#LOW hard_reset_flag
001B 900000      E     MOV     DPTR,#?_Em_EEPROM_Write?BYTE+03H
001E 120000      E     LCALL   ?C?PSTXDATA
0021 900000      E     MOV     DPTR,#?_Em_EEPROM_Write?BYTE+06H
0024 E4                CLR     A
0025 F0                MOVX    @DPTR,A
0026 A3                INC     DPTR
0027 7401              MOV     A,#01H
0029 F0                MOVX    @DPTR,A
002A D001              POP     AR1
002C D002              POP     AR2
002E D003              POP     AR3
0030 120000      E     LCALL   _Em_EEPROM_Write
                                           ; SOURCE LINE # 229
0033 120000      E     LCALL   flash_LED_off
                                           ; SOURCE LINE # 232
0036         ?C0051:
0036 22                RET     
             ; FUNCTION CMD_hard_reset (END)

             ; FUNCTION USB_Close (BEGIN)
                                           ; SOURCE LINE # 234
                                           ; SOURCE LINE # 236
0000 120000      E     LCALL   EEPROM_R_Stop
                                           ; SOURCE LINE # 237
0003 120000      E     LCALL   USBUART_Stop
                                           ; SOURCE LINE # 238
0006 120000      E     LCALL   CySoftwareReset
                                           ; SOURCE LINE # 241
0009         ?C0052:
0009 22                RET     
             ; FUNCTION USB_Close (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    971    ----
   CONSTANT SIZE    =      3    ----
   XDATA SIZE       =     94    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.51   USB_ACCESS                                                            04/26/2014 14:34:16 PAGE 18  

   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
