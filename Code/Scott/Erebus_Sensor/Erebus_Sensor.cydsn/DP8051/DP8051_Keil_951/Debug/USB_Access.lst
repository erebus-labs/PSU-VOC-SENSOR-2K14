C51 COMPILER V9.51   USB_ACCESS                                                            05/07/2014 04:57:57 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE USB_ACCESS
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\USB_Access.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\USB_Access.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\USB_Access.lst) CD DB NOIP OT(0,SIZE) DF(D
                    -EBUG) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\USB_Access.obj)

line level    source

   1          /* ========================================
   2           *
   3           * Copyright YOUR COMPANY, THE YEAR
   4           * All Rights Reserved
   5           * UNPUBLISHED, LICENSED SOFTWARE.
   6           *
   7           * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8           * WHICH IS THE PROPERTY OF your company.
   9           *
  10           * ========================================
  11          */
  12          
  13          #include "USB_Access.h"
  14          
  15          /* This file provides function definitions for USB interactions */
  16          
  17          void Run_USB(){
  18   1          
  19   1          // Power has just been applied to the Vbus pin, so we enter USB communication mode
  20   1      
  21   1          uint8 result = 0;
  22   1          uint8 command = 0;
  23   1          StartCollection_IRQ_Stop();
  24   1          StopCollection_IRQ_Stop();
  25   1          Vbus_IRQ_Stop();
  26   1          RTC_WriteIntervalMask(NONE_MASK);
  27   1          USBUART_Start(0u, USBUART_5V_OPERATION);
  28   1          LED_on(USB);
  29   1          
  30   1          /* Wait for Device to enumerate */
  31   1          while(!USBUART_GetConfiguration() && Vbus_Read());
  32   1      
  33   1          /* Enumeration is done, enable OUT endpoint for receive data from Host */
  34   1          USBUART_CDC_Init();
  35   1          
  36   1          while(Vbus_Read())
  37   1          {  
  38   2              if(USBUART_DataIsReady() != 0u){   /* Check for input data from PC */
  39   3                  result = retrieve(&command, COMMAND_LENGTH);
  40   3                  
  41   3                  // Discard null bytes
  42   3                  if (command == NULL_BYTE){
  43   4                      continue;
  44   4                  }
  45   3              
  46   3                  if (result == SUCCESS){
  47   4                      
  48   4                      switch (command){
  49   5                      
  50   5                          case IDENTIFY:
  51   5                              send_reply(IDENTIFIER);
  52   5                              break;
  53   5                          
C51 COMPILER V9.51   USB_ACCESS                                                            05/07/2014 04:57:57 PAGE 2   

  54   5                          case DUMP_DATA:
  55   5                              if (dump_data()){
  56   6                                  confirm_dump();
  57   6                              }
  58   5                              else{
  59   6                                  send_reply(FAIL);
  60   6                              }
  61   5                              break;
  62   5                              
  63   5                          case GET_SETTINGS:
  64   5                              send_settings();
  65   5                              break;
  66   5                              
  67   5                          case CHANGE_SETTING:
  68   5                              send_reply(SUCCESS);
  69   5                              if (apply_settings() == SUCCESS){
  70   6                                  send_reply(SUCCESS);
  71   6                              }
  72   5                              else{
  73   6                                  send_reply(FAIL);
  74   6                              }                  
  75   5                              break;
  76   5                              
  77   5                          case UPDATE_RTC:
  78   5                              send_reply(SUCCESS);
  79   5                              if (update_RTC() == SUCCESS){
  80   6                                  send_reply(SUCCESS);
  81   6                              }
  82   5                              else{
  83   6                                  send_reply(FAIL);
  84   6                              }
  85   5                              break;
  86   5                           
  87   5                          case HARD_RESET:
  88   5                              CMD_hard_reset();
  89   5                              send_reply(SUCCESS);
  90   5                              break;
  91   5                              
  92   5                          default:
  93   5                              send_reply(FAIL);
  94   5                              break;
  95   5                      }
  96   4                  }   
  97   3                  else{
  98   4                      send_reply(FAIL);
  99   4                  }
 100   3              }
 101   2          }
 102   1          
 103   1          USB_Close();
 104   1          
 105   1          return;
 106   1      }
 107          
 108          uint8 retrieve(uint8* buffer, uint8 num_bytes){
 109   1          uint16 count = 0;
 110   1          uint8 attempts = 0;
 111   1          uint8 result = FAIL;
 112   1          
 113   1          count = USBUART_GetCount(); 
 114   1          
 115   1          // If data in buffer is the right amount retrieve it
C51 COMPILER V9.51   USB_ACCESS                                                            05/07/2014 04:57:57 PAGE 3   

 116   1          if(count == num_bytes){
 117   2              USBUART_GetData(buffer, num_bytes);
 118   2              result = SUCCESS;
 119   2          }
 120   1          // Otherwise, flush the USB buffer and report fail
 121   1          else if (count > 0){
 122   2              USBUART_GetChar();
 123   2          }
 124   1          
 125   1          return result;
 126   1      }
 127          
 128          uint8 apply_settings(){
 129   1          uint8 result = FAIL;
 130   1          uint8 settings_buffer[NUM_SETTINGS] = {0};
 131   1          settings_group new_settings;
 132   1          
 133   1          while (!USBUART_DataIsReady() && Vbus_Read());
 134   1          
 135   1          if (Vbus_Read()){
 136   2              if (retrieve(settings_buffer, NUM_SETTINGS) == SUCCESS){
 137   3                  new_settings.sensor = settings_buffer[0];
 138   3                  new_settings.sample_unit = settings_buffer[1];
 139   3                  new_settings.sample_interval = settings_buffer[2];
 140   3                  
 141   3                  result = update_settings(new_settings);   
 142   3              }
 143   2          } 
 144   1          
 145   1          return result;
 146   1      }
 147          
 148          void send_settings(){
 149   1          
 150   1          uint8 settings[NUM_SETTINGS];
 151   1          
 152   1          settings[0] = get_variable(EE_SENSOR);
 153   1          settings[1] = get_variable(EE_SAMPLE_UNIT);
 154   1          settings[2] = get_variable(EE_SAMPLE_INTERVAL);
 155   1          
 156   1          while(!USBUART_CDCIsReady() && Vbus_Read());
 157   1          
 158   1          if(Vbus_Read()){
 159   2              USBUART_PutData((uint8*) &settings, sizeof(settings));
 160   2          }
 161   1          
 162   1          return;   
 163   1      }
 164          
 165          uint8 dump_data(){
 166   1          uint8  ExportBuffer[BUFFER_LEN]; // 64 Bytes per USB data packet.
 167   1          uint8* ExportPtr =(uint8*) MemoryLocation; 
 168   1          uint16 DataCnt = 0;
 169   1          uint8 i = 0;
 170   1          uint8 result = SUCCESS;
 171   1          
 172   1          LED_on(MEM);
 173   1          
 174   1          if(TailPtr == ExportPtr){
 175   2              ExportBuffer[0] = NO_DATA;
 176   2              
 177   2              for (i=1; i< BUFFER_LEN; ++i){
C51 COMPILER V9.51   USB_ACCESS                                                            05/07/2014 04:57:57 PAGE 4   

 178   3                  ExportBuffer[i] = PADBYTE;
 179   3              }
 180   2              write_out(ExportBuffer);
 181   2              
 182   2              if (wait_next() == FAIL){
 183   3                  result = FAIL;
 184   3              }     
 185   2          }
 186   1                  
 187   1          while (ExportPtr < TailPtr)
 188   1          {   
 189   2              while (i < BUFFER_LEN)
 190   2              {
 191   3                  if (ExportPtr < TailPtr)
 192   3                  {
 193   4                      ExportBuffer[i] = *ExportPtr; // Copy sampled data from flash at *ExportPtr to buffer for 
             -send over usb com 
 194   4                      ++i;
 195   4                      ++ExportPtr;
 196   4                      ++DataCnt;
 197   4                  }
 198   3                  else
 199   3                  {
 200   4                      ExportBuffer[i] = PADBYTE;
 201   4                      ++i;
 202   4                  }           
 203   3              }
 204   2              
 205   2              write_out(ExportBuffer); // Send 64 byte packet of data from memory
 206   2              i = 0;
 207   2              
 208   2              if (wait_next() == FAIL){
 209   3                  result = FAIL;
 210   3                  goto exit;
 211   3              }
 212   2          }
 213   1          
 214   1          // Add the size trailer packet to get total transmission size
 215   1          DataCnt = DataCnt + 4;
 216   1          
 217   1          /* Trailer Packet to Identify End of Sampled Data in Memory */
 218   1          ExportBuffer[0] = 0x80;               // End of Data Identifier
 219   1          ExportBuffer[1] = 0x00;
 220   1          
 221   1          //2 byte Count split into two 1 byte packages to be arrayed.
 222   1          ExportBuffer[2] = (uint8)(DataCnt >> 8);;          // Count of Total Bytes Sent
 223   1          ExportBuffer[3] = (uint8)0x00FF & DataCnt;
 224   1          
 225   1          write_out(ExportBuffer);
 226   1          
 227   1          LED_off(MEM);
 228   1      
 229   1      exit:
 230   1          return result;
 231   1      }
 232          
 233          void write_out(uint8* ExportBuffer){
 234   1          while(!USBUART_CDCIsReady() && Vbus_Read());
 235   1          USBUART_PutData(ExportBuffer, BUFFER_LEN);
 236   1      
 237   1          while(!USBUART_CDCIsReady() && Vbus_Read());
 238   1          USBUART_PutData(ExportBuffer, 0);
C51 COMPILER V9.51   USB_ACCESS                                                            05/07/2014 04:57:57 PAGE 5   

 239   1          
 240   1          return;
 241   1      }
 242              
 243          uint8 wait_next(){
 244   1          uint8 reply = 0;
 245   1          uint8 retrieve_status = 0;
 246   1          uint8 continue_status = FAIL;
 247   1      
 248   1          while(!reply && Vbus_Read()){
 249   2                  
 250   2              while(!USBUART_GetCount() && Vbus_Read()); 
 251   2              retrieve_status = retrieve(&reply, COMMAND_LENGTH);
 252   2              if(retrieve_status == SUCCESS){
 253   3                  if(reply == NEXT){
 254   4                      continue_status = SUCCESS;
 255   4                      break;
 256   4                  }
 257   3                  else if(reply == FAIL){
 258   4                      continue_status = FAIL;
 259   4                  }
 260   3              }
 261   2          }    
 262   1          
 263   1          return continue_status;
 264   1      }
 265          
 266          void send_reply(uint8 message){
 267   1         
 268   1          while(!USBUART_CDCIsReady() && Vbus_Read());
 269   1          
 270   1          if(Vbus_Read()){
 271   2              USBUART_PutData(&message, REPLY_LEN);
 272   2          }
 273   1          
 274   1          return;
 275   1      }
 276          
 277          void confirm_dump(){
 278   1          uint8 result = 0;
 279   1          uint8 command = 0;
 280   1          
 281   1          while(Vbus_Read()){
 282   2              while(!USBUART_DataIsReady() && Vbus_Read());
 283   2              
 284   2              result = retrieve(&command, COMMAND_LENGTH);
 285   2              
 286   2              if(result == SUCCESS){
 287   3                          
 288   3                  if (command == SUCCESS){
 289   4                      TailPtr = (uint8*) MemoryLocation;
 290   4                      break;
 291   4                  }
 292   3                  
 293   3                  else if (command == FAIL){
 294   4                      break;
 295   4                  }
 296   3              }
 297   2          }
 298   1          
 299   1          return;
 300   1      }
C51 COMPILER V9.51   USB_ACCESS                                                            05/07/2014 04:57:57 PAGE 6   

 301          
 302          uint8 update_RTC(){
 303   1          uint8 result = FAIL;
 304   1          uint8 time_buffer[TIME_LENGTH] = {0};
 305   1          RTC_TIME_DATE new_time;
 306   1          
 307   1          while (!USBUART_DataIsReady() && Vbus_Read());
 308   1          
 309   1          if (Vbus_Read()){
 310   2              if (retrieve(time_buffer, TIME_LENGTH) == SUCCESS){
 311   3                  new_time.Year = ((uint16) time_buffer[0]) << 0x8;
 312   3                  new_time.Year = new_time.Year | ((uint16) time_buffer[1]);
 313   3                  new_time.Sec = time_buffer[2];
 314   3                  new_time.Min = time_buffer[3];
 315   3                  new_time.Hour = time_buffer[4];
 316   3                  new_time.DayOfMonth = time_buffer[5];
 317   3                  new_time.Month = time_buffer[6];
 318   3                  
 319   3                  result = sync_RTC(&new_time);
 320   3      
 321   3              }
 322   2          }
 323   1          
 324   1          return result;
 325   1      }
 326          
 327          void CMD_hard_reset(){
 328   1      
 329   1          uint8 reset_flag = 0xFF;
 330   1          
 331   1          LED_on(MEM);
 332   1          Em_EEPROM_Write(&reset_flag, &hard_reset_flag, 1u);
 333   1          LED_off(MEM);
 334   1          
 335   1          return;
 336   1      }
 337          
 338          void USB_Close(){
 339   1          
 340   1          rtc_setup();   
 341   1          EEPROM_R_Stop();
 342   1          USBUART_Stop();
 343   1          StartCollection_IRQ_Start();
 344   1          Vbus_IRQ_Start();
 345   1          LED_off(USB);
 346   1          
 347   1          return;
 348   1      }
 349          
 350          /* [] END OF FILE */
C51 COMPILER V9.51   USB_ACCESS                                                            05/07/2014 04:57:57 PAGE 7   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Run_USB (BEGIN)
                                           ; SOURCE LINE # 17
                                           ; SOURCE LINE # 21
0000 900000      R     MOV     DPTR,#result
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 22
0005 900000      R     MOV     DPTR,#command
0008 E4                CLR     A
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 23
000A 120000      E     LCALL   StartCollection_IRQ_Stop
                                           ; SOURCE LINE # 24
000D 120000      E     LCALL   StopCollection_IRQ_Stop
                                           ; SOURCE LINE # 25
0010 120000      E     LCALL   Vbus_IRQ_Stop
                                           ; SOURCE LINE # 26
0013 7F00              MOV     R7,#00H
0015 120000      E     LCALL   _RTC_WriteIntervalMask
                                           ; SOURCE LINE # 27
0018 7D01              MOV     R5,#01H
001A 7F00              MOV     R7,#00H
001C 120000      E     LCALL   _USBUART_Start
                                           ; SOURCE LINE # 28
001F 7F01              MOV     R7,#01H
0021 120000      E     LCALL   _LED_on
0024         ?C0001:
                                           ; SOURCE LINE # 31
0024 120000      E     LCALL   USBUART_GetConfiguration
0027 EF                MOV     A,R7
0028 7006              JNZ     ?C0002
002A 120000      E     LCALL   Vbus_Read
002D EF                MOV     A,R7
002E 70F4              JNZ     ?C0001
0030         ?C0002:
                                           ; SOURCE LINE # 34
0030 120000      E     LCALL   USBUART_CDC_Init
0033         ?C0003:
                                           ; SOURCE LINE # 36
0033 120000      E     LCALL   Vbus_Read
0036 EF                MOV     A,R7
0037 7003              JNZ     $ + 5H
0039 020000      R     LJMP    ?C0004
                                           ; SOURCE LINE # 37
                                           ; SOURCE LINE # 38
003C 120000      E     LCALL   USBUART_DataIsReady
003F EF                MOV     A,R7
0040 60F1              JZ      ?C0003
                                           ; SOURCE LINE # 39
0042 7B01              MOV     R3,#01H
0044 7A00        R     MOV     R2,#HIGH command
0046 7900        R     MOV     R1,#LOW command
0048 7D01              MOV     R5,#01H
004A 120000      R     LCALL   _retrieve
004D 900000      R     MOV     DPTR,#result
0050 EF                MOV     A,R7
0051 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 42
0052 900000      R     MOV     DPTR,#command
C51 COMPILER V9.51   USB_ACCESS                                                            05/07/2014 04:57:57 PAGE 8   

0055 E0                MOVX    A,@DPTR
0056 FF                MOV     R7,A
0057 EF                MOV     A,R7
0058 60D9              JZ      ?C0003
                                           ; SOURCE LINE # 43
                                           ; SOURCE LINE # 44
005A         ?C0006:
                                           ; SOURCE LINE # 46
005A 900000      R     MOV     DPTR,#result
005D E0                MOVX    A,@DPTR
005E FF                MOV     R7,A
005F EF                MOV     A,R7
0060 6402              XRL     A,#02H
0062 6003              JZ      $ + 5H
0064 020000      R     LJMP    ?C0007
                                           ; SOURCE LINE # 48
0067 900000      R     MOV     DPTR,#command
006A E0                MOVX    A,@DPTR
006B FF                MOV     R7,A
006C EF                MOV     A,R7
006D 120000      E     LCALL   ?C?CCASE
0070 0000        R     DW      ?C0009
0072 01                DB      01H
0073 0000        R     DW      ?C0010
0075 02                DB      02H
0076 0000        R     DW      ?C0013
0078 03                DB      03H
0079 0000        R     DW      ?C0014
007B 04                DB      04H
007C 0000        R     DW      ?C0020
007E 05                DB      05H
007F 0000        R     DW      ?C0017
0081 06                DB      06H
0082 0000              DW      00H
0084 0000        R     DW      ?C0021
                                           ; SOURCE LINE # 50
0086         ?C0009:
                                           ; SOURCE LINE # 51
0086 7F01              MOV     R7,#01H
0088 120000      R     LCALL   _send_reply
                                           ; SOURCE LINE # 52
008B 80A6              SJMP    ?C0003
                                           ; SOURCE LINE # 54
008D         ?C0010:
                                           ; SOURCE LINE # 55
008D 120000      R     LCALL   dump_data
0090 EF                MOV     A,R7
0091 6005              JZ      ?C0011
                                           ; SOURCE LINE # 56
0093 120000      R     LCALL   confirm_dump
                                           ; SOURCE LINE # 57
0096 809B              SJMP    ?C0003
0098         ?C0011:
                                           ; SOURCE LINE # 58
                                           ; SOURCE LINE # 59
0098 7F03              MOV     R7,#03H
009A 120000      R     LCALL   _send_reply
                                           ; SOURCE LINE # 60
009D         ?C0012:
                                           ; SOURCE LINE # 61
009D 8094              SJMP    ?C0003
                                           ; SOURCE LINE # 63
C51 COMPILER V9.51   USB_ACCESS                                                            05/07/2014 04:57:57 PAGE 9   

009F         ?C0013:
                                           ; SOURCE LINE # 64
009F 120000      R     LCALL   send_settings
                                           ; SOURCE LINE # 65
00A2 808F              SJMP    ?C0003
                                           ; SOURCE LINE # 67
00A4         ?C0014:
                                           ; SOURCE LINE # 68
00A4 7F02              MOV     R7,#02H
00A6 120000      R     LCALL   _send_reply
                                           ; SOURCE LINE # 69
00A9 120000      R     LCALL   apply_settings
00AC EF                MOV     A,R7
00AD B40208            CJNE    A,#02H,?C0015
                                           ; SOURCE LINE # 70
00B0 7F02              MOV     R7,#02H
00B2 120000      R     LCALL   _send_reply
                                           ; SOURCE LINE # 71
00B5 020000      R     LJMP    ?C0003
00B8         ?C0015:
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 73
00B8 7F03              MOV     R7,#03H
00BA 120000      R     LCALL   _send_reply
                                           ; SOURCE LINE # 74
00BD         ?C0016:
                                           ; SOURCE LINE # 75
00BD 020000      R     LJMP    ?C0003
                                           ; SOURCE LINE # 77
00C0         ?C0017:
                                           ; SOURCE LINE # 78
00C0 7F02              MOV     R7,#02H
00C2 120000      R     LCALL   _send_reply
                                           ; SOURCE LINE # 79
00C5 120000      R     LCALL   update_RTC
00C8 EF                MOV     A,R7
00C9 B40208            CJNE    A,#02H,?C0018
                                           ; SOURCE LINE # 80
00CC 7F02              MOV     R7,#02H
00CE 120000      R     LCALL   _send_reply
                                           ; SOURCE LINE # 81
00D1 020000      R     LJMP    ?C0003
00D4         ?C0018:
                                           ; SOURCE LINE # 82
                                           ; SOURCE LINE # 83
00D4 7F03              MOV     R7,#03H
00D6 120000      R     LCALL   _send_reply
                                           ; SOURCE LINE # 84
00D9         ?C0019:
                                           ; SOURCE LINE # 85
00D9 020000      R     LJMP    ?C0003
                                           ; SOURCE LINE # 87
00DC         ?C0020:
                                           ; SOURCE LINE # 88
00DC 120000      R     LCALL   CMD_hard_reset
                                           ; SOURCE LINE # 89
00DF 7F02              MOV     R7,#02H
00E1 120000      R     LCALL   _send_reply
                                           ; SOURCE LINE # 90
00E4 020000      R     LJMP    ?C0003
                                           ; SOURCE LINE # 92
00E7         ?C0021:
C51 COMPILER V9.51   USB_ACCESS                                                            05/07/2014 04:57:57 PAGE 10  

                                           ; SOURCE LINE # 93
00E7 7F03              MOV     R7,#03H
00E9 120000      R     LCALL   _send_reply
                                           ; SOURCE LINE # 94
00EC 020000      R     LJMP    ?C0003
                                           ; SOURCE LINE # 95
00EF         ?C0008:
                                           ; SOURCE LINE # 96
00EF 020000      R     LJMP    ?C0003
00F2         ?C0007:
                                           ; SOURCE LINE # 97
                                           ; SOURCE LINE # 98
00F2 7F03              MOV     R7,#03H
00F4 120000      R     LCALL   _send_reply
                                           ; SOURCE LINE # 99
00F7         ?C0022:
                                           ; SOURCE LINE # 100
00F7         ?C0005:
                                           ; SOURCE LINE # 101
00F7 020000      R     LJMP    ?C0003
00FA         ?C0004:
                                           ; SOURCE LINE # 103
00FA 120000      R     LCALL   USB_Close
                                           ; SOURCE LINE # 106
00FD         ?C0023:
00FD 22                RET     
             ; FUNCTION Run_USB (END)

             ; FUNCTION _retrieve (BEGIN)
                                           ; SOURCE LINE # 108
0000 900000      R     MOV     DPTR,#buffer
0003 120000      E     LCALL   ?C?PSTXDATA
0006 900000      R     MOV     DPTR,#num_bytes
0009 ED                MOV     A,R5
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 109
000B 900000      R     MOV     DPTR,#count
000E E4                CLR     A
000F F0                MOVX    @DPTR,A
0010 A3                INC     DPTR
0011 E4                CLR     A
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 110
0013 900000      R     MOV     DPTR,#attempts
0016 E4                CLR     A
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 111
0018 900000      R     MOV     DPTR,#result
001B 7403              MOV     A,#03H
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 113
001E 120000      E     LCALL   USBUART_GetCount
0021 900000      R     MOV     DPTR,#count
0024 EE                MOV     A,R6
0025 F0                MOVX    @DPTR,A
0026 A3                INC     DPTR
0027 EF                MOV     A,R7
0028 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 116
0029 900000      R     MOV     DPTR,#num_bytes
002C E0                MOVX    A,@DPTR
002D FF                MOV     R7,A
C51 COMPILER V9.51   USB_ACCESS                                                            05/07/2014 04:57:57 PAGE 11  

002E 7E00              MOV     R6,#00H
0030 900000      R     MOV     DPTR,#count
0033 E0                MOVX    A,@DPTR
0034 FC                MOV     R4,A
0035 A3                INC     DPTR
0036 E0                MOVX    A,@DPTR
0037 FD                MOV     R5,A
0038 EF                MOV     A,R7
0039 B5051E            CJNE    A,AR5,?C0024
003C EE                MOV     A,R6
003D B5041A            CJNE    A,AR4,?C0024
                                           ; SOURCE LINE # 117
0040 900000      R     MOV     DPTR,#buffer
0043 120000      E     LCALL   ?C?PLDXDATA
0046 900000      R     MOV     DPTR,#num_bytes
0049 E0                MOVX    A,@DPTR
004A FF                MOV     R7,A
004B EF                MOV     A,R7
004C FD                MOV     R5,A
004D 7C00              MOV     R4,#00H
004F 120000      E     LCALL   _USBUART_GetData
                                           ; SOURCE LINE # 118
0052 900000      R     MOV     DPTR,#result
0055 7402              MOV     A,#02H
0057 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 119
0058 8014              SJMP    ?C0025
005A         ?C0024:
                                           ; SOURCE LINE # 121
005A 900000      R     MOV     DPTR,#count
005D E0                MOVX    A,@DPTR
005E FE                MOV     R6,A
005F A3                INC     DPTR
0060 E0                MOVX    A,@DPTR
0061 FF                MOV     R7,A
0062 D3                SETB    C
0063 EF                MOV     A,R7
0064 9400              SUBB    A,#00H
0066 EE                MOV     A,R6
0067 9400              SUBB    A,#00H
0069 4003              JC      ?C0025
                                           ; SOURCE LINE # 122
006B 120000      E     LCALL   USBUART_GetChar
                                           ; SOURCE LINE # 123
006E         ?C0026:
006E         ?C0025:
                                           ; SOURCE LINE # 125
006E 900000      R     MOV     DPTR,#result
0071 E0                MOVX    A,@DPTR
0072 FF                MOV     R7,A
                                           ; SOURCE LINE # 126
0073         ?C0027:
0073 22                RET     
             ; FUNCTION _retrieve (END)

             ; FUNCTION apply_settings (BEGIN)
                                           ; SOURCE LINE # 128
                                           ; SOURCE LINE # 129
0000 900000      R     MOV     DPTR,#result
0003 7403              MOV     A,#03H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 130
C51 COMPILER V9.51   USB_ACCESS                                                            05/07/2014 04:57:57 PAGE 12  

0006 7BFF              MOV     R3,#0FFH
0008 7A00        R     MOV     R2,#HIGH _?ix1000
000A 7900        R     MOV     R1,#LOW _?ix1000
000C C003              PUSH    AR3
000E C002              PUSH    AR2
0010 C001              PUSH    AR1
0012 7B01              MOV     R3,#01H
0014 7A00        R     MOV     R2,#HIGH settings_buffer
0016 7900        R     MOV     R1,#LOW settings_buffer
0018 A801              MOV     R0,AR1
001A AC02              MOV     R4,AR2
001C AD03              MOV     R5,AR3
001E D001              POP     AR1
0020 D002              POP     AR2
0022 D003              POP     AR3
0024 7E00              MOV     R6,#00H
0026 7F03              MOV     R7,#03H
0028 120000      E     LCALL   ?C?COPYAMD
002B         ?C0028:
                                           ; SOURCE LINE # 133
002B 120000      E     LCALL   USBUART_DataIsReady
002E EF                MOV     A,R7
002F 7006              JNZ     ?C0029
0031 120000      E     LCALL   Vbus_Read
0034 EF                MOV     A,R7
0035 70F4              JNZ     ?C0028
0037         ?C0029:
                                           ; SOURCE LINE # 135
0037 120000      E     LCALL   Vbus_Read
003A EF                MOV     A,R7
003B 605B              JZ      ?C0030
                                           ; SOURCE LINE # 136
003D 7B01              MOV     R3,#01H
003F 7A00        R     MOV     R2,#HIGH settings_buffer
0041 7900        R     MOV     R1,#LOW settings_buffer
0043 7D03              MOV     R5,#03H
0045 120000      R     LCALL   _retrieve
0048 EF                MOV     A,R7
0049 6402              XRL     A,#02H
004B 704B              JNZ     ?C0030
                                           ; SOURCE LINE # 137
004D 900000      R     MOV     DPTR,#settings_buffer
0050 E0                MOVX    A,@DPTR
0051 FF                MOV     R7,A
0052 900000      R     MOV     DPTR,#new_settings
0055 EF                MOV     A,R7
0056 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 138
0057 900000      R     MOV     DPTR,#settings_buffer+01H
005A E0                MOVX    A,@DPTR
005B FF                MOV     R7,A
005C 900000      R     MOV     DPTR,#new_settings+01H
005F EF                MOV     A,R7
0060 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 139
0061 900000      R     MOV     DPTR,#settings_buffer+02H
0064 E0                MOVX    A,@DPTR
0065 FF                MOV     R7,A
0066 900000      R     MOV     DPTR,#new_settings+02H
0069 EF                MOV     A,R7
006A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 141
C51 COMPILER V9.51   USB_ACCESS                                                            05/07/2014 04:57:57 PAGE 13  

006B 7B01              MOV     R3,#01H
006D 7A00        R     MOV     R2,#HIGH new_settings
006F 7900        R     MOV     R1,#LOW new_settings
0071 C003              PUSH    AR3
0073 C002              PUSH    AR2
0075 C001              PUSH    AR1
0077 7B01              MOV     R3,#01H
0079 7A00        E     MOV     R2,#HIGH ?update_settings?BYTE
007B 7900        E     MOV     R1,#LOW ?update_settings?BYTE
007D A801              MOV     R0,AR1
007F AC02              MOV     R4,AR2
0081 AD03              MOV     R5,AR3
0083 D001              POP     AR1
0085 D002              POP     AR2
0087 D003              POP     AR3
0089 7E00              MOV     R6,#00H
008B 7F03              MOV     R7,#03H
008D 120000      E     LCALL   ?C?COPYAMD
0090 120000      E     LCALL   update_settings
0093 900000      R     MOV     DPTR,#result
0096 EF                MOV     A,R7
0097 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 142
0098         ?C0031:
                                           ; SOURCE LINE # 143
0098         ?C0030:
                                           ; SOURCE LINE # 145
0098 900000      R     MOV     DPTR,#result
009B E0                MOVX    A,@DPTR
009C FF                MOV     R7,A
                                           ; SOURCE LINE # 146
009D         ?C0032:
009D 22                RET     
             ; FUNCTION apply_settings (END)

             ; FUNCTION send_settings (BEGIN)
                                           ; SOURCE LINE # 148
                                           ; SOURCE LINE # 152
0000 7F00              MOV     R7,#00H
0002 7E00              MOV     R6,#00H
0004 120000      E     LCALL   _get_variable
0007 900000      R     MOV     DPTR,#settings
000A EF                MOV     A,R7
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 153
000C 7F01              MOV     R7,#01H
000E 7E00              MOV     R6,#00H
0010 120000      E     LCALL   _get_variable
0013 900000      R     MOV     DPTR,#settings+01H
0016 EF                MOV     A,R7
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 154
0018 7F02              MOV     R7,#02H
001A 7E00              MOV     R6,#00H
001C 120000      E     LCALL   _get_variable
001F 900000      R     MOV     DPTR,#settings+02H
0022 EF                MOV     A,R7
0023 F0                MOVX    @DPTR,A
0024         ?C0033:
                                           ; SOURCE LINE # 156
0024 120000      E     LCALL   USBUART_CDCIsReady
0027 EF                MOV     A,R7
C51 COMPILER V9.51   USB_ACCESS                                                            05/07/2014 04:57:57 PAGE 14  

0028 7006              JNZ     ?C0034
002A 120000      E     LCALL   Vbus_Read
002D EF                MOV     A,R7
002E 70F4              JNZ     ?C0033
0030         ?C0034:
                                           ; SOURCE LINE # 158
0030 120000      E     LCALL   Vbus_Read
0033 EF                MOV     A,R7
0034 600D              JZ      ?C0036
                                           ; SOURCE LINE # 159
0036 7B01              MOV     R3,#01H
0038 7A00        R     MOV     R2,#HIGH settings
003A 7900        R     MOV     R1,#LOW settings
003C 7D03              MOV     R5,#03H
003E 7C00              MOV     R4,#00H
0040 120000      E     LCALL   _USBUART_PutData
                                           ; SOURCE LINE # 160
0043         ?C0035:
                                           ; SOURCE LINE # 163
0043         ?C0036:
0043 22                RET     
             ; FUNCTION send_settings (END)

             ; FUNCTION dump_data (BEGIN)
                                           ; SOURCE LINE # 165
                                           ; SOURCE LINE # 167
0000 7BFF              MOV     R3,#0FFH
0002 7A00        E     MOV     R2,#HIGH MemoryLocation
0004 7900        E     MOV     R1,#LOW MemoryLocation
0006 900000      R     MOV     DPTR,#ExportPtr
0009 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 168
000C 900000      R     MOV     DPTR,#DataCnt
000F E4                CLR     A
0010 F0                MOVX    @DPTR,A
0011 A3                INC     DPTR
0012 E4                CLR     A
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 169
0014 900000      R     MOV     DPTR,#i
0017 E4                CLR     A
0018 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 170
0019 900000      R     MOV     DPTR,#result
001C 7402              MOV     A,#02H
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 172
001F 7F02              MOV     R7,#02H
0021 120000      E     LCALL   _LED_on
                                           ; SOURCE LINE # 174
0024 900000      R     MOV     DPTR,#ExportPtr
0027 120000      E     LCALL   ?C?PLDXDATA
002A C003              PUSH    AR3
002C C002              PUSH    AR2
002E C001              PUSH    AR1
0030 900000      E     MOV     DPTR,#TailPtr
0033 120000      E     LCALL   ?C?PLDXDATA
0036 D082              POP     DPL
0038 D083              POP     DPH
003A D0E0              POP     ACC
003C 6B                XRL     A,R3
003D 7008              JNZ     ?C0086
C51 COMPILER V9.51   USB_ACCESS                                                            05/07/2014 04:57:57 PAGE 15  

003F E9                MOV     A,R1
0040 6582              XRL     A,DPL
0042 7003              JNZ     ?C0086
0044 EA                MOV     A,R2
0045 6583              XRL     A,DPH
0047         ?C0086:
0047 7047              JNZ     ?C0042
                                           ; SOURCE LINE # 175
0049 900000      R     MOV     DPTR,#ExportBuffer
004C 74A0              MOV     A,#0A0H
004E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 177
004F 900000      R     MOV     DPTR,#i
0052 7401              MOV     A,#01H
0054 F0                MOVX    @DPTR,A
0055         ?C0038:
0055 900000      R     MOV     DPTR,#i
0058 E0                MOVX    A,@DPTR
0059 FF                MOV     R7,A
005A EF                MOV     A,R7
005B C3                CLR     C
005C 9440              SUBB    A,#040H
005E 501A              JNC     ?C0039
                                           ; SOURCE LINE # 178
0060 900000      R     MOV     DPTR,#i
0063 E0                MOVX    A,@DPTR
0064 FF                MOV     R7,A
0065 7400        R     MOV     A,#LOW ExportBuffer
0067 2F                ADD     A,R7
0068 F582              MOV     DPL,A
006A E4                CLR     A
006B 3400        R     ADDC    A,#HIGH ExportBuffer
006D F583              MOV     DPH,A
006F 7440              MOV     A,#040H
0071 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 179
0072         ?C0040:
0072 900000      R     MOV     DPTR,#i
0075 E0                MOVX    A,@DPTR
0076 04                INC     A
0077 F0                MOVX    @DPTR,A
0078 80DB              SJMP    ?C0038
007A         ?C0039:
                                           ; SOURCE LINE # 180
007A 7B01              MOV     R3,#01H
007C 7A00        R     MOV     R2,#HIGH ExportBuffer
007E 7900        R     MOV     R1,#LOW ExportBuffer
0080 120000      R     LCALL   _write_out
                                           ; SOURCE LINE # 182
0083 120000      R     LCALL   wait_next
0086 EF                MOV     A,R7
0087 B40306            CJNE    A,#03H,?C0042
                                           ; SOURCE LINE # 183
008A 900000      R     MOV     DPTR,#result
008D 7403              MOV     A,#03H
008F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 184
0090         ?C0041:
                                           ; SOURCE LINE # 185
0090         ?C0037:
0090         ?C0042:
                                           ; SOURCE LINE # 187
C51 COMPILER V9.51   USB_ACCESS                                                            05/07/2014 04:57:57 PAGE 16  

0090 900000      E     MOV     DPTR,#TailPtr
0093 120000      E     LCALL   ?C?PLDXDATA
0096 C003              PUSH    AR3
0098 C002              PUSH    AR2
009A C001              PUSH    AR1
009C 900000      R     MOV     DPTR,#ExportPtr
009F 120000      E     LCALL   ?C?PLDXDATA
00A2 C3                CLR     C
00A3 D082              POP     DPL
00A5 D083              POP     DPH
00A7 D0E0              POP     ACC
00A9 E9                MOV     A,R1
00AA 9582              SUBB    A,DPL
00AC EA                MOV     A,R2
00AD 9583              SUBB    A,DPH
00AF         ?C0087:
00AF 4003              JC      $ + 5H
00B1 020000      R     LJMP    ?C0043
                                           ; SOURCE LINE # 188
00B4         ?C0044:
                                           ; SOURCE LINE # 189
00B4 900000      R     MOV     DPTR,#i
00B7 E0                MOVX    A,@DPTR
00B8 FF                MOV     R7,A
00B9 EF                MOV     A,R7
00BA C3                CLR     C
00BB 9440              SUBB    A,#040H
00BD 5072              JNC     ?C0045
                                           ; SOURCE LINE # 190
                                           ; SOURCE LINE # 191
00BF 900000      E     MOV     DPTR,#TailPtr
00C2 120000      E     LCALL   ?C?PLDXDATA
00C5 C003              PUSH    AR3
00C7 C002              PUSH    AR2
00C9 C001              PUSH    AR1
00CB 900000      R     MOV     DPTR,#ExportPtr
00CE 120000      E     LCALL   ?C?PLDXDATA
00D1 C3                CLR     C
00D2 D082              POP     DPL
00D4 D083              POP     DPH
00D6 D0E0              POP     ACC
00D8 E9                MOV     A,R1
00D9 9582              SUBB    A,DPL
00DB EA                MOV     A,R2
00DC 9583              SUBB    A,DPH
00DE         ?C0088:
00DE 5037              JNC     ?C0046
                                           ; SOURCE LINE # 192
                                           ; SOURCE LINE # 193
00E0 900000      R     MOV     DPTR,#ExportPtr
00E3 120000      E     LCALL   ?C?PLDXDATA
00E6 120000      E     LCALL   ?C?CLDPTR
00E9 FF                MOV     R7,A
00EA 900000      R     MOV     DPTR,#i
00ED E0                MOVX    A,@DPTR
00EE FE                MOV     R6,A
00EF 7400        R     MOV     A,#LOW ExportBuffer
00F1 2E                ADD     A,R6
00F2 F582              MOV     DPL,A
00F4 E4                CLR     A
00F5 3400        R     ADDC    A,#HIGH ExportBuffer
00F7 F583              MOV     DPH,A
C51 COMPILER V9.51   USB_ACCESS                                                            05/07/2014 04:57:57 PAGE 17  

00F9 EF                MOV     A,R7
00FA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 194
00FB 900000      R     MOV     DPTR,#i
00FE E0                MOVX    A,@DPTR
00FF 04                INC     A
0100 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 195
0101 900000      R     MOV     DPTR,#ExportPtr+01H
0104 E4                CLR     A
0105 75F001            MOV     B,#01H
0108 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 196
010B 900000      R     MOV     DPTR,#DataCnt
010E E4                CLR     A
010F 75F001            MOV     B,#01H
0112 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 197
0115 809D              SJMP    ?C0044
0117         ?C0046:
                                           ; SOURCE LINE # 199
                                           ; SOURCE LINE # 200
0117 900000      R     MOV     DPTR,#i
011A E0                MOVX    A,@DPTR
011B FF                MOV     R7,A
011C 7400        R     MOV     A,#LOW ExportBuffer
011E 2F                ADD     A,R7
011F F582              MOV     DPL,A
0121 E4                CLR     A
0122 3400        R     ADDC    A,#HIGH ExportBuffer
0124 F583              MOV     DPH,A
0126 7440              MOV     A,#040H
0128 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 201
0129 900000      R     MOV     DPTR,#i
012C E0                MOVX    A,@DPTR
012D 04                INC     A
012E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 202
012F         ?C0047:
                                           ; SOURCE LINE # 203
012F 8083              SJMP    ?C0044
0131         ?C0045:
                                           ; SOURCE LINE # 205
0131 7B01              MOV     R3,#01H
0133 7A00        R     MOV     R2,#HIGH ExportBuffer
0135 7900        R     MOV     R1,#LOW ExportBuffer
0137 120000      R     LCALL   _write_out
                                           ; SOURCE LINE # 206
013A 900000      R     MOV     DPTR,#i
013D E4                CLR     A
013E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 208
013F 120000      R     LCALL   wait_next
0142 EF                MOV     A,R7
0143 6403              XRL     A,#03H
0145 6003              JZ      $ + 5H
0147 020000      R     LJMP    ?C0042
                                           ; SOURCE LINE # 209
014A 900000      R     MOV     DPTR,#result
014D 7403              MOV     A,#03H
014F F0                MOVX    @DPTR,A
C51 COMPILER V9.51   USB_ACCESS                                                            05/07/2014 04:57:57 PAGE 18  

                                           ; SOURCE LINE # 210
0150 8048              SJMP    exit
                                           ; SOURCE LINE # 211
0152         ?C0048:
                                           ; SOURCE LINE # 212
0152 020000      R     LJMP    ?C0042
0155         ?C0043:
                                           ; SOURCE LINE # 215
0155 900000      R     MOV     DPTR,#DataCnt
0158 E4                CLR     A
0159 75F004            MOV     B,#04H
015C 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 218
015F 900000      R     MOV     DPTR,#ExportBuffer
0162 7480              MOV     A,#080H
0164 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 219
0165 900000      R     MOV     DPTR,#ExportBuffer+01H
0168 E4                CLR     A
0169 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 222
016A 900000      R     MOV     DPTR,#DataCnt
016D E0                MOVX    A,@DPTR
016E FE                MOV     R6,A
016F A3                INC     DPTR
0170 E0                MOVX    A,@DPTR
0171 FF                MOV     R7,A
0172 EE                MOV     A,R6
0173 FF                MOV     R7,A
0174 7E00              MOV     R6,#00H
0176 900000      R     MOV     DPTR,#ExportBuffer+02H
0179 EF                MOV     A,R7
017A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 223
017B 900000      R     MOV     DPTR,#DataCnt
017E E0                MOVX    A,@DPTR
017F FE                MOV     R6,A
0180 A3                INC     DPTR
0181 E0                MOVX    A,@DPTR
0182 FF                MOV     R7,A
0183 EF                MOV     A,R7
0184 54FF              ANL     A,#0FFH
0186 FF                MOV     R7,A
0187 900000      R     MOV     DPTR,#ExportBuffer+03H
018A EF                MOV     A,R7
018B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 225
018C 7B01              MOV     R3,#01H
018E 7A00        R     MOV     R2,#HIGH ExportBuffer
0190 7900        R     MOV     R1,#LOW ExportBuffer
0192 120000      R     LCALL   _write_out
                                           ; SOURCE LINE # 227
0195 7F02              MOV     R7,#02H
0197 120000      E     LCALL   _LED_off
                                           ; SOURCE LINE # 229
019A         exit:
                                           ; SOURCE LINE # 230
019A 900000      R     MOV     DPTR,#result
019D E0                MOVX    A,@DPTR
019E FF                MOV     R7,A
                                           ; SOURCE LINE # 231
019F         ?C0050:
C51 COMPILER V9.51   USB_ACCESS                                                            05/07/2014 04:57:57 PAGE 19  

019F 22                RET     
             ; FUNCTION dump_data (END)

             ; FUNCTION _write_out (BEGIN)
                                           ; SOURCE LINE # 233
0000 900000      R     MOV     DPTR,#ExportBuffer
0003 120000      E     LCALL   ?C?PSTXDATA
0006         ?C0051:
                                           ; SOURCE LINE # 234
0006 120000      E     LCALL   USBUART_CDCIsReady
0009 EF                MOV     A,R7
000A 7006              JNZ     ?C0052
000C 120000      E     LCALL   Vbus_Read
000F EF                MOV     A,R7
0010 70F4              JNZ     ?C0051
0012         ?C0052:
                                           ; SOURCE LINE # 235
0012 900000      R     MOV     DPTR,#ExportBuffer
0015 120000      E     LCALL   ?C?PLDXDATA
0018 7D40              MOV     R5,#040H
001A 7C00              MOV     R4,#00H
001C 120000      E     LCALL   _USBUART_PutData
001F         ?C0053:
                                           ; SOURCE LINE # 237
001F 120000      E     LCALL   USBUART_CDCIsReady
0022 EF                MOV     A,R7
0023 7006              JNZ     ?C0054
0025 120000      E     LCALL   Vbus_Read
0028 EF                MOV     A,R7
0029 70F4              JNZ     ?C0053
002B         ?C0054:
                                           ; SOURCE LINE # 238
002B 900000      R     MOV     DPTR,#ExportBuffer
002E 120000      E     LCALL   ?C?PLDXDATA
0031 7D00              MOV     R5,#00H
0033 7C00              MOV     R4,#00H
0035 120000      E     LCALL   _USBUART_PutData
                                           ; SOURCE LINE # 241
0038         ?C0055:
0038 22                RET     
             ; FUNCTION _write_out (END)

             ; FUNCTION wait_next (BEGIN)
                                           ; SOURCE LINE # 243
                                           ; SOURCE LINE # 244
0000 900000      R     MOV     DPTR,#reply
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 245
0005 900000      R     MOV     DPTR,#retrieve_status
0008 E4                CLR     A
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 246
000A 900000      R     MOV     DPTR,#continue_status
000D 7403              MOV     A,#03H
000F F0                MOVX    @DPTR,A
0010         ?C0056:
                                           ; SOURCE LINE # 248
0010 900000      R     MOV     DPTR,#reply
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
0015 EF                MOV     A,R7
C51 COMPILER V9.51   USB_ACCESS                                                            05/07/2014 04:57:57 PAGE 20  

0016 7050              JNZ     ?C0057
0018 120000      E     LCALL   Vbus_Read
001B EF                MOV     A,R7
001C 604A              JZ      ?C0057
001E         ?C0058:
                                           ; SOURCE LINE # 250
001E 120000      E     LCALL   USBUART_GetCount
0021 EF                MOV     A,R7
0022 4E                ORL     A,R6
0023 7006              JNZ     ?C0059
0025 120000      E     LCALL   Vbus_Read
0028 EF                MOV     A,R7
0029 70F3              JNZ     ?C0058
002B         ?C0059:
                                           ; SOURCE LINE # 251
002B 7B01              MOV     R3,#01H
002D 7A00        R     MOV     R2,#HIGH reply
002F 7900        R     MOV     R1,#LOW reply
0031 7D01              MOV     R5,#01H
0033 120000      R     LCALL   _retrieve
0036 900000      R     MOV     DPTR,#retrieve_status
0039 EF                MOV     A,R7
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 252
003B 900000      R     MOV     DPTR,#retrieve_status
003E E0                MOVX    A,@DPTR
003F FF                MOV     R7,A
0040 EF                MOV     A,R7
0041 B402CC            CJNE    A,#02H,?C0056
                                           ; SOURCE LINE # 253
0044 900000      R     MOV     DPTR,#reply
0047 E0                MOVX    A,@DPTR
0048 FF                MOV     R7,A
0049 EF                MOV     A,R7
004A B4070A            CJNE    A,#07H,?C0061
                                           ; SOURCE LINE # 254
004D 900000      R     MOV     DPTR,#continue_status
0050 7402              MOV     A,#02H
0052 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 255
0053 8013              SJMP    ?C0057
                                           ; SOURCE LINE # 256
0055 80B9              SJMP    ?C0056
0057         ?C0061:
                                           ; SOURCE LINE # 257
0057 900000      R     MOV     DPTR,#reply
005A E0                MOVX    A,@DPTR
005B FF                MOV     R7,A
005C EF                MOV     A,R7
005D B403B0            CJNE    A,#03H,?C0056
                                           ; SOURCE LINE # 258
0060 900000      R     MOV     DPTR,#continue_status
0063 7403              MOV     A,#03H
0065 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 259
0066         ?C0063:
0066         ?C0062:
                                           ; SOURCE LINE # 260
0066         ?C0060:
                                           ; SOURCE LINE # 261
0066 80A8              SJMP    ?C0056
0068         ?C0057:
C51 COMPILER V9.51   USB_ACCESS                                                            05/07/2014 04:57:57 PAGE 21  

                                           ; SOURCE LINE # 263
0068 900000      R     MOV     DPTR,#continue_status
006B E0                MOVX    A,@DPTR
006C FF                MOV     R7,A
                                           ; SOURCE LINE # 264
006D         ?C0064:
006D 22                RET     
             ; FUNCTION wait_next (END)

             ; FUNCTION _send_reply (BEGIN)
                                           ; SOURCE LINE # 266
0000 900000      R     MOV     DPTR,#message
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005         ?C0065:
                                           ; SOURCE LINE # 268
0005 120000      E     LCALL   USBUART_CDCIsReady
0008 EF                MOV     A,R7
0009 7006              JNZ     ?C0066
000B 120000      E     LCALL   Vbus_Read
000E EF                MOV     A,R7
000F 70F4              JNZ     ?C0065
0011         ?C0066:
                                           ; SOURCE LINE # 270
0011 120000      E     LCALL   Vbus_Read
0014 EF                MOV     A,R7
0015 600D              JZ      ?C0068
                                           ; SOURCE LINE # 271
0017 7B01              MOV     R3,#01H
0019 7A00        R     MOV     R2,#HIGH message
001B 7900        R     MOV     R1,#LOW message
001D 7D01              MOV     R5,#01H
001F 7C00              MOV     R4,#00H
0021 120000      E     LCALL   _USBUART_PutData
                                           ; SOURCE LINE # 272
0024         ?C0067:
                                           ; SOURCE LINE # 275
0024         ?C0068:
0024 22                RET     
             ; FUNCTION _send_reply (END)

             ; FUNCTION confirm_dump (BEGIN)
                                           ; SOURCE LINE # 277
                                           ; SOURCE LINE # 278
0000 900000      R     MOV     DPTR,#result
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 279
0005 900000      R     MOV     DPTR,#command
0008 E4                CLR     A
0009 F0                MOVX    @DPTR,A
000A         ?C0069:
                                           ; SOURCE LINE # 281
000A 120000      E     LCALL   Vbus_Read
000D EF                MOV     A,R7
000E 6049              JZ      ?C0077
0010         ?C0071:
                                           ; SOURCE LINE # 282
0010 120000      E     LCALL   USBUART_DataIsReady
0013 EF                MOV     A,R7
0014 7006              JNZ     ?C0072
0016 120000      E     LCALL   Vbus_Read
C51 COMPILER V9.51   USB_ACCESS                                                            05/07/2014 04:57:57 PAGE 22  

0019 EF                MOV     A,R7
001A 70F4              JNZ     ?C0071
001C         ?C0072:
                                           ; SOURCE LINE # 284
001C 7B01              MOV     R3,#01H
001E 7A00        R     MOV     R2,#HIGH command
0020 7900        R     MOV     R1,#LOW command
0022 7D01              MOV     R5,#01H
0024 120000      R     LCALL   _retrieve
0027 900000      R     MOV     DPTR,#result
002A EF                MOV     A,R7
002B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 286
002C 900000      R     MOV     DPTR,#result
002F E0                MOVX    A,@DPTR
0030 FF                MOV     R7,A
0031 EF                MOV     A,R7
0032 B402D5            CJNE    A,#02H,?C0069
                                           ; SOURCE LINE # 288
0035 900000      R     MOV     DPTR,#command
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A EF                MOV     A,R7
003B B4020F            CJNE    A,#02H,?C0074
                                           ; SOURCE LINE # 289
003E 7BFF              MOV     R3,#0FFH
0040 7A00        E     MOV     R2,#HIGH MemoryLocation
0042 7900        E     MOV     R1,#LOW MemoryLocation
0044 900000      E     MOV     DPTR,#TailPtr
0047 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 290
004A 22                RET     
                                           ; SOURCE LINE # 291
004B 80BD              SJMP    ?C0069
004D         ?C0074:
                                           ; SOURCE LINE # 293
004D 900000      R     MOV     DPTR,#command
0050 E0                MOVX    A,@DPTR
0051 FF                MOV     R7,A
0052 EF                MOV     A,R7
0053 B403B4            CJNE    A,#03H,?C0069
                                           ; SOURCE LINE # 294
0056 22                RET     
                                           ; SOURCE LINE # 295
0057         ?C0076:
0057         ?C0075:
                                           ; SOURCE LINE # 296
0057         ?C0073:
                                           ; SOURCE LINE # 297
0057 80B1              SJMP    ?C0069
0059         ?C0070:
                                           ; SOURCE LINE # 300
0059         ?C0077:
0059 22                RET     
             ; FUNCTION confirm_dump (END)

             ; FUNCTION update_RTC (BEGIN)
                                           ; SOURCE LINE # 302
                                           ; SOURCE LINE # 303
0000 900000      R     MOV     DPTR,#result
0003 7403              MOV     A,#03H
0005 F0                MOVX    @DPTR,A
C51 COMPILER V9.51   USB_ACCESS                                                            05/07/2014 04:57:57 PAGE 23  

                                           ; SOURCE LINE # 304
0006 7BFF              MOV     R3,#0FFH
0008 7A00        R     MOV     R2,#HIGH _?ix1001
000A 7900        R     MOV     R1,#LOW _?ix1001
000C C003              PUSH    AR3
000E C002              PUSH    AR2
0010 C001              PUSH    AR1
0012 7B01              MOV     R3,#01H
0014 7A00        R     MOV     R2,#HIGH time_buffer
0016 7900        R     MOV     R1,#LOW time_buffer
0018 A801              MOV     R0,AR1
001A AC02              MOV     R4,AR2
001C AD03              MOV     R5,AR3
001E D001              POP     AR1
0020 D002              POP     AR2
0022 D003              POP     AR3
0024 7E00              MOV     R6,#00H
0026 7F07              MOV     R7,#07H
0028 120000      E     LCALL   ?C?COPYAMD
002B         ?C0078:
                                           ; SOURCE LINE # 307
002B 120000      E     LCALL   USBUART_DataIsReady
002E EF                MOV     A,R7
002F 7006              JNZ     ?C0079
0031 120000      E     LCALL   Vbus_Read
0034 EF                MOV     A,R7
0035 70F4              JNZ     ?C0078
0037         ?C0079:
                                           ; SOURCE LINE # 309
0037 120000      E     LCALL   Vbus_Read
003A EF                MOV     A,R7
003B 7003              JNZ     $ + 5H
003D 020000      R     LJMP    ?C0080
                                           ; SOURCE LINE # 310
0040 7B01              MOV     R3,#01H
0042 7A00        R     MOV     R2,#HIGH time_buffer
0044 7900        R     MOV     R1,#LOW time_buffer
0046 7D07              MOV     R5,#07H
0048 120000      R     LCALL   _retrieve
004B EF                MOV     A,R7
004C 6402              XRL     A,#02H
004E 7070              JNZ     ?C0080
                                           ; SOURCE LINE # 311
0050 900000      R     MOV     DPTR,#time_buffer
0053 E0                MOVX    A,@DPTR
0054 FF                MOV     R7,A
0055 7E00              MOV     R6,#00H
0057 EF                MOV     A,R7
0058 7F00              MOV     R7,#00H
005A FE                MOV     R6,A
005B 900000      R     MOV     DPTR,#new_time+08H
005E EE                MOV     A,R6
005F F0                MOVX    @DPTR,A
0060 A3                INC     DPTR
0061 EF                MOV     A,R7
0062 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 312
0063 900000      R     MOV     DPTR,#time_buffer+01H
0066 E0                MOVX    A,@DPTR
0067 FF                MOV     R7,A
0068 7E00              MOV     R6,#00H
006A 900000      R     MOV     DPTR,#new_time+08H
C51 COMPILER V9.51   USB_ACCESS                                                            05/07/2014 04:57:57 PAGE 24  

006D E0                MOVX    A,@DPTR
006E FC                MOV     R4,A
006F A3                INC     DPTR
0070 E0                MOVX    A,@DPTR
0071 FD                MOV     R5,A
0072 EE                MOV     A,R6
0073 4C                ORL     A,R4
0074 FE                MOV     R6,A
0075 EF                MOV     A,R7
0076 4D                ORL     A,R5
0077 FF                MOV     R7,A
0078 900000      R     MOV     DPTR,#new_time+08H
007B EE                MOV     A,R6
007C F0                MOVX    @DPTR,A
007D A3                INC     DPTR
007E EF                MOV     A,R7
007F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 313
0080 900000      R     MOV     DPTR,#time_buffer+02H
0083 E0                MOVX    A,@DPTR
0084 FF                MOV     R7,A
0085 900000      R     MOV     DPTR,#new_time
0088 EF                MOV     A,R7
0089 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 314
008A 900000      R     MOV     DPTR,#time_buffer+03H
008D E0                MOVX    A,@DPTR
008E FF                MOV     R7,A
008F 900000      R     MOV     DPTR,#new_time+01H
0092 EF                MOV     A,R7
0093 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 315
0094 900000      R     MOV     DPTR,#time_buffer+04H
0097 E0                MOVX    A,@DPTR
0098 FF                MOV     R7,A
0099 900000      R     MOV     DPTR,#new_time+02H
009C EF                MOV     A,R7
009D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 316
009E 900000      R     MOV     DPTR,#time_buffer+05H
00A1 E0                MOVX    A,@DPTR
00A2 FF                MOV     R7,A
00A3 900000      R     MOV     DPTR,#new_time+04H
00A6 EF                MOV     A,R7
00A7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 317
00A8 900000      R     MOV     DPTR,#time_buffer+06H
00AB E0                MOVX    A,@DPTR
00AC FF                MOV     R7,A
00AD 900000      R     MOV     DPTR,#new_time+07H
00B0 EF                MOV     A,R7
00B1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 319
00B2 7B01              MOV     R3,#01H
00B4 7A00        R     MOV     R2,#HIGH new_time
00B6 7900        R     MOV     R1,#LOW new_time
00B8 120000      E     LCALL   _sync_RTC
00BB 900000      R     MOV     DPTR,#result
00BE EF                MOV     A,R7
00BF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 321
00C0         ?C0081:
C51 COMPILER V9.51   USB_ACCESS                                                            05/07/2014 04:57:57 PAGE 25  

                                           ; SOURCE LINE # 322
00C0         ?C0080:
                                           ; SOURCE LINE # 324
00C0 900000      R     MOV     DPTR,#result
00C3 E0                MOVX    A,@DPTR
00C4 FF                MOV     R7,A
                                           ; SOURCE LINE # 325
00C5         ?C0082:
00C5 22                RET     
             ; FUNCTION update_RTC (END)

             ; FUNCTION CMD_hard_reset (BEGIN)
                                           ; SOURCE LINE # 327
                                           ; SOURCE LINE # 329
0000 900000      R     MOV     DPTR,#reset_flag
0003 74FF              MOV     A,#0FFH
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 331
0006 7F02              MOV     R7,#02H
0008 120000      E     LCALL   _LED_on
                                           ; SOURCE LINE # 332
000B 7B01              MOV     R3,#01H
000D 7A00        R     MOV     R2,#HIGH reset_flag
000F 7900        R     MOV     R1,#LOW reset_flag
0011 C003              PUSH    AR3
0013 C002              PUSH    AR2
0015 C001              PUSH    AR1
0017 7BFF              MOV     R3,#0FFH
0019 7A00        E     MOV     R2,#HIGH hard_reset_flag
001B 7900        E     MOV     R1,#LOW hard_reset_flag
001D 900000      E     MOV     DPTR,#?_Em_EEPROM_Write?BYTE+03H
0020 120000      E     LCALL   ?C?PSTXDATA
0023 900000      E     MOV     DPTR,#?_Em_EEPROM_Write?BYTE+06H
0026 E4                CLR     A
0027 F0                MOVX    @DPTR,A
0028 A3                INC     DPTR
0029 7401              MOV     A,#01H
002B F0                MOVX    @DPTR,A
002C D001              POP     AR1
002E D002              POP     AR2
0030 D003              POP     AR3
0032 120000      E     LCALL   _Em_EEPROM_Write
                                           ; SOURCE LINE # 333
0035 7F02              MOV     R7,#02H
0037 120000      E     LCALL   _LED_off
                                           ; SOURCE LINE # 336
003A         ?C0083:
003A 22                RET     
             ; FUNCTION CMD_hard_reset (END)

             ; FUNCTION USB_Close (BEGIN)
                                           ; SOURCE LINE # 338
                                           ; SOURCE LINE # 340
0000 120000      E     LCALL   rtc_setup
                                           ; SOURCE LINE # 341
0003 120000      E     LCALL   EEPROM_R_Stop
                                           ; SOURCE LINE # 342
0006 120000      E     LCALL   USBUART_Stop
                                           ; SOURCE LINE # 343
0009 120000      E     LCALL   StartCollection_IRQ_Start
                                           ; SOURCE LINE # 344
000C 120000      E     LCALL   Vbus_IRQ_Start
C51 COMPILER V9.51   USB_ACCESS                                                            05/07/2014 04:57:57 PAGE 26  

                                           ; SOURCE LINE # 345
000F 7F01              MOV     R7,#01H
0011 120000      E     LCALL   _LED_off
                                           ; SOURCE LINE # 348
0014         ?C0084:
0014 22                RET     
             ; FUNCTION USB_Close (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1584    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =    119    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
