C51 COMPILER V9.51   VBUSHIGH_IRQ                                                          03/21/2014 14:33:58 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE VBUSHIGH_IRQ
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\VbusHigh_IRQ.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\VbusHigh_IRQ.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\VbusHigh_IRQ.lst)
                    - CD DB NOIP OT(2,SIZE) DF(DEBUG) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\VbusHigh_IRQ.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: VbusHigh_IRQ.c  
   3          * Version 1.70
   4          *
   5          *  Description:
   6          *   API for controlling the state of an interrupt.
   7          *
   8          *
   9          *  Note:
  10          *
  11          ********************************************************************************
  12          * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  13          * You may use this file only in accordance with the license, terms, conditions, 
  14          * disclaimers, and limitations in the end user license agreement accompanying 
  15          * the software package with which this file was provided.
  16          *******************************************************************************/
  17          
  18          #include <cydevice_trm.h>
  19          #include <CyLib.h>
  20          #include <VbusHigh_IRQ.h>
  21          
  22          #if !defined(VbusHigh_IRQ__REMOVED) /* Check for removal by optimization */
  23          
  24          /*******************************************************************************
  25          *  Place your includes, defines and code here 
  26          ********************************************************************************/
  27          /* `#START VbusHigh_IRQ_intc` */
  28          
  29          #include "USB_Access.h"
  30          #include "project.h"
  31          
  32          /* `#END` */
  33          
  34          
  35          /*******************************************************************************
  36          * Function Name: VbusHigh_IRQ_Start
  37          ********************************************************************************
  38          *
  39          * Summary:
  40          *  Set up the interrupt and enable it.
  41          *
  42          * Parameters:  
  43          *   None
  44          *
  45          * Return:
  46          *   None
  47          *
  48          *******************************************************************************/
  49          void VbusHigh_IRQ_Start(void) 
  50          {
  51   1          /* For all we know the interrupt is active. */
  52   1          VbusHigh_IRQ_Disable();
  53   1      
C51 COMPILER V9.51   VBUSHIGH_IRQ                                                          03/21/2014 14:33:58 PAGE 2   

  54   1          /* Set the ISR to point to the VbusHigh_IRQ Interrupt. */
  55   1          VbusHigh_IRQ_SetVector(&VbusHigh_IRQ_Interrupt);
  56   1      
  57   1          /* Set the priority. */
  58   1          VbusHigh_IRQ_SetPriority((uint8)VbusHigh_IRQ_INTC_PRIOR_NUMBER);
  59   1      
  60   1          /* Enable it. */
  61   1          VbusHigh_IRQ_Enable();
  62   1      }
  63          
  64          
  65          /*******************************************************************************
  66          * Function Name: VbusHigh_IRQ_StartEx
  67          ********************************************************************************
  68          *
  69          * Summary:
  70          *  Set up the interrupt and enable it.
  71          *
  72          * Parameters:  
  73          *   address: Address of the ISR to set in the interrupt vector table.
  74          *
  75          * Return:
  76          *   None
  77          *
  78          *******************************************************************************/
  79          void VbusHigh_IRQ_StartEx(cyisraddress address) 
  80          {
  81   1          /* For all we know the interrupt is active. */
  82   1          VbusHigh_IRQ_Disable();
  83   1      
  84   1          /* Set the ISR to point to the VbusHigh_IRQ Interrupt. */
  85   1          VbusHigh_IRQ_SetVector(address);
  86   1      
  87   1          /* Set the priority. */
  88   1          VbusHigh_IRQ_SetPriority((uint8)VbusHigh_IRQ_INTC_PRIOR_NUMBER);
  89   1      
  90   1          /* Enable it. */
  91   1          VbusHigh_IRQ_Enable();
  92   1      }
  93          
  94          
  95          /*******************************************************************************
  96          * Function Name: VbusHigh_IRQ_Stop
  97          ********************************************************************************
  98          *
  99          * Summary:
 100          *   Disables and removes the interrupt.
 101          *
 102          * Parameters:  
 103          *   None
 104          *
 105          * Return:
 106          *   None
 107          *
 108          *******************************************************************************/
 109          void VbusHigh_IRQ_Stop(void) 
 110          {
 111   1          /* Disable this interrupt. */
 112   1          VbusHigh_IRQ_Disable();
 113   1      }
 114          
 115          
C51 COMPILER V9.51   VBUSHIGH_IRQ                                                          03/21/2014 14:33:58 PAGE 3   

 116          /*******************************************************************************
 117          * Function Name: VbusHigh_IRQ_Interrupt
 118          ********************************************************************************
 119          * Summary:
 120          *   The default Interrupt Service Routine for VbusHigh_IRQ.
 121          *
 122          *   Add custom code between the coments to keep the next version of this file
 123          *   from over writting your code.
 124          *
 125          * Parameters:  
 126          *   None
 127          *
 128          * Return:
 129          *   None
 130          *
 131          *******************************************************************************/
 132          CY_ISR(VbusHigh_IRQ_Interrupt)
 133          {
 134   1          /*  Place your Interrupt code here. */
 135   1          /* `#START VbusHigh_IRQ_Interrupt` */
 136   1      
 137   1          // Power has just been applied to the Vbus pin, so we enter USB communication mode
 138   1      
 139   1      
 140   1          uint16 count;
 141   1          uint8 buffer[BUFFER_LEN];
 142   1          uint8 state;
 143   1          
 144   1          VbusLow_IRQ_Start();
 145   1          USB_LED_Write(1);
 146   1      
 147   1          /* Start USBFS Operation with 5V operation */
 148   1          USBUART_Start(0u, USBUART_5V_OPERATION);
 149   1          
 150   1          /* Wait for Device to enumerate */
 151   1          while(!USBUART_GetConfiguration());
 152   1      
 153   1          /* Enumeration is done, enable OUT endpoint for receive data from Host */
 154   1          USBUART_CDC_Init();
 155   1      
 156   1          /* Main Loop: */
 157   1          // This is an infinite loop because when power is removed from the Vbus pin,
 158   1          // an interrupt will be generated (of higher priority) that will force a software
 159   1          // reset and apply any new settings that have been added to EEPROM
 160   1          for(;;)
 161   1          {
 162   2              if(USBUART_DataIsReady() != 0u)               /* Check for input data from PC */
 163   2              {   
 164   3                  count = USBUART_GetAll(buffer);           /* Read received data and re-enable OUT endpoint */
 165   3                  if(count != 0u)
 166   3                  {
 167   4                      while(USBUART_CDCIsReady() == 0u);    /* Wait till component is ready to send more data to
             - the PC */ 
 168   4                      USBUART_PutData(buffer, count);       /* Send data back to PC */
 169   4                  }
 170   3              }  
 171   2              
 172   2              state = USBUART_IsLineChanged();              /* Check for Line settings changed */
 173   2          }   
 174   1      
 175   1      
 176   1          /* `#END` */
C51 COMPILER V9.51   VBUSHIGH_IRQ                                                          03/21/2014 14:33:58 PAGE 4   

 177   1      
 178   1          /* PSoC3 ES1, ES2 RTC ISR PATCH  */ 
 179   1          #if(CYDEV_CHIP_FAMILY_USED == CYDEV_CHIP_FAMILY_PSOC3)
 180   1              #if((CYDEV_CHIP_REVISION_USED <= CYDEV_CHIP_REVISION_3A_ES2) && (VbusHigh_IRQ__ES2_PATCH ))      
                          VbusHigh_IRQ_ISR_PATCH();
                      #endif /* CYDEV_CHIP_REVISION_USED */
 183   1          #endif /* (CYDEV_CHIP_FAMILY_USED == CYDEV_CHIP_FAMILY_PSOC3) */
 184   1      }
 185          
 186          
 187          /*******************************************************************************
 188          * Function Name: VbusHigh_IRQ_SetVector
 189          ********************************************************************************
 190          *
 191          * Summary:
 192          *   Change the ISR vector for the Interrupt. Note calling VbusHigh_IRQ_Start
 193          *   will override any effect this method would have had. To set the vector 
 194          *   before the component has been started use VbusHigh_IRQ_StartEx instead.
 195          *
 196          * Parameters:
 197          *   address: Address of the ISR to set in the interrupt vector table.
 198          *
 199          * Return:
 200          *   None
 201          *
 202          *******************************************************************************/
 203          void VbusHigh_IRQ_SetVector(cyisraddress address) 
 204          {
 205   1          CY_SET_REG16(VbusHigh_IRQ_INTC_VECTOR, (uint16) address);
 206   1      }
 207          
 208          
 209          /*******************************************************************************
 210          * Function Name: VbusHigh_IRQ_GetVector
 211          ********************************************************************************
 212          *
 213          * Summary:
 214          *   Gets the "address" of the current ISR vector for the Interrupt.
 215          *
 216          * Parameters:
 217          *   None
 218          *
 219          * Return:
 220          *   Address of the ISR in the interrupt vector table.
 221          *
 222          *******************************************************************************/
 223          cyisraddress VbusHigh_IRQ_GetVector(void) 
 224          {
 225   1          return (cyisraddress) CY_GET_REG16(VbusHigh_IRQ_INTC_VECTOR);
 226   1      }
 227          
 228          
 229          /*******************************************************************************
 230          * Function Name: VbusHigh_IRQ_SetPriority
 231          ********************************************************************************
 232          *
 233          * Summary:
 234          *   Sets the Priority of the Interrupt. Note calling VbusHigh_IRQ_Start
 235          *   or VbusHigh_IRQ_StartEx will override any effect this method would 
 236          *   have had. This method should only be called after VbusHigh_IRQ_Start or 
 237          *   VbusHigh_IRQ_StartEx has been called. To set the initial
 238          *   priority for the component use the cydwr file in the tool.
C51 COMPILER V9.51   VBUSHIGH_IRQ                                                          03/21/2014 14:33:58 PAGE 5   

 239          *
 240          * Parameters:
 241          *   priority: Priority of the interrupt. 0 - 7, 0 being the highest.
 242          *
 243          * Return:
 244          *   None
 245          *
 246          *******************************************************************************/
 247          void VbusHigh_IRQ_SetPriority(uint8 priority) 
 248          {
 249   1          *VbusHigh_IRQ_INTC_PRIOR = priority << 5;
 250   1      }
 251          
 252          
 253          /*******************************************************************************
 254          * Function Name: VbusHigh_IRQ_GetPriority
 255          ********************************************************************************
 256          *
 257          * Summary:
 258          *   Gets the Priority of the Interrupt.
 259          *
 260          * Parameters:
 261          *   None
 262          *
 263          * Return:
 264          *   Priority of the interrupt. 0 - 7, 0 being the highest.
 265          *
 266          *******************************************************************************/
 267          uint8 VbusHigh_IRQ_GetPriority(void) 
 268          {
 269   1          uint8 priority;
 270   1      
 271   1      
 272   1          priority = *VbusHigh_IRQ_INTC_PRIOR >> 5;
 273   1      
 274   1          return priority;
 275   1      }
 276          
 277          
 278          /*******************************************************************************
 279          * Function Name: VbusHigh_IRQ_Enable
 280          ********************************************************************************
 281          *
 282          * Summary:
 283          *   Enables the interrupt.
 284          *
 285          * Parameters:
 286          *   None
 287          *
 288          * Return:
 289          *   None
 290          *
 291          *******************************************************************************/
 292          void VbusHigh_IRQ_Enable(void) 
 293          {
 294   1          /* Enable the general interrupt. */
 295   1          *VbusHigh_IRQ_INTC_SET_EN = VbusHigh_IRQ__INTC_MASK;
 296   1      }
 297          
 298          
 299          /*******************************************************************************
 300          * Function Name: VbusHigh_IRQ_GetState
C51 COMPILER V9.51   VBUSHIGH_IRQ                                                          03/21/2014 14:33:58 PAGE 6   

 301          ********************************************************************************
 302          *
 303          * Summary:
 304          *   Gets the state (enabled, disabled) of the Interrupt.
 305          *
 306          * Parameters:
 307          *   None
 308          *
 309          * Return:
 310          *   1 if enabled, 0 if disabled.
 311          *
 312          *******************************************************************************/
 313          uint8 VbusHigh_IRQ_GetState(void) 
 314          {
 315   1          /* Get the state of the general interrupt. */
 316   1          return ((*VbusHigh_IRQ_INTC_SET_EN & (uint8)VbusHigh_IRQ__INTC_MASK) != 0u) ? 1u:0u;
 317   1      }
 318          
 319          
 320          /*******************************************************************************
 321          * Function Name: VbusHigh_IRQ_Disable
 322          ********************************************************************************
 323          *
 324          * Summary:
 325          *   Disables the Interrupt.
 326          *
 327          * Parameters:
 328          *   None
 329          *
 330          * Return:
 331          *   None
 332          *
 333          *******************************************************************************/
 334          void VbusHigh_IRQ_Disable(void) 
 335          {
 336   1          /* Disable the general interrupt. */
 337   1          *VbusHigh_IRQ_INTC_CLR_EN = VbusHigh_IRQ__INTC_MASK;
 338   1      }
 339          
 340          
 341          /*******************************************************************************
 342          * Function Name: VbusHigh_IRQ_SetPending
 343          ********************************************************************************
 344          *
 345          * Summary:
 346          *   Causes the Interrupt to enter the pending state, a software method of
 347          *   generating the interrupt.
 348          *
 349          * Parameters:
 350          *   None
 351          *
 352          * Return:
 353          *   None
 354          *
 355          *******************************************************************************/
 356          void VbusHigh_IRQ_SetPending(void) 
 357          {
 358   1          *VbusHigh_IRQ_INTC_SET_PD = VbusHigh_IRQ__INTC_MASK;
 359   1      }
 360          
 361          
 362          /*******************************************************************************
C51 COMPILER V9.51   VBUSHIGH_IRQ                                                          03/21/2014 14:33:58 PAGE 7   

 363          * Function Name: VbusHigh_IRQ_ClearPending
 364          ********************************************************************************
 365          *
 366          * Summary:
 367          *   Clears a pending interrupt.
 368          *
 369          * Parameters:
 370          *   None
 371          *
 372          * Return:
 373          *   None
 374          *
 375          *******************************************************************************/
 376          void VbusHigh_IRQ_ClearPending(void) 
 377          {
 378   1          *VbusHigh_IRQ_INTC_CLR_PD = VbusHigh_IRQ__INTC_MASK;
 379   1      }
 380          
 381          #endif /* End check for removal by optimization */
 382          
 383          
 384          /* [] END OF FILE */
C51 COMPILER V9.51   VBUSHIGH_IRQ                                                          03/21/2014 14:33:58 PAGE 8   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION VbusHigh_IRQ_Start (BEGIN)
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 50
                                           ; SOURCE LINE # 52
0000 120000      R     LCALL   VbusHigh_IRQ_Disable
                                           ; SOURCE LINE # 55
0003 7E00        R     MOV     R6,#HIGH VbusHigh_IRQ_Interrupt
0005 7F00        R     MOV     R7,#LOW VbusHigh_IRQ_Interrupt
0007 120000      R     LCALL   _VbusHigh_IRQ_SetVector
                                           ; SOURCE LINE # 58
000A 7F07              MOV     R7,#07H
000C 120000      R     LCALL   _VbusHigh_IRQ_SetPriority
                                           ; SOURCE LINE # 61
000F 120000      R     LCALL   VbusHigh_IRQ_Enable
                                           ; SOURCE LINE # 62
0012 22                RET     
             ; FUNCTION VbusHigh_IRQ_Start (END)

             ; FUNCTION _VbusHigh_IRQ_StartEx (BEGIN)
                                           ; SOURCE LINE # 79
0000 900000      R     MOV     DPTR,#address
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 80
                                           ; SOURCE LINE # 82
0008 120000      R     LCALL   VbusHigh_IRQ_Disable
                                           ; SOURCE LINE # 85
000B 900000      R     MOV     DPTR,#address
000E E0                MOVX    A,@DPTR
000F FE                MOV     R6,A
0010 A3                INC     DPTR
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 120000      R     LCALL   _VbusHigh_IRQ_SetVector
                                           ; SOURCE LINE # 88
0016 7F07              MOV     R7,#07H
0018 120000      R     LCALL   _VbusHigh_IRQ_SetPriority
                                           ; SOURCE LINE # 91
001B 120000      R     LCALL   VbusHigh_IRQ_Enable
                                           ; SOURCE LINE # 92
001E 22                RET     
             ; FUNCTION _VbusHigh_IRQ_StartEx (END)

             ; FUNCTION VbusHigh_IRQ_Stop (BEGIN)
                                           ; SOURCE LINE # 109
                                           ; SOURCE LINE # 110
                                           ; SOURCE LINE # 112
0000 120000      R     LCALL   VbusHigh_IRQ_Disable
                                           ; SOURCE LINE # 113
0003 22                RET     
             ; FUNCTION VbusHigh_IRQ_Stop (END)

             ; FUNCTION VbusHigh_IRQ_Interrupt (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0F0              PUSH    B
0004 C083              PUSH    DPH
C51 COMPILER V9.51   VBUSHIGH_IRQ                                                          03/21/2014 14:33:58 PAGE 9   

0006 C082              PUSH    DPL
0008 C085              PUSH    DPH1
000A C084              PUSH    DPL1
000C C086              PUSH    DPS
000E 758600            MOV     DPS,#00H
0011 C000        E     PUSH    ?C?XPAGE1SFR
0013 750000      E     MOV     ?C?XPAGE1SFR,#?C?XPAGE1RST
0016 C0D0              PUSH    PSW
0018 75D000            MOV     PSW,#00H
001B C000              PUSH    AR0
001D C001              PUSH    AR1
001F C002              PUSH    AR2
0021 C003              PUSH    AR3
0023 C004              PUSH    AR4
0025 C005              PUSH    AR5
0027 C006              PUSH    AR6
0029 C007              PUSH    AR7
                                           ; SOURCE LINE # 132
                                           ; SOURCE LINE # 144
002B 120000      E     LCALL   VbusLow_IRQ_Start
                                           ; SOURCE LINE # 145
002E 7F01              MOV     R7,#01H
0030 120000      E     LCALL   _USB_LED_Write
                                           ; SOURCE LINE # 148
0033 7D01              MOV     R5,#01H
0035 7F00              MOV     R7,#00H
0037 120000      E     LCALL   _USBUART_Start
003A         ?C0004:
                                           ; SOURCE LINE # 151
003A 120000      E     LCALL   USBUART_GetConfiguration
003D EF                MOV     A,R7
003E 60FA              JZ      ?C0004
0040         ?C0005:
                                           ; SOURCE LINE # 154
0040 120000      E     LCALL   USBUART_CDC_Init
                                           ; SOURCE LINE # 160
0043         ?C0006:
                                           ; SOURCE LINE # 161
                                           ; SOURCE LINE # 162
0043 120000      E     LCALL   USBUART_DataIsReady
0046 EF                MOV     A,R7
0047 6034              JZ      ?C0008
                                           ; SOURCE LINE # 163
                                           ; SOURCE LINE # 164
0049 7B01              MOV     R3,#01H
004B 7A00        R     MOV     R2,#HIGH buffer
004D 7900        R     MOV     R1,#LOW buffer
004F 120000      E     LCALL   _USBUART_GetAll
0052 900000      R     MOV     DPTR,#count
0055 EE                MOV     A,R6
0056 F0                MOVX    @DPTR,A
0057 A3                INC     DPTR
0058 EF                MOV     A,R7
0059 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 165
005A 900000      R     MOV     DPTR,#count
005D E0                MOVX    A,@DPTR
005E FE                MOV     R6,A
005F A3                INC     DPTR
0060 E0                MOVX    A,@DPTR
0061 FF                MOV     R7,A
0062 EF                MOV     A,R7
C51 COMPILER V9.51   VBUSHIGH_IRQ                                                          03/21/2014 14:33:58 PAGE 10  

0063 4E                ORL     A,R6
0064 6017              JZ      ?C0008
                                           ; SOURCE LINE # 166
0066         ?C0010:
                                           ; SOURCE LINE # 167
0066 120000      E     LCALL   USBUART_CDCIsReady
0069 EF                MOV     A,R7
006A 60FA              JZ      ?C0010
006C         ?C0011:
                                           ; SOURCE LINE # 168
006C 7B01              MOV     R3,#01H
006E 7A00        R     MOV     R2,#HIGH buffer
0070 7900        R     MOV     R1,#LOW buffer
0072 900000      R     MOV     DPTR,#count
0075 E0                MOVX    A,@DPTR
0076 FC                MOV     R4,A
0077 A3                INC     DPTR
0078 E0                MOVX    A,@DPTR
0079 FD                MOV     R5,A
007A 120000      E     LCALL   _USBUART_PutData
                                           ; SOURCE LINE # 169
                                           ; SOURCE LINE # 170
007D         ?C0008:
                                           ; SOURCE LINE # 172
007D 120000      E     LCALL   USBUART_IsLineChanged
0080 900000      R     MOV     DPTR,#state
0083 EF                MOV     A,R7
0084 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 173
0085 80BC              SJMP    ?C0006
                                           ; SOURCE LINE # 184
0087 D007              POP     AR7
0089 D006              POP     AR6
008B D005              POP     AR5
008D D004              POP     AR4
008F D003              POP     AR3
0091 D002              POP     AR2
0093 D001              POP     AR1
0095 D000              POP     AR0
0097 D0D0              POP     PSW
0099 D000        E     POP     ?C?XPAGE1SFR
009B D086              POP     DPS
009D D084              POP     DPL1
009F D085              POP     DPH1
00A1 D082              POP     DPL
00A3 D083              POP     DPH
00A5 D0F0              POP     B
00A7 D0E0              POP     ACC
00A9 32                RETI    
             ; FUNCTION VbusHigh_IRQ_Interrupt (END)

             ; FUNCTION _VbusHigh_IRQ_SetVector (BEGIN)
                                           ; SOURCE LINE # 203
0000 900000      R     MOV     DPTR,#address
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 204
                                           ; SOURCE LINE # 205
0008 7B02              MOV     R3,#02H
C51 COMPILER V9.51   VBUSHIGH_IRQ                                                          03/21/2014 14:33:58 PAGE 11  

000A 7A44              MOV     R2,#044H
000C 7900              MOV     R1,#00H
000E 900000      R     MOV     DPTR,#address
0011 E0                MOVX    A,@DPTR
0012 FE                MOV     R6,A
0013 A3                INC     DPTR
0014 E0                MOVX    A,@DPTR
0015 FF                MOV     R7,A
0016 AD07              MOV     R5,AR7
0018 AC06              MOV     R4,AR6
001A 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 206
001D 22                RET     
             ; FUNCTION _VbusHigh_IRQ_SetVector (END)

             ; FUNCTION VbusHigh_IRQ_GetVector (BEGIN)
                                           ; SOURCE LINE # 223
                                           ; SOURCE LINE # 224
                                           ; SOURCE LINE # 225
0000 7B02              MOV     R3,#02H
0002 7A44              MOV     R2,#044H
0004 7900              MOV     R1,#00H
0006 120000      E     LCALL   _cyread16_nodpx
                                           ; SOURCE LINE # 226
0009         ?C0014:
0009 22                RET     
             ; FUNCTION VbusHigh_IRQ_GetVector (END)

             ; FUNCTION _VbusHigh_IRQ_SetPriority (BEGIN)
                                           ; SOURCE LINE # 247
0000 900000      R     MOV     DPTR,#priority
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 248
                                           ; SOURCE LINE # 249
0005 900000      R     MOV     DPTR,#priority
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B C4                SWAP    A
000C 33                RLC     A
000D 54E0              ANL     A,#0E0H
000F FF                MOV     R7,A
0010 904480            MOV     DPTR,#04480H
0013 EF                MOV     A,R7
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 250
0015 22                RET     
             ; FUNCTION _VbusHigh_IRQ_SetPriority (END)

             ; FUNCTION VbusHigh_IRQ_GetPriority (BEGIN)
                                           ; SOURCE LINE # 267
                                           ; SOURCE LINE # 268
                                           ; SOURCE LINE # 272
0000 904480            MOV     DPTR,#04480H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 C4                SWAP    A
0007 13                RRC     A
0008 5407              ANL     A,#07H
000A FF                MOV     R7,A
C51 COMPILER V9.51   VBUSHIGH_IRQ                                                          03/21/2014 14:33:58 PAGE 12  

000B 900000      R     MOV     DPTR,#priority
000E EF                MOV     A,R7
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 274
0010 900000      R     MOV     DPTR,#priority
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
                                           ; SOURCE LINE # 275
0015         ?C0016:
0015 22                RET     
             ; FUNCTION VbusHigh_IRQ_GetPriority (END)

             ; FUNCTION VbusHigh_IRQ_Enable (BEGIN)
                                           ; SOURCE LINE # 292
                                           ; SOURCE LINE # 293
                                           ; SOURCE LINE # 295
0000 9044C0            MOV     DPTR,#044C0H
0003 7401              MOV     A,#01H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 296
0006 22                RET     
             ; FUNCTION VbusHigh_IRQ_Enable (END)

             ; FUNCTION VbusHigh_IRQ_GetState (BEGIN)
                                           ; SOURCE LINE # 313
                                           ; SOURCE LINE # 314
                                           ; SOURCE LINE # 316
0000 9044C0            MOV     DPTR,#044C0H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 30E004            JNB     ACC.0,?C0018
0009 7F01              MOV     R7,#01H
000B 8002              SJMP    ?C0019
000D         ?C0018:
000D 7F00              MOV     R7,#00H
000F         ?C0019:
                                           ; SOURCE LINE # 317
000F         ?C0020:
000F 22                RET     
             ; FUNCTION VbusHigh_IRQ_GetState (END)

             ; FUNCTION VbusHigh_IRQ_Disable (BEGIN)
                                           ; SOURCE LINE # 334
                                           ; SOURCE LINE # 335
                                           ; SOURCE LINE # 337
0000 9044C8            MOV     DPTR,#044C8H
0003 7401              MOV     A,#01H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 338
0006 22                RET     
             ; FUNCTION VbusHigh_IRQ_Disable (END)

             ; FUNCTION VbusHigh_IRQ_SetPending (BEGIN)
                                           ; SOURCE LINE # 356
                                           ; SOURCE LINE # 357
                                           ; SOURCE LINE # 358
0000 9044D0            MOV     DPTR,#044D0H
0003 7401              MOV     A,#01H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 359
0006 22                RET     
C51 COMPILER V9.51   VBUSHIGH_IRQ                                                          03/21/2014 14:33:58 PAGE 13  

             ; FUNCTION VbusHigh_IRQ_SetPending (END)

             ; FUNCTION VbusHigh_IRQ_ClearPending (BEGIN)
                                           ; SOURCE LINE # 376
                                           ; SOURCE LINE # 377
                                           ; SOURCE LINE # 378
0000 9044D8            MOV     DPTR,#044D8H
0003 7401              MOV     A,#01H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 379
0006 22                RET     
             ; FUNCTION VbusHigh_IRQ_ClearPending (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    352    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      73
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
