C51 COMPILER V9.51   CYFITTER_CFG                                                          03/27/2014 15:27:12 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE CYFITTER_CFG
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\cyfitter_cfg.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.lst)
                    - CD DB NOIP OT(2,SIZE) DF(DEBUG) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.obj)

line level    source

   1          /*******************************************************************************
   2          * FILENAME: cyfitter_cfg.c
   3          * PSoC Creator 3.0 Component Pack 7
   4          *
   5          * Description:
   6          * This file is automatically generated by PSoC Creator with device 
   7          * initialization code.  Except for the user defined sections in
   8          * CyClockStartupError(), this file should not be modified.
   9          *
  10          ********************************************************************************
  11          * Copyright 2013, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions, 
  13          * disclaimers, and limitations in the end user license agreement accompanying 
  14          * the software package with which this file was provided.
  15          ********************************************************************************/
  16          
  17          #include <string.h>
  18          #include <cytypes.h>
  19          #include <cydevice_trm.h>
  20          #include <cyfitter.h>
  21          #include <CyLib.h>
  22          #include <cyfitter_cfg.h>
  23          
  24          #define CY_NEED_CYCLOCKSTARTUPERROR 1
  25          
  26          
  27          #if defined(__C51__) || defined(__CX51__)
  28                  #define CYPACKED
  29                  #define CYPACKED_ATTR
  30                  #define CYALIGNED
  31                  
  32              #define CY_CFG_UNUSED
  33                  #define CY_CFG_MEMORY_BARRIER() do { } while (0)
  34          
  35          
  36          
  37                  #define CYMEMZERO(a,c) cymemzero((a),(c))
  38                  #define CYCONFIGCPY(d,s,c) cyconfigcpy((c),(s),(d))
  39                  #define CYCONFIGCPYCODE(d,s,c) cyconfigcpycode((c),(s),(d))
  40          #else
                      #error Unsupported toolchain
              #endif
  43          
  44          
  45          
  46          /* Clock startup error codes                                                   */
  47          #define CYCLOCKSTART_NO_ERROR    0u
  48          #define CYCLOCKSTART_XTAL_ERROR  1u
  49          #define CYCLOCKSTART_32KHZ_ERROR 2u
  50          #define CYCLOCKSTART_PLL_ERROR   3u
  51          
  52          #ifdef CY_NEED_CYCLOCKSTARTUPERROR
  53          /*******************************************************************************
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/27/2014 15:27:12 PAGE 2   

  54          * Function Name: CyClockStartupError
  55          ********************************************************************************
  56          * Summary:
  57          *  If an error is encountered during clock configuration (crystal startup error,
  58          *  PLL lock error, etc.), the system will end up here.  Unless reimplemented by
  59          *  the customer, this function will stop in an infinite loop.
  60          *
  61          * Parameters:
  62          *   void
  63          *
  64          * Return:
  65          *   void
  66          *
  67          *******************************************************************************/
  68          CY_CFG_UNUSED
  69          static void CyClockStartupError(uint8 errorCode);
  70          CY_CFG_UNUSED
  71          static void CyClockStartupError(uint8 errorCode)
  72          {
  73   1          /* To remove the compiler warning if errorCode not used.                */
  74   1          errorCode = errorCode;
  75   1      
  76   1          /* `#START CyClockStartupError` */
  77   1      
  78   1          /* If we have a clock startup error (bad MHz crystal, PLL lock, etc.),  */
  79   1          /* we will end up here to allow the customer to implement something to  */
  80   1          /* deal with the clock condition.                                       */
  81   1      
  82   1          /* `#END` */
  83   1      
  84   1          /* If nothing else, stop here since the clocks have not started         */
  85   1          /* correctly.                                                           */
  86   1          while(1) {}
  87   1      }
  88          #endif
  89          
  90          #define cfg_byte_table ((const void CYFAR *)0x080000u)
  91          /* IOPINS0_0 Address: CYREG_PRT0_DM0 Size (bytes): 8 */
  92          #define BS_IOPINS0_0_VAL ((const uint8 CYFAR *)0x00080128u)
  93          
  94          /* IOPINS0_8 Address: CYREG_PRT15_DR Size (bytes): 10 */
  95          #define BS_IOPINS0_8_VAL ((const uint8 CYFAR *)0x00080130u)
  96          
  97          /* IOPINS0_6 Address: CYREG_PRT6_DM0 Size (bytes): 8 */
  98          #define BS_IOPINS0_6_VAL ((const uint8 CYFAR *)0x0008013Cu)
  99          
 100          
 101          /*******************************************************************************
 102          * Function Name: ClockSetup
 103          ********************************************************************************
 104          *
 105          * Summary:
 106          *  Performs the initialization of all of the clocks in the device based on the
 107          *  settings in the Clock tab of the DWR.  This includes enabling the requested
 108          *  clocks and setting the necessary dividers to produce the desired frequency. 
 109          *
 110          * Parameters:
 111          *  void
 112          *
 113          * Return:
 114          *  void
 115          *
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/27/2014 15:27:12 PAGE 3   

 116          *******************************************************************************/
 117          static void ClockSetup(void);
 118          static void ClockSetup(void)
 119          {
 120   1              uint32 timeout;
 121   1              uint8 pllLock;
 122   1      
 123   1      
 124   1              /* Configure Digital Clocks based on settings from Clock DWR */
 125   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG0_CFG0), 0x03E7u);
 126   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG0_CFG0 + 0x2u), 0x1Bu);
 127   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG1_CFG0), 0x0063u);
 128   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG1_CFG0 + 0x2u), 0x1Bu);
 129   1      
 130   1              /* Configure ILO based on settings from Clock DWR */
 131   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_ILO_CR0), 0x06u);
 132   1      
 133   1              /* Configure IMO based on settings from Clock DWR */
 134   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_IMO_CR), 0x52u);
 135   1              CY_SET_REG8((void CYXDATA *)(CYREG_IMO_TR1), (CY_GET_XTND_REG8((void CYFAR *)CYREG_FLSHID_CUST_TABLES_IMO
             -_USB)));
 136   1      
 137   1              /* Configure PLL based on settings from Clock DWR */
 138   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_P), 0x0818u);
 139   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_CFG0), 0x1251u);
 140   1              /* Wait up to 250us for the PLL to lock */
 141   1              pllLock = 0u;
 142   1              for (timeout = 250u / 10u; (timeout > 0u) && (pllLock != 0x03u); timeout--)
 143   1              { 
 144   2                      pllLock = 0x03u & ((uint8)((uint8)pllLock << 1) | ((CY_GET_REG8((void CYXDATA *)CYREG_FASTCLK_PLL_SR) & 
             -0x01u) >> 0));
 145   2                      CyDelayCycles(10u * 48u); /* Delay 10us based on 48MHz clock */
 146   2              }
 147   1              /* If we ran out of time the PLL didn't lock so go to the error function */
 148   1              if (timeout == 0u)
 149   1              {
 150   2                      CyClockStartupError(CYCLOCKSTART_PLL_ERROR);
 151   2              }
 152   1      
 153   1              /* Configure Bus/Master Clock based on settings from Clock DWR */
 154   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_MSTR0), 0x0100u);
 155   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x07u);
 156   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG0), 0x00u);
 157   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG2), 0x48u);
 158   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00u);
 159   1      
 160   1              /* Configure USB Clock based on settings from Clock DWR */
 161   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_UCFG), 0x00u);
 162   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_LD), 0x02u);
 163   1      
 164   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG2), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG2) | 0x03u
             -)));
 165   1      }
 166          
 167          
 168          /* Analog API Functions */
 169          
 170          
 171          /*******************************************************************************
 172          * Function Name: AnalogSetDefault
 173          ********************************************************************************
 174          *
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/27/2014 15:27:12 PAGE 4   

 175          * Summary:
 176          *  Sets up the analog portions of the chip to default values based on chip
 177          *  configuration options from the project.
 178          *
 179          * Parameters:
 180          *  void
 181          *
 182          * Return:
 183          *  void
 184          *
 185          *******************************************************************************/
 186          static void AnalogSetDefault(void);
 187          static void AnalogSetDefault(void)
 188          {
 189   1              uint8 bg_xover_inl_trim = CY_GET_XTND_REG8((void CYFAR *)(CYREG_FLSHID_MFG_CFG_BG_XOVER_INL_TRIM + 1u));
 190   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT0), (bg_xover_inl_trim & 0x07u));
 191   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT1), ((bg_xover_inl_trim >> 4) & 0x0Fu));
 192   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, 0x44u);
 193   1      }
 194          
 195          
 196          /*******************************************************************************
 197          * Function Name: SetAnalogRoutingPumps
 198          ********************************************************************************
 199          *
 200          * Summary:
 201          * Enables or disables the analog pumps feeding analog routing switches.
 202          * Intended to be called at startup, based on the Vdda system configuration;
 203          * may be called during operation when the user informs us that the Vdda voltage
 204          * crossed the pump threshold.
 205          *
 206          * Parameters:
 207          *  enabled - 1 to enable the pumps, 0 to disable the pumps
 208          *
 209          * Return:
 210          *  void
 211          *
 212          *******************************************************************************/
 213          void SetAnalogRoutingPumps(uint8 enabled)
 214          {
 215   1              uint8 regValue = CY_GET_REG8((void CYXDATA *)CYREG_PUMP_CR0);
 216   1              if (enabled != 0u)
 217   1              {
 218   2                      regValue |= 0x00u;
 219   2              }
 220   1              else
 221   1              {
 222   2                      regValue &= (uint8)~0x00u;
 223   2              }
 224   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, regValue);
 225   1      }
 226          
 227          #define CY_AMUX_UNUSED CYREG_BOOST_SR
 228          
 229          
 230          /*******************************************************************************
 231          * Function Name: cyfitter_cfg
 232          ********************************************************************************
 233          * Summary:
 234          *  This function is called by the start-up code for the selected device. It
 235          *  performs all of the necessary device configuration based on the design
 236          *  settings.  This includes settings from the Design Wide Resources (DWR) such
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/27/2014 15:27:12 PAGE 5   

 237          *  as Clocks and Pins as well as any component configuration that is necessary.
 238          *
 239          * Parameters:  
 240          *   void
 241          *
 242          * Return:
 243          *   void
 244          *
 245          *******************************************************************************/
 246          
 247          void cyfitter_cfg(void)
 248          {
 249   1      
 250   1              /* Set Flash Cycles based on max possible frequency in case a glitch occurs during ClockSetup(). */
 251   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xF1u : 0xC0u));
 252   1              /* Setup clocks based on selections from Clock DWR */
 253   1              ClockSetup();
 254   1              /* Enable/Disable Debug functionality based on settings from System DWR */
 255   1              CY_SET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG, (CY_GET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG) | 
             -0x05u));
 256   1      
 257   1              {
 258   2      
 259   2                      CYPACKED typedef struct {
 260   2                              void CYFAR *address;
 261   2                              uint16 size;
 262   2                      } CYPACKED_ATTR cfg_memset_t;
 263   2      
 264   2                      static const cfg_memset_t CYCODE cfg_memset_list [] = {
 265   2                              /* address, size */
 266   2                              {(void CYFAR *)(CYREG_TMR0_CFG0), 12u},
 267   2                              {(void CYFAR *)(CYREG_PRT1_DR), 80u},
 268   2                              {(void CYFAR *)(CYREG_PRT12_DR), 16u},
 269   2                              {(void CYFAR *)(CYDEV_UCFG_B0_P0_U0_BASE), 4096u},
 270   2                              {(void CYFAR *)(CYDEV_UCFG_B1_P2_U0_BASE), 2048u},
 271   2                              {(void CYFAR *)(CYDEV_UCFG_DSI0_BASE), 2560u},
 272   2                              {(void CYFAR *)(CYDEV_UCFG_DSI12_BASE), 512u},
 273   2                              {(void CYFAR *)(CYREG_BCTL0_MDCLK_EN), 32u},
 274   2                      };
 275   2      
 276   2                      uint8 CYDATA i;
 277   2      
 278   2                      /* Zero out critical memory blocks before beginning configuration */
 279   2                      for (i = 0u; i < (sizeof(cfg_memset_list)/sizeof(cfg_memset_list[0])); i++)
 280   2                      {
 281   3                              const cfg_memset_t CYCODE * CYDATA ms = &cfg_memset_list[i];
 282   3                              CYMEMZERO(ms->address, ms->size);
 283   3                      }
 284   2      
 285   2                      cfg_write_bytes(cfg_byte_table);
 286   2      
 287   2                      /* Enable digital routing */
 288   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL
             -) | 0x02u);
 289   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL
             -) | 0x02u);
 290   2      
 291   2                      /* Enable UDB array */
 292   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x40u);
 293   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2, CY_GET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2) | 0x10u)
             -;
 294   2              }
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/27/2014 15:27:12 PAGE 6   

 295   1      
 296   1              /* Perform second pass device configuration. These items must be configured in specific order after the r
             -egular configuration is done. */
 297   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT0_DM0), (const void CYFAR *)(BS_IOPINS0_0_VAL), 8u);
 298   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT15_DR), (const void CYFAR *)(BS_IOPINS0_8_VAL), 10u);
 299   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT6_DM0), (const void CYFAR *)(BS_IOPINS0_6_VAL), 8u);
 300   1              CY_SET_REG8((void CYXDATA *)(CYREG_INTC_CSR_EN), 0x01u);
 301   1      
 302   1              /* Switch Boost to the precision bandgap reference from its internal reference */
 303   1              CY_SET_REG8((void CYXDATA *)CYREG_BOOST_CR2, (CY_GET_REG8((void CYXDATA *)CYREG_BOOST_CR2) | 0x08u));
 304   1              if (CYDEV_CHIP_REV_ACTUAL < 5u)
 305   1              {
 306   2                      CY_SET_REG8((void CYXDATA *)CYREG_PWRSYS_WAKE_TR2, 0x3Au);
 307   2              }
 308   1      
 309   1              CY_SET_XTND_REG8((void CYFAR *)(CYREG_BCTL0_UDB_TEST_3), 0x40u);
 310   1              CY_SET_XTND_REG8((void CYFAR *)(CYREG_BCTL1_UDB_TEST_3), 0x40u);
 311   1      
 312   1              /* Perform basic analog initialization to defaults */
 313   1              AnalogSetDefault();
 314   1      
 315   1              /* Configure alternate active mode */
 316   1              CYCONFIGCPY((void CYFAR *)CYDEV_PM_STBY_BASE, (const void CYFAR *)CYDEV_PM_ACT_BASE, 14u);
 317   1              CY_SET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0) & (uint8)
             -~0x02u);        /* Disable CPU */
 318   1      }
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/27/2014 15:27:12 PAGE 7   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _CyClockStartupError (BEGIN)
                                           ; SOURCE LINE # 71
0000 900000      R     MOV     DPTR,#errorCode
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 74
0005 900000      R     MOV     DPTR,#errorCode
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#errorCode
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
000F         ?C0001:
                                           ; SOURCE LINE # 86
000F 80FE              SJMP    ?C0001
0011 22                RET     
             ; FUNCTION _CyClockStartupError (END)

             ; FUNCTION ClockSetup (BEGIN)
                                           ; SOURCE LINE # 118
                                           ; SOURCE LINE # 119
                                           ; SOURCE LINE # 125
0000 7B00              MOV     R3,#00H
0002 7A40              MOV     R2,#040H
0004 7980              MOV     R1,#080H
0006 7DE7              MOV     R5,#0E7H
0008 7C03              MOV     R4,#03H
000A 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 126
000D 904082            MOV     DPTR,#04082H
0010 741B              MOV     A,#01BH
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 127
0013 7B00              MOV     R3,#00H
0015 7A40              MOV     R2,#040H
0017 7984              MOV     R1,#084H
0019 7D63              MOV     R5,#063H
001B 7C00              MOV     R4,#00H
001D 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 128
0020 904086            MOV     DPTR,#04086H
0023 741B              MOV     A,#01BH
0025 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 131
0026 904300            MOV     DPTR,#04300H
0029 7406              MOV     A,#06H
002B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 134
002C 904200            MOV     DPTR,#04200H
002F 7452              MOV     A,#052H
0031 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 135
0032 7B0C              MOV     R3,#0CH
0034 7A01              MOV     R2,#01H
0036 790F              MOV     R1,#0FH
0038 120000      E     LCALL   _cyread8
003B 9046A1            MOV     DPTR,#046A1H
003E EF                MOV     A,R7
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/27/2014 15:27:12 PAGE 8   

003F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 138
0040 7B00              MOV     R3,#00H
0042 7A42              MOV     R2,#042H
0044 7922              MOV     R1,#022H
0046 7D18              MOV     R5,#018H
0048 7C08              MOV     R4,#08H
004A 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 139
004D 7B00              MOV     R3,#00H
004F 7A42              MOV     R2,#042H
0051 7920              MOV     R1,#020H
0053 7D51              MOV     R5,#051H
0055 7C12              MOV     R4,#012H
0057 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 141
005A 900000      R     MOV     DPTR,#pllLock
005D E4                CLR     A
005E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 142
005F 7F19              MOV     R7,#019H
0061 7E00              MOV     R6,#00H
0063 7D00              MOV     R5,#00H
0065 7C00              MOV     R4,#00H
0067 900000      R     MOV     DPTR,#timeout
006A 120000      E     LCALL   ?C?LSTXDATA
006D         ?C0004:
006D 900000      R     MOV     DPTR,#timeout
0070 120000      E     LCALL   ?C?LLDXDATA
0073 D3                SETB    C
0074 EF                MOV     A,R7
0075 9400              SUBB    A,#00H
0077 EE                MOV     A,R6
0078 9400              SUBB    A,#00H
007A 404E              JC      ?C0005
007C 900000      R     MOV     DPTR,#pllLock
007F E0                MOVX    A,@DPTR
0080 FF                MOV     R7,A
0081 EF                MOV     A,R7
0082 6403              XRL     A,#03H
0084 6044              JZ      ?C0005
                                           ; SOURCE LINE # 143
                                           ; SOURCE LINE # 144
0086 904225            MOV     DPTR,#04225H
0089 E0                MOVX    A,@DPTR
008A FF                MOV     R7,A
008B EF                MOV     A,R7
008C 5401              ANL     A,#01H
008E FF                MOV     R7,A
008F 7E00              MOV     R6,#00H
0091 900000      R     MOV     DPTR,#pllLock
0094 E0                MOVX    A,@DPTR
0095 FE                MOV     R6,A
0096 EE                MOV     A,R6
0097 25E0              ADD     A,ACC
0099 FE                MOV     R6,A
009A EE                MOV     A,R6
009B 4F                ORL     A,R7
009C FF                MOV     R7,A
009D EF                MOV     A,R7
009E 5403              ANL     A,#03H
00A0 FF                MOV     R7,A
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/27/2014 15:27:12 PAGE 9   

00A1 900000      R     MOV     DPTR,#pllLock
00A4 EF                MOV     A,R7
00A5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 145
00A6 7FE0              MOV     R7,#0E0H
00A8 7E01              MOV     R6,#01H
00AA 7D00              MOV     R5,#00H
00AC 7C00              MOV     R4,#00H
00AE 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 146
00B1 900000      R     MOV     DPTR,#timeout
00B4 120000      E     LCALL   ?C?LLDXDATA
00B7 7BFF              MOV     R3,#0FFH
00B9 7AFF              MOV     R2,#0FFH
00BB 79FF              MOV     R1,#0FFH
00BD 78FF              MOV     R0,#0FFH
00BF 120000      E     LCALL   ?C?LADD
00C2 900000      R     MOV     DPTR,#timeout
00C5 120000      E     LCALL   ?C?LSTXDATA
00C8 80A3              SJMP    ?C0004
00CA         ?C0005:
                                           ; SOURCE LINE # 148
00CA 900000      R     MOV     DPTR,#timeout
00CD 120000      E     LCALL   ?C?LLDXDATA
00D0 EF                MOV     A,R7
00D1 4E                ORL     A,R6
00D2 7005              JNZ     ?C0007
                                           ; SOURCE LINE # 149
                                           ; SOURCE LINE # 150
00D4 7F03              MOV     R7,#03H
00D6 120000      R     LCALL   _CyClockStartupError
                                           ; SOURCE LINE # 151
00D9         ?C0007:
                                           ; SOURCE LINE # 154
00D9 7B00              MOV     R3,#00H
00DB 7A40              MOV     R2,#040H
00DD 7904              MOV     R1,#04H
00DF 7D00              MOV     R5,#00H
00E1 7C01              MOV     R4,#01H
00E3 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 155
00E6 904004            MOV     DPTR,#04004H
00E9 7407              MOV     A,#07H
00EB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 156
00EC 904006            MOV     DPTR,#04006H
00EF E4                CLR     A
00F0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 157
00F1 904008            MOV     DPTR,#04008H
00F4 7448              MOV     A,#048H
00F6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 158
00F7 904004            MOV     DPTR,#04004H
00FA E4                CLR     A
00FB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 161
00FC 904009            MOV     DPTR,#04009H
00FF E4                CLR     A
0100 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 162
0101 904001            MOV     DPTR,#04001H
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/27/2014 15:27:12 PAGE 10  

0104 7402              MOV     A,#02H
0106 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 164
0107 9043A2            MOV     DPTR,#043A2H
010A E0                MOVX    A,@DPTR
010B FF                MOV     R7,A
010C EF                MOV     A,R7
010D 4403              ORL     A,#03H
010F FF                MOV     R7,A
0110 9043A2            MOV     DPTR,#043A2H
0113 EF                MOV     A,R7
0114 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 165
0115 22                RET     
             ; FUNCTION ClockSetup (END)

             ; FUNCTION AnalogSetDefault (BEGIN)
                                           ; SOURCE LINE # 187
                                           ; SOURCE LINE # 188
                                           ; SOURCE LINE # 189
0000 7B0C              MOV     R3,#0CH
0002 7A01              MOV     R2,#01H
0004 79CF              MOV     R1,#0CFH
0006 120000      E     LCALL   _cyread8
0009 900000      R     MOV     DPTR,#bg_xover_inl_trim
000C EF                MOV     A,R7
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 190
000E 900000      R     MOV     DPTR,#bg_xover_inl_trim
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 EF                MOV     A,R7
0014 5407              ANL     A,#07H
0016 FF                MOV     R7,A
0017 90586E            MOV     DPTR,#0586EH
001A EF                MOV     A,R7
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 191
001C 900000      R     MOV     DPTR,#bg_xover_inl_trim
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 C4                SWAP    A
0023 540F              ANL     A,#0FH
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 540F              ANL     A,#0FH
0029 FF                MOV     R7,A
002A 90586F            MOV     DPTR,#0586FH
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 192
002F 905876            MOV     DPTR,#05876H
0032 7444              MOV     A,#044H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 193
0035 22                RET     
             ; FUNCTION AnalogSetDefault (END)

             ; FUNCTION _SetAnalogRoutingPumps (BEGIN)
                                           ; SOURCE LINE # 213
0000 900000      R     MOV     DPTR,#enabled
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/27/2014 15:27:12 PAGE 11  

0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 214
                                           ; SOURCE LINE # 215
0005 905876            MOV     DPTR,#05876H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#regValue
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 216
000F 900000      R     MOV     DPTR,#enabled
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 6010              JZ      ?C0010
                                           ; SOURCE LINE # 217
                                           ; SOURCE LINE # 218
0017 900000      R     MOV     DPTR,#regValue
001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
001C EF                MOV     A,R7
001D 4400              ORL     A,#00H
001F FF                MOV     R7,A
0020 900000      R     MOV     DPTR,#regValue
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 219
0025 800E              SJMP    ?C0011
0027         ?C0010:
                                           ; SOURCE LINE # 221
                                           ; SOURCE LINE # 222
0027 900000      R     MOV     DPTR,#regValue
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C EF                MOV     A,R7
002D 54FF              ANL     A,#0FFH
002F FF                MOV     R7,A
0030 900000      R     MOV     DPTR,#regValue
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 223
0035         ?C0011:
                                           ; SOURCE LINE # 224
0035 900000      R     MOV     DPTR,#regValue
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A 905876            MOV     DPTR,#05876H
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 225
003F 22                RET     
             ; FUNCTION _SetAnalogRoutingPumps (END)

             ; FUNCTION cyfitter_cfg (BEGIN)
                                           ; SOURCE LINE # 247
                                           ; SOURCE LINE # 248
                                           ; SOURCE LINE # 251
0000 904800            MOV     DPTR,#04800H
0003 74F1              MOV     A,#0F1H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 253
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/27/2014 15:27:12 PAGE 12  

0006 120000      R     LCALL   ClockSetup
                                           ; SOURCE LINE # 255
0009 7B00              MOV     R3,#00H
000B 7A46              MOV     R2,#046H
000D 79E8              MOV     R1,#0E8H
000F 120000      E     LCALL   _cyread8
0012 EF                MOV     A,R7
0013 4405              ORL     A,#05H
0015 FD                MOV     R5,A
0016 7B00              MOV     R3,#00H
0018 7A46              MOV     R2,#046H
001A 79E8              MOV     R1,#0E8H
001C 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 257
                                           ; SOURCE LINE # 279
001F 750000      R     MOV     i,#00H
0022         ?C0013:
0022 E500        R     MOV     A,i
0024 C3                CLR     C
0025 9408              SUBB    A,#08H
0027 503A              JNC     ?C0014
                                           ; SOURCE LINE # 280
                                           ; SOURCE LINE # 281
0029 AF00        R     MOV     R7,i
002B EF                MOV     A,R7
002C 75F005            MOV     B,#05H
002F A4                MUL     AB
0030 2400        R     ADD     A,#LOW cfg_memset_list
0032 F582              MOV     DPL,A
0034 E4                CLR     A
0035 3400        R     ADDC    A,#HIGH cfg_memset_list
0037 F583              MOV     DPH,A
0039 AF82              MOV     R7,DPL
003B AE83              MOV     R6,DPH
003D 8E00        R     MOV     ms,R6
003F 8F00        R     MOV     ms+01H,R7
                                           ; SOURCE LINE # 282
0041 AE00        R     MOV     R6,ms
0043 AF00        R     MOV     R7,ms+01H
0045 8F82              MOV     DPL,R7
0047 8E83              MOV     DPH,R6
0049 120000      E     LCALL   ?C?PLDCODE
004C AE00        R     MOV     R6,ms
004E AF00        R     MOV     R7,ms+01H
0050 8F82              MOV     DPL,R7
0052 8E83              MOV     DPH,R6
0054 7403              MOV     A,#03H
0056 93                MOVC    A,@A+DPTR
0057 FC                MOV     R4,A
0058 7404              MOV     A,#04H
005A 93                MOVC    A,@A+DPTR
005B FD                MOV     R5,A
005C 120000      E     LCALL   _cymemzero
                                           ; SOURCE LINE # 283
005F 0500        R     INC     i
0061 80BF              SJMP    ?C0013
0063         ?C0014:
                                           ; SOURCE LINE # 285
0063 7B08              MOV     R3,#08H
0065 7A00              MOV     R2,#00H
0067 7900              MOV     R1,#00H
0069 120000      E     LCALL   _cfg_write_bytes
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/27/2014 15:27:12 PAGE 13  

                                           ; SOURCE LINE # 288
006C 7B01              MOV     R3,#01H
006E 7A50              MOV     R2,#050H
0070 7903              MOV     R1,#03H
0072 120000      E     LCALL   _cyread8
0075 EF                MOV     A,R7
0076 4402              ORL     A,#02H
0078 FD                MOV     R5,A
0079 7B01              MOV     R3,#01H
007B 7A50              MOV     R2,#050H
007D 7903              MOV     R1,#03H
007F 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 289
0082 7B01              MOV     R3,#01H
0084 7A50              MOV     R2,#050H
0086 7913              MOV     R1,#013H
0088 120000      E     LCALL   _cyread8
008B EF                MOV     A,R7
008C 4402              ORL     A,#02H
008E FD                MOV     R5,A
008F 7B01              MOV     R3,#01H
0091 7A50              MOV     R2,#050H
0093 7913              MOV     R1,#013H
0095 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 292
0098 9043A0            MOV     DPTR,#043A0H
009B E0                MOVX    A,@DPTR
009C FF                MOV     R7,A
009D EF                MOV     A,R7
009E 4440              ORL     A,#040H
00A0 FF                MOV     R7,A
00A1 9043A0            MOV     DPTR,#043A0H
00A4 EF                MOV     A,R7
00A5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 293
00A6 9043C2            MOV     DPTR,#043C2H
00A9 E0                MOVX    A,@DPTR
00AA FF                MOV     R7,A
00AB EF                MOV     A,R7
00AC 4410              ORL     A,#010H
00AE FF                MOV     R7,A
00AF 9043C2            MOV     DPTR,#043C2H
00B2 EF                MOV     A,R7
00B3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 294
                                           ; SOURCE LINE # 297
00B4 7B08              MOV     R3,#08H
00B6 7A01              MOV     R2,#01H
00B8 7928              MOV     R1,#028H
00BA C003              PUSH    AR3
00BC C002              PUSH    AR2
00BE C001              PUSH    AR1
00C0 7B00              MOV     R3,#00H
00C2 7A51              MOV     R2,#051H
00C4 7902              MOV     R1,#02H
00C6 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00C9 120000      E     LCALL   ?C?PSTXDATA
00CC D001              POP     AR1
00CE D002              POP     AR2
00D0 D003              POP     AR3
00D2 7F08              MOV     R7,#08H
00D4 7E00              MOV     R6,#00H
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/27/2014 15:27:12 PAGE 14  

00D6 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 298
00D9 7B08              MOV     R3,#08H
00DB 7A01              MOV     R2,#01H
00DD 7930              MOV     R1,#030H
00DF C003              PUSH    AR3
00E1 C002              PUSH    AR2
00E3 C001              PUSH    AR1
00E5 7B00              MOV     R3,#00H
00E7 7A51              MOV     R2,#051H
00E9 79F0              MOV     R1,#0F0H
00EB 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00EE 120000      E     LCALL   ?C?PSTXDATA
00F1 D001              POP     AR1
00F3 D002              POP     AR2
00F5 D003              POP     AR3
00F7 7F0A              MOV     R7,#0AH
00F9 7E00              MOV     R6,#00H
00FB 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 299
00FE 7B08              MOV     R3,#08H
0100 7A01              MOV     R2,#01H
0102 793C              MOV     R1,#03CH
0104 C003              PUSH    AR3
0106 C002              PUSH    AR2
0108 C001              PUSH    AR1
010A 7B00              MOV     R3,#00H
010C 7A51              MOV     R2,#051H
010E 7962              MOV     R1,#062H
0110 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0113 120000      E     LCALL   ?C?PSTXDATA
0116 D001              POP     AR1
0118 D002              POP     AR2
011A D003              POP     AR3
011C 7F08              MOV     R7,#08H
011E 7E00              MOV     R6,#00H
0120 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 300
0123 9044F4            MOV     DPTR,#044F4H
0126 7401              MOV     A,#01H
0128 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 303
0129 904322            MOV     DPTR,#04322H
012C E0                MOVX    A,@DPTR
012D FF                MOV     R7,A
012E EF                MOV     A,R7
012F 4408              ORL     A,#08H
0131 FF                MOV     R7,A
0132 904322            MOV     DPTR,#04322H
0135 EF                MOV     A,R7
0136 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 304
0137 9046EC            MOV     DPTR,#046ECH
013A E0                MOVX    A,@DPTR
013B FF                MOV     R7,A
013C EF                MOV     A,R7
013D C3                CLR     C
013E 9405              SUBB    A,#05H
0140 5006              JNC     ?C0016
                                           ; SOURCE LINE # 305
                                           ; SOURCE LINE # 306
0142 904689            MOV     DPTR,#04689H
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/27/2014 15:27:12 PAGE 15  

0145 743A              MOV     A,#03AH
0147 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 307
0148         ?C0016:
                                           ; SOURCE LINE # 309
0148 7B01              MOV     R3,#01H
014A 7A50              MOV     R2,#050H
014C 7907              MOV     R1,#07H
014E 7D40              MOV     R5,#040H
0150 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 310
0153 7B01              MOV     R3,#01H
0155 7A50              MOV     R2,#050H
0157 7917              MOV     R1,#017H
0159 7D40              MOV     R5,#040H
015B 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 313
015E 120000      R     LCALL   AnalogSetDefault
                                           ; SOURCE LINE # 316
0161 7B00              MOV     R3,#00H
0163 7A43              MOV     R2,#043H
0165 79A0              MOV     R1,#0A0H
0167 C003              PUSH    AR3
0169 C002              PUSH    AR2
016B C001              PUSH    AR1
016D 7B00              MOV     R3,#00H
016F 7A43              MOV     R2,#043H
0171 79B0              MOV     R1,#0B0H
0173 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0176 120000      E     LCALL   ?C?PSTXDATA
0179 D001              POP     AR1
017B D002              POP     AR2
017D D003              POP     AR3
017F 7F0E              MOV     R7,#0EH
0181 7E00              MOV     R6,#00H
0183 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 317
0186 9043B0            MOV     DPTR,#043B0H
0189 E0                MOVX    A,@DPTR
018A FF                MOV     R7,A
018B EF                MOV     A,R7
018C 54FD              ANL     A,#0FDH
018E FF                MOV     R7,A
018F EF                MOV     A,R7
0190 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 318
0191 22                RET     
             ; FUNCTION cyfitter_cfg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    816    ----
   CONSTANT SIZE    =     40    ----
   XDATA SIZE       =   ----       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/27/2014 15:27:12 PAGE 16  

   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
