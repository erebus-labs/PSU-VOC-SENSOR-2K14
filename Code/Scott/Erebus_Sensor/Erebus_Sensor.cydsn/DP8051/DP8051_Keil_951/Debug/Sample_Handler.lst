C51 COMPILER V9.51   SAMPLE_HANDLER                                                        05/07/2014 04:57:59 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE SAMPLE_HANDLER
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\Sample_Handler.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Sample_Handler.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\Sample_Handler.lst) CD DB NOIP OT(0,SI
                    -ZE) DF(DEBUG) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\Sample_Handler.obj)

line level    source

   1          /* ========================================
   2           *
   3           * Copyright YOUR COMPANY, THE YEAR
   4           * All Rights Reserved
   5           * UNPUBLISHED, LICENSED SOFTWARE.
   6           *
   7           * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8           * WHICH IS THE PROPERTY OF your company.
   9           *
  10           * ========================================
  11          */
  12          #include "Sample_Handler.h"
  13          
  14          static uint16 sample_int_count = 0;
  15          uint8 sample_interval;
  16          
  17          void sample_counter()
  18          {
  19   1          // Begin interrupt handling
  20   1          CyPmReadStatus(4u);
  21   1          //End interrupt handling
  22   1          
  23   1          /* Take sample if interval has been reached */   
  24   1          ++sample_int_count;
  25   1          
  26   1          if (sample_int_count == sample_interval)
  27   1          {
  28   2              take_sample();
  29   2              sample_int_count = 0;
  30   2          }
  31   1       
  32   1          return;   
  33   1      }
  34          
  35          void take_sample()
  36          {
  37   1          uint16 SampledData = 0;
  38   1          LED_on(SAMPLE);
  39   1          ADC_Wakeup();
  40   1          
  41   1          /* ADC */
  42   1          SampledData = ADC_Read16(); /* Function Starts, Converts, Stops, and Returns from ADC */
  43   1          
  44   1          /* EEP */
  45   1          Em_EEPROM_Write((uint8*) (&SampledData),TailPtr,2u);
  46   1          
  47   1          TailPtr = TailPtr + 2;
  48   1          ADC_Sleep();
  49   1          LED_off(SAMPLE);
  50   1          
  51   1          return;    
  52   1      }
  53              
C51 COMPILER V9.51   SAMPLE_HANDLER                                                        05/07/2014 04:57:59 PAGE 2   

  54          /* [] END OF FILE */
C51 COMPILER V9.51   SAMPLE_HANDLER                                                        05/07/2014 04:57:59 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION sample_counter (BEGIN)
                                           ; SOURCE LINE # 17
                                           ; SOURCE LINE # 18
                                           ; SOURCE LINE # 20
0000 7F04              MOV     R7,#04H
0002 120000      E     LCALL   _CyPmReadStatus
                                           ; SOURCE LINE # 24
0005 900000      R     MOV     DPTR,#sample_int_count
0008 E4                CLR     A
0009 75F001            MOV     B,#01H
000C 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 26
000F 900000      R     MOV     DPTR,#sample_interval
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 7E00              MOV     R6,#00H
0016 900000      R     MOV     DPTR,#sample_int_count
0019 E0                MOVX    A,@DPTR
001A FC                MOV     R4,A
001B A3                INC     DPTR
001C E0                MOVX    A,@DPTR
001D FD                MOV     R5,A
001E EF                MOV     A,R7
001F B5050F            CJNE    A,AR5,?C0002
0022 EE                MOV     A,R6
0023 B5040B            CJNE    A,AR4,?C0002
                                           ; SOURCE LINE # 27
                                           ; SOURCE LINE # 28
0026 120000      R     LCALL   take_sample
                                           ; SOURCE LINE # 29
0029 900000      R     MOV     DPTR,#sample_int_count
002C E4                CLR     A
002D F0                MOVX    @DPTR,A
002E A3                INC     DPTR
002F E4                CLR     A
0030 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 30
0031         ?C0001:
                                           ; SOURCE LINE # 33
0031         ?C0002:
0031 22                RET     
             ; FUNCTION sample_counter (END)

             ; FUNCTION take_sample (BEGIN)
                                           ; SOURCE LINE # 35
                                           ; SOURCE LINE # 36
                                           ; SOURCE LINE # 37
0000 900000      R     MOV     DPTR,#SampledData
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 E4                CLR     A
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 38
0008 7F05              MOV     R7,#05H
000A 120000      E     LCALL   _LED_on
                                           ; SOURCE LINE # 39
000D 120000      E     LCALL   ADC_Wakeup
                                           ; SOURCE LINE # 42
C51 COMPILER V9.51   SAMPLE_HANDLER                                                        05/07/2014 04:57:59 PAGE 4   

0010 120000      E     LCALL   ADC_Read16
0013 900000      R     MOV     DPTR,#SampledData
0016 EE                MOV     A,R6
0017 F0                MOVX    @DPTR,A
0018 A3                INC     DPTR
0019 EF                MOV     A,R7
001A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 45
001B 7B01              MOV     R3,#01H
001D 7A00        R     MOV     R2,#HIGH SampledData
001F 7900        R     MOV     R1,#LOW SampledData
0021 C003              PUSH    AR3
0023 C002              PUSH    AR2
0025 C001              PUSH    AR1
0027 900000      E     MOV     DPTR,#TailPtr
002A 120000      E     LCALL   ?C?PLDXDATA
002D 900000      E     MOV     DPTR,#?_Em_EEPROM_Write?BYTE+03H
0030 120000      E     LCALL   ?C?PSTXDATA
0033 900000      E     MOV     DPTR,#?_Em_EEPROM_Write?BYTE+06H
0036 E4                CLR     A
0037 F0                MOVX    @DPTR,A
0038 A3                INC     DPTR
0039 7402              MOV     A,#02H
003B F0                MOVX    @DPTR,A
003C D001              POP     AR1
003E D002              POP     AR2
0040 D003              POP     AR3
0042 120000      E     LCALL   _Em_EEPROM_Write
                                           ; SOURCE LINE # 47
0045 900000      E     MOV     DPTR,#TailPtr+01H
0048 E4                CLR     A
0049 75F002            MOV     B,#02H
004C 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 48
004F 120000      E     LCALL   ADC_Sleep
                                           ; SOURCE LINE # 49
0052 7F05              MOV     R7,#05H
0054 120000      E     LCALL   _LED_off
                                           ; SOURCE LINE # 52
0057         ?C0003:
0057 22                RET     
             ; FUNCTION take_sample (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    138    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      5    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
