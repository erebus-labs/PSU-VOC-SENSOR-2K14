C51 COMPILER V9.51   MODIFYCOLLECTION_IRQ                                                  06/06/2014 09:52:04 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE MODIFYCOLLECTION_IRQ
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\ModifyCollection_IRQ.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\ModifyCollection_IRQ.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\ModifyCol
                    -lection_IRQ.lst) CD DB NOIP OT(0,SIZE) DF(DEBUG) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\Mo
                    -difyCollection_IRQ.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: ModifyCollection_IRQ.c  
   3          * Version 1.70
   4          *
   5          *  Description:
   6          *   API for controlling the state of an interrupt.
   7          *
   8          *
   9          *  Note:
  10          *
  11          ********************************************************************************
  12          * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  13          * You may use this file only in accordance with the license, terms, conditions, 
  14          * disclaimers, and limitations in the end user license agreement accompanying 
  15          * the software package with which this file was provided.
  16          *******************************************************************************/
  17          
  18          #include <cydevice_trm.h>
  19          #include <CyLib.h>
  20          #include <ModifyCollection_IRQ.h>
  21          
  22          #if !defined(ModifyCollection_IRQ__REMOVED) /* Check for removal by optimization */
  23          
  24          /*******************************************************************************
  25          *  Place your includes, defines and code here 
  26          ********************************************************************************/
  27          /* `#START ModifyCollection_IRQ_intc` */
  28          
  29              #include "globals.h"
  30              #include "sample_handler.h"
  31          
  32          /* `#END` */
  33          
  34          
  35          /*******************************************************************************
  36          * Function Name: ModifyCollection_IRQ_Start
  37          ********************************************************************************
  38          *
  39          * Summary:
  40          *  Set up the interrupt and enable it.
  41          *
  42          * Parameters:  
  43          *   None
  44          *
  45          * Return:
  46          *   None
  47          *
  48          *******************************************************************************/
  49          void ModifyCollection_IRQ_Start(void) 
  50          {
  51   1          /* For all we know the interrupt is active. */
  52   1          ModifyCollection_IRQ_Disable();
C51 COMPILER V9.51   MODIFYCOLLECTION_IRQ                                                  06/06/2014 09:52:04 PAGE 2   

  53   1      
  54   1          /* Set the ISR to point to the ModifyCollection_IRQ Interrupt. */
  55   1          ModifyCollection_IRQ_SetVector(&ModifyCollection_IRQ_Interrupt);
  56   1      
  57   1          /* Set the priority. */
  58   1          ModifyCollection_IRQ_SetPriority((uint8)ModifyCollection_IRQ_INTC_PRIOR_NUMBER);
  59   1      
  60   1          /* Enable it. */
  61   1          ModifyCollection_IRQ_Enable();
  62   1      }
  63          
  64          
  65          /*******************************************************************************
  66          * Function Name: ModifyCollection_IRQ_StartEx
  67          ********************************************************************************
  68          *
  69          * Summary:
  70          *  Set up the interrupt and enable it.
  71          *
  72          * Parameters:  
  73          *   address: Address of the ISR to set in the interrupt vector table.
  74          *
  75          * Return:
  76          *   None
  77          *
  78          *******************************************************************************/
  79          void ModifyCollection_IRQ_StartEx(cyisraddress address) 
  80          {
  81   1          /* For all we know the interrupt is active. */
  82   1          ModifyCollection_IRQ_Disable();
  83   1      
  84   1          /* Set the ISR to point to the ModifyCollection_IRQ Interrupt. */
  85   1          ModifyCollection_IRQ_SetVector(address);
  86   1      
  87   1          /* Set the priority. */
  88   1          ModifyCollection_IRQ_SetPriority((uint8)ModifyCollection_IRQ_INTC_PRIOR_NUMBER);
  89   1      
  90   1          /* Enable it. */
  91   1          ModifyCollection_IRQ_Enable();
  92   1      }
  93          
  94          
  95          /*******************************************************************************
  96          * Function Name: ModifyCollection_IRQ_Stop
  97          ********************************************************************************
  98          *
  99          * Summary:
 100          *   Disables and removes the interrupt.
 101          *
 102          * Parameters:  
 103          *   None
 104          *
 105          * Return:
 106          *   None
 107          *
 108          *******************************************************************************/
 109          void ModifyCollection_IRQ_Stop(void) 
 110          {
 111   1          /* Disable this interrupt. */
 112   1          ModifyCollection_IRQ_Disable();
 113   1      }
 114          
C51 COMPILER V9.51   MODIFYCOLLECTION_IRQ                                                  06/06/2014 09:52:04 PAGE 3   

 115          
 116          /*******************************************************************************
 117          * Function Name: ModifyCollection_IRQ_Interrupt
 118          ********************************************************************************
 119          * Summary:
 120          *   The default Interrupt Service Routine for ModifyCollection_IRQ.
 121          *
 122          *   Add custom code between the coments to keep the next version of this file
 123          *   from over writting your code.
 124          *
 125          * Parameters:  
 126          *   None
 127          *
 128          * Return:
 129          *   None
 130          *
 131          *******************************************************************************/
 132          CY_ISR(ModifyCollection_IRQ_Interrupt)
 133          {
 134   1          /*  Place your Interrupt code here. */
 135   1          /* `#START ModifyCollection_IRQ_Interrupt` */
 136   1          
 137   1          uint8 reg_value = 0;
 138   1          
 139   1          reg_value = CY_GET_REG8(BUTTON_PICU_REG);
 140   1          
 141   1          if (start_collection_enabled && (reg_value & START_COLLECTION)){
 142   2              start_sampling_waiting = 1;
 143   2          }
 144   1          
 145   1          else if (stop_collection_enabled && (reg_value & STOP_COLLECTION)){
 146   2              stop_sampling_waiting = 1;
 147   2          }    
 148   1      
 149   1          /* `#END` */
 150   1      
 151   1          /* PSoC3 ES1, ES2 RTC ISR PATCH  */ 
 152   1          #if(CYDEV_CHIP_FAMILY_USED == CYDEV_CHIP_FAMILY_PSOC3)
 153   1              #if((CYDEV_CHIP_REVISION_USED <= CYDEV_CHIP_REVISION_3A_ES2) && (ModifyCollection_IRQ__ES2_PATCH )
             -)      
                          ModifyCollection_IRQ_ISR_PATCH();
                      #endif /* CYDEV_CHIP_REVISION_USED */
 156   1          #endif /* (CYDEV_CHIP_FAMILY_USED == CYDEV_CHIP_FAMILY_PSOC3) */
 157   1      }
 158          
 159          
 160          /*******************************************************************************
 161          * Function Name: ModifyCollection_IRQ_SetVector
 162          ********************************************************************************
 163          *
 164          * Summary:
 165          *   Change the ISR vector for the Interrupt. Note calling ModifyCollection_IRQ_Start
 166          *   will override any effect this method would have had. To set the vector 
 167          *   before the component has been started use ModifyCollection_IRQ_StartEx instead.
 168          *
 169          * Parameters:
 170          *   address: Address of the ISR to set in the interrupt vector table.
 171          *
 172          * Return:
 173          *   None
 174          *
 175          *******************************************************************************/
C51 COMPILER V9.51   MODIFYCOLLECTION_IRQ                                                  06/06/2014 09:52:04 PAGE 4   

 176          void ModifyCollection_IRQ_SetVector(cyisraddress address) 
 177          {
 178   1          CY_SET_REG16(ModifyCollection_IRQ_INTC_VECTOR, (uint16) address);
 179   1      }
 180          
 181          
 182          /*******************************************************************************
 183          * Function Name: ModifyCollection_IRQ_GetVector
 184          ********************************************************************************
 185          *
 186          * Summary:
 187          *   Gets the "address" of the current ISR vector for the Interrupt.
 188          *
 189          * Parameters:
 190          *   None
 191          *
 192          * Return:
 193          *   Address of the ISR in the interrupt vector table.
 194          *
 195          *******************************************************************************/
 196          cyisraddress ModifyCollection_IRQ_GetVector(void) 
 197          {
 198   1          return (cyisraddress) CY_GET_REG16(ModifyCollection_IRQ_INTC_VECTOR);
 199   1      }
 200          
 201          
 202          /*******************************************************************************
 203          * Function Name: ModifyCollection_IRQ_SetPriority
 204          ********************************************************************************
 205          *
 206          * Summary:
 207          *   Sets the Priority of the Interrupt. Note calling ModifyCollection_IRQ_Start
 208          *   or ModifyCollection_IRQ_StartEx will override any effect this method would 
 209          *   have had. This method should only be called after ModifyCollection_IRQ_Start or 
 210          *   ModifyCollection_IRQ_StartEx has been called. To set the initial
 211          *   priority for the component use the cydwr file in the tool.
 212          *
 213          * Parameters:
 214          *   priority: Priority of the interrupt. 0 - 7, 0 being the highest.
 215          *
 216          * Return:
 217          *   None
 218          *
 219          *******************************************************************************/
 220          void ModifyCollection_IRQ_SetPriority(uint8 priority) 
 221          {
 222   1          *ModifyCollection_IRQ_INTC_PRIOR = priority << 5;
 223   1      }
 224          
 225          
 226          /*******************************************************************************
 227          * Function Name: ModifyCollection_IRQ_GetPriority
 228          ********************************************************************************
 229          *
 230          * Summary:
 231          *   Gets the Priority of the Interrupt.
 232          *
 233          * Parameters:
 234          *   None
 235          *
 236          * Return:
 237          *   Priority of the interrupt. 0 - 7, 0 being the highest.
C51 COMPILER V9.51   MODIFYCOLLECTION_IRQ                                                  06/06/2014 09:52:04 PAGE 5   

 238          *
 239          *******************************************************************************/
 240          uint8 ModifyCollection_IRQ_GetPriority(void) 
 241          {
 242   1          uint8 priority;
 243   1      
 244   1      
 245   1          priority = *ModifyCollection_IRQ_INTC_PRIOR >> 5;
 246   1      
 247   1          return priority;
 248   1      }
 249          
 250          
 251          /*******************************************************************************
 252          * Function Name: ModifyCollection_IRQ_Enable
 253          ********************************************************************************
 254          *
 255          * Summary:
 256          *   Enables the interrupt.
 257          *
 258          * Parameters:
 259          *   None
 260          *
 261          * Return:
 262          *   None
 263          *
 264          *******************************************************************************/
 265          void ModifyCollection_IRQ_Enable(void) 
 266          {
 267   1          /* Enable the general interrupt. */
 268   1          *ModifyCollection_IRQ_INTC_SET_EN = ModifyCollection_IRQ__INTC_MASK;
 269   1      }
 270          
 271          
 272          /*******************************************************************************
 273          * Function Name: ModifyCollection_IRQ_GetState
 274          ********************************************************************************
 275          *
 276          * Summary:
 277          *   Gets the state (enabled, disabled) of the Interrupt.
 278          *
 279          * Parameters:
 280          *   None
 281          *
 282          * Return:
 283          *   1 if enabled, 0 if disabled.
 284          *
 285          *******************************************************************************/
 286          uint8 ModifyCollection_IRQ_GetState(void) 
 287          {
 288   1          /* Get the state of the general interrupt. */
 289   1          return ((*ModifyCollection_IRQ_INTC_SET_EN & (uint8)ModifyCollection_IRQ__INTC_MASK) != 0u) ? 1u:0u;
 290   1      }
 291          
 292          
 293          /*******************************************************************************
 294          * Function Name: ModifyCollection_IRQ_Disable
 295          ********************************************************************************
 296          *
 297          * Summary:
 298          *   Disables the Interrupt.
 299          *
C51 COMPILER V9.51   MODIFYCOLLECTION_IRQ                                                  06/06/2014 09:52:04 PAGE 6   

 300          * Parameters:
 301          *   None
 302          *
 303          * Return:
 304          *   None
 305          *
 306          *******************************************************************************/
 307          void ModifyCollection_IRQ_Disable(void) 
 308          {
 309   1          /* Disable the general interrupt. */
 310   1          *ModifyCollection_IRQ_INTC_CLR_EN = ModifyCollection_IRQ__INTC_MASK;
 311   1      }
 312          
 313          
 314          /*******************************************************************************
 315          * Function Name: ModifyCollection_IRQ_SetPending
 316          ********************************************************************************
 317          *
 318          * Summary:
 319          *   Causes the Interrupt to enter the pending state, a software method of
 320          *   generating the interrupt.
 321          *
 322          * Parameters:
 323          *   None
 324          *
 325          * Return:
 326          *   None
 327          *
 328          *******************************************************************************/
 329          void ModifyCollection_IRQ_SetPending(void) 
 330          {
 331   1          *ModifyCollection_IRQ_INTC_SET_PD = ModifyCollection_IRQ__INTC_MASK;
 332   1      }
 333          
 334          
 335          /*******************************************************************************
 336          * Function Name: ModifyCollection_IRQ_ClearPending
 337          ********************************************************************************
 338          *
 339          * Summary:
 340          *   Clears a pending interrupt.
 341          *
 342          * Parameters:
 343          *   None
 344          *
 345          * Return:
 346          *   None
 347          *
 348          *******************************************************************************/
 349          void ModifyCollection_IRQ_ClearPending(void) 
 350          {
 351   1          *ModifyCollection_IRQ_INTC_CLR_PD = ModifyCollection_IRQ__INTC_MASK;
 352   1      }
 353          
 354          #endif /* End check for removal by optimization */
 355          
 356          
 357          /* [] END OF FILE */
C51 COMPILER V9.51   MODIFYCOLLECTION_IRQ                                                  06/06/2014 09:52:04 PAGE 7   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION ModifyCollection_IRQ_Start (BEGIN)
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 50
                                           ; SOURCE LINE # 52
0000 120000      R     LCALL   ModifyCollection_IRQ_Disable
                                           ; SOURCE LINE # 55
0003 7E00        R     MOV     R6,#HIGH ModifyCollection_IRQ_Interrupt
0005 7F00        R     MOV     R7,#LOW ModifyCollection_IRQ_Interrupt
0007 120000      R     LCALL   _ModifyCollection_IRQ_SetVector
                                           ; SOURCE LINE # 58
000A 7F07              MOV     R7,#07H
000C 120000      R     LCALL   _ModifyCollection_IRQ_SetPriority
                                           ; SOURCE LINE # 61
000F 120000      R     LCALL   ModifyCollection_IRQ_Enable
                                           ; SOURCE LINE # 62
0012         ?C0001:
0012 22                RET     
             ; FUNCTION ModifyCollection_IRQ_Start (END)

             ; FUNCTION _ModifyCollection_IRQ_StartEx (BEGIN)
                                           ; SOURCE LINE # 79
0000 900000      R     MOV     DPTR,#address
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 80
                                           ; SOURCE LINE # 82
0008 120000      R     LCALL   ModifyCollection_IRQ_Disable
                                           ; SOURCE LINE # 85
000B 900000      R     MOV     DPTR,#address
000E E0                MOVX    A,@DPTR
000F FE                MOV     R6,A
0010 A3                INC     DPTR
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 120000      R     LCALL   _ModifyCollection_IRQ_SetVector
                                           ; SOURCE LINE # 88
0016 7F07              MOV     R7,#07H
0018 120000      R     LCALL   _ModifyCollection_IRQ_SetPriority
                                           ; SOURCE LINE # 91
001B 120000      R     LCALL   ModifyCollection_IRQ_Enable
                                           ; SOURCE LINE # 92
001E         ?C0002:
001E 22                RET     
             ; FUNCTION _ModifyCollection_IRQ_StartEx (END)

             ; FUNCTION ModifyCollection_IRQ_Stop (BEGIN)
                                           ; SOURCE LINE # 109
                                           ; SOURCE LINE # 110
                                           ; SOURCE LINE # 112
0000 120000      R     LCALL   ModifyCollection_IRQ_Disable
                                           ; SOURCE LINE # 113
0003         ?C0003:
0003 22                RET     
             ; FUNCTION ModifyCollection_IRQ_Stop (END)

             ; FUNCTION ModifyCollection_IRQ_Interrupt (BEGIN)
C51 COMPILER V9.51   MODIFYCOLLECTION_IRQ                                                  06/06/2014 09:52:04 PAGE 8   

0000 C0E0              PUSH    ACC
0002 C083              PUSH    DPH
0004 C082              PUSH    DPL
0006 C085              PUSH    DPH1
0008 C084              PUSH    DPL1
000A C086              PUSH    DPS
000C 758600            MOV     DPS,#00H
000F C000        E     PUSH    ?C?XPAGE1SFR
0011 750000      E     MOV     ?C?XPAGE1SFR,#?C?XPAGE1RST
0014 C0D0              PUSH    PSW
0016 75D000            MOV     PSW,#00H
0019 C007              PUSH    AR7
                                           ; SOURCE LINE # 132
                                           ; SOURCE LINE # 137
001B 900000      R     MOV     DPTR,#reg_value
001E E4                CLR     A
001F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 139
0020 904582            MOV     DPTR,#04582H
0023 E0                MOVX    A,@DPTR
0024 FF                MOV     R7,A
0025 900000      R     MOV     DPTR,#reg_value
0028 EF                MOV     A,R7
0029 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 141
002A 900000      E     MOV     DPTR,#start_collection_enabled
002D E0                MOVX    A,@DPTR
002E FF                MOV     R7,A
002F EF                MOV     A,R7
0030 6011              JZ      ?C0004
0032 900000      R     MOV     DPTR,#reg_value
0035 E0                MOVX    A,@DPTR
0036 FF                MOV     R7,A
0037 EF                MOV     A,R7
0038 30E408            JNB     ACC.4,?C0004
                                           ; SOURCE LINE # 142
003B 900000      E     MOV     DPTR,#start_sampling_waiting
003E 7401              MOV     A,#01H
0040 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 143
0041 8017              SJMP    ?C0007
0043         ?C0004:
                                           ; SOURCE LINE # 145
0043 900000      E     MOV     DPTR,#stop_collection_enabled
0046 E0                MOVX    A,@DPTR
0047 FF                MOV     R7,A
0048 EF                MOV     A,R7
0049 600F              JZ      ?C0007
004B 900000      R     MOV     DPTR,#reg_value
004E E0                MOVX    A,@DPTR
004F FF                MOV     R7,A
0050 EF                MOV     A,R7
0051 30E306            JNB     ACC.3,?C0007
                                           ; SOURCE LINE # 146
0054 900000      E     MOV     DPTR,#stop_sampling_waiting
0057 7401              MOV     A,#01H
0059 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 147
005A         ?C0006:
005A         ?C0005:
                                           ; SOURCE LINE # 157
005A         ?C0007:
C51 COMPILER V9.51   MODIFYCOLLECTION_IRQ                                                  06/06/2014 09:52:04 PAGE 9   

005A D007              POP     AR7
005C D0D0              POP     PSW
005E D000        E     POP     ?C?XPAGE1SFR
0060 D086              POP     DPS
0062 D084              POP     DPL1
0064 D085              POP     DPH1
0066 D082              POP     DPL
0068 D083              POP     DPH
006A D0E0              POP     ACC
006C 32                RETI    
             ; FUNCTION ModifyCollection_IRQ_Interrupt (END)

             ; FUNCTION _ModifyCollection_IRQ_SetVector (BEGIN)
                                           ; SOURCE LINE # 176
0000 900000      R     MOV     DPTR,#address
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 177
                                           ; SOURCE LINE # 178
0008 7B02              MOV     R3,#02H
000A 7A44              MOV     R2,#044H
000C 790C              MOV     R1,#0CH
000E 900000      R     MOV     DPTR,#address
0011 E0                MOVX    A,@DPTR
0012 FE                MOV     R6,A
0013 A3                INC     DPTR
0014 E0                MOVX    A,@DPTR
0015 FF                MOV     R7,A
0016 AD07              MOV     R5,AR7
0018 AC06              MOV     R4,AR6
001A 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 179
001D         ?C0008:
001D 22                RET     
             ; FUNCTION _ModifyCollection_IRQ_SetVector (END)

             ; FUNCTION ModifyCollection_IRQ_GetVector (BEGIN)
                                           ; SOURCE LINE # 196
                                           ; SOURCE LINE # 197
                                           ; SOURCE LINE # 198
0000 7B02              MOV     R3,#02H
0002 7A44              MOV     R2,#044H
0004 790C              MOV     R1,#0CH
0006 120000      E     LCALL   _cyread16_nodpx
                                           ; SOURCE LINE # 199
0009         ?C0009:
0009 22                RET     
             ; FUNCTION ModifyCollection_IRQ_GetVector (END)

             ; FUNCTION _ModifyCollection_IRQ_SetPriority (BEGIN)
                                           ; SOURCE LINE # 220
0000 900000      R     MOV     DPTR,#priority
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 221
                                           ; SOURCE LINE # 222
0005 900000      R     MOV     DPTR,#priority
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
C51 COMPILER V9.51   MODIFYCOLLECTION_IRQ                                                  06/06/2014 09:52:04 PAGE 10  

000A EF                MOV     A,R7
000B C4                SWAP    A
000C 33                RLC     A
000D 54E0              ANL     A,#0E0H
000F FF                MOV     R7,A
0010 904486            MOV     DPTR,#04486H
0013 EF                MOV     A,R7
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 223
0015         ?C0010:
0015 22                RET     
             ; FUNCTION _ModifyCollection_IRQ_SetPriority (END)

             ; FUNCTION ModifyCollection_IRQ_GetPriority (BEGIN)
                                           ; SOURCE LINE # 240
                                           ; SOURCE LINE # 241
                                           ; SOURCE LINE # 245
0000 904486            MOV     DPTR,#04486H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 C4                SWAP    A
0007 13                RRC     A
0008 5407              ANL     A,#07H
000A FF                MOV     R7,A
000B 900000      R     MOV     DPTR,#priority
000E EF                MOV     A,R7
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 247
0010 900000      R     MOV     DPTR,#priority
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
                                           ; SOURCE LINE # 248
0015         ?C0011:
0015 22                RET     
             ; FUNCTION ModifyCollection_IRQ_GetPriority (END)

             ; FUNCTION ModifyCollection_IRQ_Enable (BEGIN)
                                           ; SOURCE LINE # 265
                                           ; SOURCE LINE # 266
                                           ; SOURCE LINE # 268
0000 9044C0            MOV     DPTR,#044C0H
0003 7440              MOV     A,#040H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 269
0006         ?C0012:
0006 22                RET     
             ; FUNCTION ModifyCollection_IRQ_Enable (END)

             ; FUNCTION ModifyCollection_IRQ_GetState (BEGIN)
                                           ; SOURCE LINE # 286
                                           ; SOURCE LINE # 287
                                           ; SOURCE LINE # 289
0000 9044C0            MOV     DPTR,#044C0H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 30E604            JNB     ACC.6,?C0013
0009 7F01              MOV     R7,#01H
000B 8002              SJMP    ?C0014
000D         ?C0013:
000D 7F00              MOV     R7,#00H
C51 COMPILER V9.51   MODIFYCOLLECTION_IRQ                                                  06/06/2014 09:52:04 PAGE 11  

000F         ?C0014:
                                           ; SOURCE LINE # 290
000F         ?C0015:
000F 22                RET     
             ; FUNCTION ModifyCollection_IRQ_GetState (END)

             ; FUNCTION ModifyCollection_IRQ_Disable (BEGIN)
                                           ; SOURCE LINE # 307
                                           ; SOURCE LINE # 308
                                           ; SOURCE LINE # 310
0000 9044C8            MOV     DPTR,#044C8H
0003 7440              MOV     A,#040H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 311
0006         ?C0016:
0006 22                RET     
             ; FUNCTION ModifyCollection_IRQ_Disable (END)

             ; FUNCTION ModifyCollection_IRQ_SetPending (BEGIN)
                                           ; SOURCE LINE # 329
                                           ; SOURCE LINE # 330
                                           ; SOURCE LINE # 331
0000 9044D0            MOV     DPTR,#044D0H
0003 7440              MOV     A,#040H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 332
0006         ?C0017:
0006 22                RET     
             ; FUNCTION ModifyCollection_IRQ_SetPending (END)

             ; FUNCTION ModifyCollection_IRQ_ClearPending (BEGIN)
                                           ; SOURCE LINE # 349
                                           ; SOURCE LINE # 350
                                           ; SOURCE LINE # 351
0000 9044D8            MOV     DPTR,#044D8H
0003 7440              MOV     A,#040H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 352
0006         ?C0018:
0006 22                RET     
             ; FUNCTION ModifyCollection_IRQ_ClearPending (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    291    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      7    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
