C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE RTC_INT
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\RTC_INT.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\RTC_INT.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\RTC_INT.lst) CD DB NOI
                    -P OT(0,SIZE) DF(DEBUG) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\RTC_INT.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: RTC_INT.c
   3          * Version 2.0
   4          *
   5          * Description:
   6          *  This file contains the Interrupt Service Routine (ISR) for the RTC component.
   7          *  This interrupt routine has entry pointes to overflow on time or date.
   8          *
   9          ********************************************************************************
  10          * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  11          * You may use this file only in accordance with the license, terms, conditions,
  12          * disclaimers, and limitations in the end user license agreement accompanying
  13          * the software package with which this file was provided.
  14          *******************************************************************************/
  15          
  16          #include "RTC.h"
  17          #include "CyLib.h"
  18          
  19          /* Function Prototypes */
  20          static void RTC_EverySecondHandler(void);
  21          static void RTC_EveryMinuteHandler(void);
  22          static void RTC_EveryHourHandler(void);
  23          static void RTC_EveryDayHandler(void);
  24          static void RTC_EveryWeekHandler(void);
  25          static void RTC_EveryMonthHandler(void);
  26          static void RTC_EveryYearHandler(void);
  27          
  28          
  29          /*******************************************************************************
  30          *  Place your includes, defines and code here
  31          *******************************************************************************/
  32          /* `#START RTC_ISR_DEFINITION` */
  33          #include "globals.h"
  34          #include "sample_handler.h"
  35          #include "utility.h"
  36          /* `#END` */
  37          
  38          
  39          /*******************************************************************************
  40          * Function Name:   RTC_EverySecondHandler
  41          ********************************************************************************
  42          *
  43          * Summary:
  44          *  This function is called every second.
  45          *
  46          * Parameters:
  47          *  None.
  48          *
  49          * Return:
  50          *  None.
  51          *
  52          *******************************************************************************/
  53          static void RTC_EverySecondHandler(void)
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 2   

  54          {
  55   1          /*  Place your every second handler code here. */
  56   1          /* `#START EVERY_SECOND_HANDLER_CODE` */
  57   1             
  58   1          if (mem_full_flag){
  59   2              return;
  60   2          }
  61   1          
  62   1          if (sample_unit == SAMPLE_SEC && sample_enable_flag){
  63   2              ++sample_interrupt_count;
  64   2      
  65   2              if (sample_interrupt_count == sample_interval)
  66   2              {
  67   3                  take_sample_waiting = 1;
  68   3                  sample_interrupt_count = 0;
  69   3              }
  70   2          }
  71   1              
  72   1          ++low_batt_blink_count;
  73   1          if ((low_batt_blink_count >= LOWBATT_BLINK_INTERVAL) && low_power_flag){
  74   2              low_batt_blink_count = 0;
  75   2              low_battery_blink_waiting = 1;
  76   2          }
  77   1      
  78   1          
  79   1          /* `#END` */
  80   1      }
  81          
  82          
  83          /*******************************************************************************
  84          * Function Name:   RTC_EveryMinuteHandler
  85          ********************************************************************************
  86          *
  87          * Summary:
  88          *  This function is called every minute.
  89          *
  90          * Parameters:
  91          *  None.
  92          *
  93          * Return:
  94          *  None.
  95          *
  96          *******************************************************************************/
  97          static void RTC_EveryMinuteHandler(void)
  98          {
  99   1          /*  Place your every minute handler code here. */
 100   1          /* `#START EVERY_MINUTE_HANDLER_CODE` */
 101   1          
 102   1          if (mem_full_flag){
 103   2              return;
 104   2          }
 105   1              
 106   1          if (sample_unit == SAMPLE_MIN && sample_enable_flag){
 107   2              ++sample_interrupt_count;
 108   2      
 109   2              if (sample_interrupt_count == sample_interval)
 110   2              {
 111   3                  take_sample_waiting = 1;
 112   3                  sample_interrupt_count = 0;
 113   3              }
 114   2          }
 115   1          
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 3   

 116   1          ++battery_check_count;
 117   1          if (battery_check_count == BATT_CHECK_INTERVAL){
 118   2              battery_check_count = 0;
 119   2              battery_check_waiting = 1;
 120   2          }
 121   1          
 122   1          /* `#END` */
 123   1      }
 124          
 125          
 126          /*******************************************************************************
 127          * Function Name:   RTC_EveryHourHandler
 128          ********************************************************************************
 129          *
 130          * Summary:
 131          *  This function is called every hour.
 132          *
 133          * Parameters:
 134          *  None.
 135          *
 136          * Return:
 137          *  None.
 138          *
 139          *******************************************************************************/
 140          static void RTC_EveryHourHandler(void)
 141          {
 142   1          /*  Place your every hour handler code here. */
 143   1          /* `#START EVERY_HOUR_HANDLER_CODE` */
 144   1          
 145   1          if (mem_full_flag){
 146   2              return;
 147   2          }
 148   1              
 149   1          if (sample_enable_flag){
 150   2              ++sample_interrupt_count;
 151   2      
 152   2              if (sample_interrupt_count == sample_interval)
 153   2              {
 154   3                  take_sample_waiting = 1;
 155   3                  sample_interrupt_count = 0;
 156   3              }
 157   2          }
 158   1          /* `#END` */
 159   1      }
 160          
 161          
 162          /*******************************************************************************
 163          * Function Name:   RTC_EveryDayHandler
 164          ********************************************************************************
 165          *
 166          * Summary:
 167          *  This function is called every day.
 168          *
 169          * Parameters:
 170          *  None.
 171          *
 172          * Return:
 173          *  None.
 174          *
 175          *******************************************************************************/
 176          static void RTC_EveryDayHandler(void)
 177          {
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 4   

 178   1          /*  Place your everyday handler code here. */
 179   1          /* `#START EVERY_DAY_HANDLER_CODE` */
 180   1          
 181   1          if (mem_full_flag){
 182   2              return;
 183   2          }
 184   1          
 185   1          if (sample_enable_flag){
 186   2              ++sample_interrupt_count;
 187   2      
 188   2              if (sample_interrupt_count == sample_interval)
 189   2              {
 190   3                  take_sample_waiting = 1;
 191   3                  sample_interrupt_count = 0;
 192   3              }
 193   2          }
 194   1          /* `#END` */
 195   1      }
 196          
 197          
 198          /*******************************************************************************
 199          * Function Name:   RTC_EveryWeekHandler
 200          ********************************************************************************
 201          *
 202          * Summary:
 203          *  This function is called every week.
 204          *
 205          * Parameters:
 206          *  None.
 207          *
 208          * Return:
 209          *  None.
 210          *
 211          *******************************************************************************/
 212          static void RTC_EveryWeekHandler(void)
 213          {
 214   1          /*  Place your every week handler code here. */
 215   1          /* `#START EVERY_WEEK_HANDLER_CODE` */
 216   1          /* `#END` */
 217   1      }
 218          
 219          
 220          /*******************************************************************************
 221          * Function Name:   RTC_EveryMonthHandler
 222          ********************************************************************************
 223          *
 224          * Summary:
 225          *  This function is called every month.
 226          *
 227          * Parameters:
 228          *  None.
 229          *
 230          * Return:
 231          *  None.
 232          *
 233          *******************************************************************************/
 234          static void RTC_EveryMonthHandler(void)
 235          {
 236   1          /*  Place your every month handler code here. */
 237   1          /* `#START EVERY_MONTH_HANDLER_CODE` */
 238   1          /* `#END` */
 239   1      }
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 5   

 240          
 241          
 242          /*******************************************************************************
 243          * Function Name:   RTC_EveryYearHandler
 244          ********************************************************************************
 245          *
 246          * Summary:
 247          *  This function is called every year.
 248          *
 249          * Parameters:
 250          *  None.
 251          *
 252          * Return:
 253          *  None.
 254          *
 255          *******************************************************************************/
 256          static void RTC_EveryYearHandler(void)
 257          {
 258   1          /*  Place your every year handler code here. */
 259   1          /* `#START EVERY_YEAR_HANDLER_CODE` */
 260   1          /* `#END` */
 261   1      }
 262          
 263          
 264          /*******************************************************************************
 265          * Function Name: RTC_ISR
 266          ********************************************************************************
 267          *
 268          * Summary:
 269          *  This ISR is executed on 1PPS (one pulse per second) event.
 270          *  Global interrupt must be enabled to invoke this ISR.
 271          *  This interrupt trigs every second.
 272          *
 273          * Parameters:
 274          *  None.
 275          *
 276          * Return:
 277          *  None.
 278          *
 279          * Global variables:
 280          * RTC_currentTimeDate, RTC_dstTimeDateStart,
 281          *  RTC_dstTimeDateStop, RTC_dstTimeDateStart,
 282          *  RTC_alarmCfgTimeDate, RTC_statusDateTime,
 283          *  RTC_dstStartStatus, RTC_dstStartStatus,
 284          *  RTC_dstStopStatus, RTC_alarmCurStatus: global
 285          *  variables are used for the time/date, DST and alarm update procedure.
 286          *
 287          *  RTC_dstTimeDateStart and RTC_currentTimeDate:
 288          *  are modified with the updated values.
 289          *
 290          *  RTC_statusDateTime, RTC_dstStartStatus,
 291          *  RTC_dstStartStatus, RTC_dstStopStatus,
 292          *  RTC_alarmCurStatus: global variables could be modified while
 293          *  current time/date is updated.
 294          *
 295          * Side Effects:
 296          *  Clears all interrupt status bits (react_int, limact_int, onepps_int, ctw_int,
 297          *  and  ftw_int) in Power Manager Interrupt Status Register. If an interrupt
 298          *  gets generated at the same time as a clear, the bit will remain set (which
 299          *  causes another interrupt).
 300          *
 301          *******************************************************************************/
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 6   

 302          CY_ISR(RTC_ISR)
 303          {
 304   1          uint8 RTC_tmp;
 305   1      
 306   1          /* Clear OPPS interrupt status flag */
 307   1          (void) CyPmReadStatus(CY_PM_ONEPPS_INT);
 308   1      
 309   1          /* Increment seconds counter */
 310   1          RTC_currentTimeDate.Sec++;
 311   1      
 312   1          /* Check if minute elapsed */
 313   1          if(RTC_currentTimeDate.Sec > RTC_MINUTE_ELAPSED)
 314   1          {
 315   2              /* Inc Min */
 316   2              RTC_currentTimeDate.Min++;
 317   2      
 318   2              /* Clear Sec */
 319   2              RTC_currentTimeDate.Sec = 0u;
 320   2      
 321   2              if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
 322   2              {
 323   3                  /* Inc HOUR */
 324   3                  RTC_currentTimeDate.Hour++;
 325   3      
 326   3                  /* Clear Min */
 327   3                  RTC_currentTimeDate.Min = 0u;
 328   3      
 329   3                  /* Day roll over */
 330   3                  if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
 331   3                  {
 332   4                      /* Inc DayOfMonth */
 333   4                      RTC_currentTimeDate.DayOfMonth++;
 334   4      
 335   4                      /* Clear Hour */
 336   4                      RTC_currentTimeDate.Hour = 0u;
 337   4      
 338   4                      /* Inc DayOfYear */
 339   4                      RTC_currentTimeDate.DayOfYear++;
 340   4      
 341   4                      /* Inc DayOfWeek */
 342   4                      RTC_currentTimeDate.DayOfWeek++;
 343   4      
 344   4                      /* Check DayOfWeek */
 345   4                      if(RTC_currentTimeDate.DayOfWeek > RTC_WEEK_ELAPSED)
 346   4                      {
 347   5                          /* start new week */
 348   5                          RTC_currentTimeDate.DayOfWeek = 1u;
 349   5                      }
 350   4      
 351   4                      /* Day of month roll over.
 352   4                      * Check if day of month greater than 29 in February of leap year or
 353   4                      * if day of month greater than 28 NOT in February of NON leap year or
 354   4                      * if day of month greater than it should be in every month in non leap year
 355   4                      */
 356   4                      if(((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 357   4                          (RTC_currentTimeDate.Month == RTC_FEBRUARY)  &&
 358   4                          (RTC_currentTimeDate.DayOfMonth >
 359   4                                   (RTC_daysInMonths[RTC_currentTimeDate.Month - 1u] + 1u))) ||
 360   4                         ((0u != (RTC_statusDateTime & RTC_STATUS_LY))  &&
 361   4                          (RTC_currentTimeDate.Month != RTC_FEBRUARY) &&
 362   4                          (RTC_currentTimeDate.DayOfMonth >
 363   4                                          RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])) ||
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 7   

 364   4                         ((0u == (RTC_statusDateTime & RTC_STATUS_LY))  &&
 365   4                          (RTC_currentTimeDate.DayOfMonth >
 366   4                                          RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])))
 367   4                      {
 368   5                          /* Inc Month */
 369   5                          RTC_currentTimeDate.Month++;
 370   5      
 371   5                          /* Set first day of month */
 372   5                          RTC_currentTimeDate.DayOfMonth = 1u;
 373   5      
 374   5                          /* Year roll over */
 375   5                          if(RTC_currentTimeDate.Month > RTC_YEAR_ELAPSED)
 376   5                          {
 377   6                              /* Inc Year */
 378   6                              RTC_currentTimeDate.Year++;
 379   6      
 380   6                              /* Set first month of year */
 381   6                              RTC_currentTimeDate.Month = 1u;
 382   6      
 383   6                              /* Set first day of year */
 384   6                              RTC_currentTimeDate.DayOfYear = 1u;
 385   6      
 386   6                              /* Is this year leap */
 387   6                              if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 388   6                              {
 389   7                                  /* Set leap year flag */
 390   7                                  RTC_statusDateTime |= RTC_STATUS_LY;
 391   7                              }
 392   6                              else    /* not leap year */
 393   6                              {
 394   7                                  /* Clear leap year */
 395   7                                  RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 396   7                              }
 397   6      
 398   6                              /* Alarm YEAR */
 399   6                              if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 400   6                                                                   RTC_ALARM_YEAR_MASK))
 401   6                              {
 402   7                                  /* Years match */
 403   7                                  if(RTC_alarmCfgTimeDate.Year == RTC_currentTimeDate.Year)
 404   7                                  {
 405   8                                      /* Rise year alarm */
 406   8                                      RTC_alarmCurStatus |= RTC_ALARM_YEAR_MASK;
 407   8                                  }
 408   7                                  else    /* Years do not match */
 409   7                                  {
 410   8                                      /* Clear year alarm */
 411   8                                      RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_YEAR_MASK);
 412   8                                  }
 413   7                              } /* do not alarm year */
 414   6      
 415   6                              /* Set Alarm flag event */
 416   6                              RTC_tmp = RTC_alarmCfgMask;
 417   6                              RTC_SET_ALARM(RTC_tmp,
 419   6                                                         RTC_alarmCurStatus,
 419   6                                                         RTC_statusDateTime);
 420   6      
 421   6                              /* Every Year */
 422   6                              if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 423   6                                                                   RTC_INTERVAL_YEAR_MASK))
 424   6                              {
 425   7                                  RTC_EveryYearHandler();
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 8   

 426   7                              }
 427   6      
 428   6                          } /* Month > 12 */
 429   5      
 430   5                          /* Alarm MONTH */
 431   5                          if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 432   5                                                               RTC_ALARM_MONTH_MASK))
 433   5                          {
 434   6                              if(RTC_alarmCfgTimeDate.Month == RTC_currentTimeDate.Month)
 435   6                              {
 436   7                                  /* Set month alarm */
 437   7                                  RTC_alarmCurStatus |= RTC_ALARM_MONTH_MASK;
 438   7                              }
 439   6                              else
 440   6                              {
 441   7                                  /* Clear month alarm */
 442   7                                  RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MONTH_MASK);
 443   7                              }
 444   6                          }   /* Month alarm is masked */
 445   5      
 446   5                          #if (1u == RTC_DST_FUNC_ENABLE)
                                      if(RTC_dstTimeDateStop.Month == RTC_currentTimeDate.Month)
                                      {
                                          RTC_dstStopStatus |= RTC_DST_MONTH;
                                      }
                                      else
                                      {
                                          RTC_dstStopStatus &= (uint8)(~RTC_DST_MONTH);
                                      }
              
                                      if(RTC_dstTimeDateStart.Month == RTC_currentTimeDate.Month)
                                      {
                                          RTC_dstStartStatus |= RTC_DST_MONTH;
                                      }
                                      else
                                      {
                                          RTC_dstStartStatus &= (uint8)(~RTC_DST_MONTH);
                                      }
                                  #endif /* 1u == RTC_DST_FUNC_ENABLE */
 465   5      
 466   5                          /* Set Alarm flag event */
 467   5                          RTC_tmp = RTC_alarmCfgMask;
 468   5                          RTC_SET_ALARM(RTC_tmp,
 470   5                                                     RTC_alarmCurStatus,
 470   5                                                     RTC_statusDateTime);
 471   5      
 472   5                          /* Every Month */
 473   5                          if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 474   5                                                               RTC_INTERVAL_MONTH_MASK))
 475   5                          {
 476   6                              RTC_EveryMonthHandler();
 477   6                          }
 478   5                      }   /* Day roll over */
 479   4      
 480   4                      /* Alarm DAYOFWEEK */
 481   4                      if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 482   4                                                           RTC_ALARM_DAYOFWEEK_MASK))
 483   4                      {
 484   5                          if(RTC_alarmCfgTimeDate.DayOfWeek == RTC_currentTimeDate.DayOfWeek)
 485   5                          {
 486   6                              /* Set day of week alarm */
 487   6                              RTC_alarmCurStatus |= RTC_ALARM_DAYOFWEEK_MASK;
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 9   

 488   6                          }
 489   5                          else
 490   5                          {
 491   6                              /* Clear day of week alarm */
 492   6                              RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFWEEK_MASK);
 493   6                          }
 494   5                      }   /* Day of week alarm is masked */
 495   4      
 496   4                      /* Alarm DAYOFYEAR */
 497   4                      if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 498   4                                                           RTC_ALARM_DAYOFYEAR_MASK))
 499   4                      {
 500   5                          if(RTC_alarmCfgTimeDate.DayOfYear == RTC_currentTimeDate.DayOfYear)
 501   5                          {
 502   6                              /* Set day of year alarm */
 503   6                              RTC_alarmCurStatus |= RTC_ALARM_DAYOFYEAR_MASK;
 504   6                          }
 505   5                          else
 506   5                          {
 507   6                              /* Clear day of year alarm */
 508   6                              RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFYEAR_MASK);
 509   6                          }
 510   5                      }   /* Day of year alarm is masked */
 511   4      
 512   4                      /* Alarm DAYOFMONTH */
 513   4                      if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 514   4                               RTC_ALARM_DAYOFMONTH_MASK))
 515   4                      {
 516   5                          if(RTC_alarmCfgTimeDate.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 517   5                          {
 518   6                              /* Set day of month alarm */
 519   6                              RTC_alarmCurStatus |= RTC_ALARM_DAYOFMONTH_MASK;
 520   6                          }
 521   5                          else
 522   5                          {
 523   6                              /* Clear day of month alarm */
 524   6                              RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFMONTH_MASK);
 525   6                          }
 526   5                      }   /* Day of month alarm is masked */
 527   4      
 528   4                      #if (1u == RTC_DST_FUNC_ENABLE)
                                  if(RTC_dstTimeDateStop.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
                                  {
                                      RTC_dstStopStatus |= RTC_DST_DAYOFMONTH;
                                  }
                                  else
                                  {
                                      RTC_dstStopStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
                                  }
              
                                  if(RTC_dstTimeDateStart.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
                                  {
                                      RTC_dstStartStatus |= RTC_DST_DAYOFMONTH;
                                  }
                                  else
                                  {
                                      RTC_dstStartStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
                                  }
                              #endif /* 1u == RTC_DST_FUNC_ENABLE */
 547   4      
 548   4                      /* Set Alarm flag event */
 549   4                      RTC_tmp = RTC_alarmCfgMask;
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 10  

 550   4                      RTC_SET_ALARM(RTC_tmp,
 552   4                                                 RTC_alarmCurStatus,
 552   4                                                 RTC_statusDateTime);
 553   4      
 554   4                      /* Every Day */
 555   4                      if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 556   4                               RTC_INTERVAL_DAY_MASK))
 557   4                      {
 558   5                          RTC_EveryDayHandler();
 559   5                      }
 560   4      
 561   4                      if(1u == RTC_currentTimeDate.DayOfWeek)
 562   4                      {
 563   5                          /* Every Week */
 564   5                          if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 565   5                                                               RTC_INTERVAL_WEEK_MASK))
 566   5                          {
 567   6                             RTC_EveryWeekHandler();
 568   6                          }
 569   5                      }
 570   4      
 571   4                  } /* End of day roll over */
 572   3      
 573   3                  /* Status set PM/AM flag */
 574   3                  if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
 575   3                  {
 576   4                      /* AM Hour 00:00-11:59, flag zero */
 577   4                      RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
 578   4                  }
 579   3                  else
 580   3                  {
 581   4                      /* PM Hour 12:00-23:59, flag set */
 582   4                      RTC_statusDateTime |= RTC_STATUS_AM_PM;
 583   4                  }
 584   3      
 585   3                  #if (1u == RTC_DST_FUNC_ENABLE)
                              if(RTC_dstTimeDateStop.Hour == RTC_currentTimeDate.Hour)
                              {
                                  RTC_dstStopStatus |= RTC_DST_HOUR;
                              }
                              else
                              {
                                  RTC_dstStopStatus &= (uint8)(~RTC_DST_HOUR);
                              }
              
                              if(RTC_dstTimeDateStart.Hour == RTC_currentTimeDate.Hour)
                              {
                                  RTC_dstStartStatus |= RTC_DST_HOUR;
                              }
                              else
                              {
                              RTC_dstStartStatus &= (uint8)(~RTC_DST_HOUR);
                              }
              
                              /* DST Enable ? */
                              if(0u != RTC_IS_BIT_SET(RTC_dstModeType, RTC_DST_ENABLE))
                              {
                                  if(0u != RTC_IS_BIT_SET(RTC_statusDateTime, RTC_STATUS_DST))
                                  {
                                      if(0u != RTC_IS_BIT_SET(RTC_dstStopStatus, RTC_DST_HOUR |
                                                                     RTC_DST_DAYOFMONTH | RTC_DST_MONTH))
                                      {
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 11  

                                          /* Substruct from current value of minutes, number of minutes
                                          * in DST offset which is out of complete hour
                                          */
                                          RTC_currentTimeDate.Min -=
                                                              RTC_dstOffsetMin % (RTC_HOUR_ELAPSED + 1u);
              
                                          /* Is minute value negative? */
                                          if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
                                          {
                                              /* Convert to the positive.
                                              * HOUR_ELAPSED -     (~currentTimeDate.Min    ) ==
                                              * HOUR_ELAPSED + 1 - (~currentTimeDate.Min + 1)
                                              */
                                              RTC_currentTimeDate.Min = RTC_HOUR_ELAPSED -
                                                                           ((uint8)(~RTC_currentTimeDate.Min));
              
                                              RTC_currentTimeDate.Hour--;
                                          }
              
                                          RTC_currentTimeDate.Hour -= RTC_dstOffsetMin /
                                                                                   (RTC_HOUR_ELAPSED + 1u);
              
                                          /* Day roll over
                                          * Is hour value negative? */
                                          if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
                                          {
                                              /* Convert to the positive.
                                              * DAY_ELAPSED - (~currentTimeDate.Hour) ==
                                              * DAY_ELAPSED + 1 - (~currentTimeDate.Hour + 1)
                                              */
                                              RTC_currentTimeDate.Hour = RTC_DAY_ELAPSED -
                                                                            ((uint8)(~RTC_currentTimeDate.Hour));
              
                                              /* Status set PM/AM flag */
                                              if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
                                              {
                                                  /* AM Hour 00:00-11:59, flag zero */
                                                  RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
                                              }
                                              else
                                              {
                                                  /* PM Hour 12:00-23:59, flag set */
                                                  RTC_statusDateTime |= RTC_STATUS_AM_PM;
                                              }
              
                                              RTC_currentTimeDate.DayOfMonth--;
                                              RTC_currentTimeDate.DayOfYear--;
                                              RTC_currentTimeDate.DayOfWeek--;
              
                                              if(0u == RTC_currentTimeDate.DayOfWeek)
                                              {
                                                  RTC_currentTimeDate.DayOfWeek = RTC_DAYS_IN_WEEK;
                                              }
              
                                              if(0u == RTC_currentTimeDate.DayOfMonth)
                                              {
                                                  RTC_currentTimeDate.Month--;
                                                  if(0u == RTC_currentTimeDate.Month)
                                                  {
                                                      RTC_currentTimeDate.Month = RTC_DECEMBER;
              
                                                      RTC_currentTimeDate.DayOfMonth =
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 12  

                                                          RTC_daysInMonths[RTC_currentTimeDate.Month - 1u];
              
                                                      RTC_currentTimeDate.Year--;
              
                                                      if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
                                                      {
                                                          /* LP - true, else - false */
                                                          RTC_statusDateTime |= RTC_STATUS_LY;
                                                          RTC_currentTimeDate.DayOfYear =
                                                                                                  RTC_DAYS_IN_LEAP_YEAR;
                                                      }
                                                      else
                                                      {
                                                          RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
                                                          RTC_currentTimeDate.DayOfYear = RTC_DAYS_IN_YEAR;
                                                      }
                                                      RTC_EveryYearHandler();
                                                  }
                                                  else
                                                  {
                                                      /* Day of month roll over.
                                                      * Check if day of month February 29 of leap year
                                                      */
                                                      if((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
                                                          (RTC_currentTimeDate.Month == RTC_FEBRUARY))
                                                      {
                                                          RTC_currentTimeDate.DayOfMonth =
                                                          RTC_daysInMonths[RTC_currentTimeDate.Month - 1u]
                                                          + 1u;
                                                      }
                                                      else
                                                      {
                                                          RTC_currentTimeDate.DayOfMonth =
                                                          RTC_daysInMonths[RTC_currentTimeDate.Month - 1u];
                                                      }
                                                  }
                                                  RTC_EveryMonthHandler();
                                              }
                                              RTC_EveryDayHandler();
                                          }
                                          RTC_statusDateTime &= (uint8)(~RTC_STATUS_DST);
                                          RTC_dstStopStatus = 0u;
                                      }
                                  }
                                  else
                                  {
                                      if(0u != RTC_IS_BIT_SET(RTC_dstStartStatus,
                                                                    (RTC_DST_HOUR | RTC_DST_DAYOFMONTH |
                                                                     RTC_DST_MONTH)))
                                      {
                                          /* Add Hour and Min */
                                          RTC_currentTimeDate.Min +=
                                                              RTC_dstOffsetMin % (RTC_HOUR_ELAPSED + 1u);
              
                                          if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
                                          {
                                              /* Adjust Min */
                                              RTC_currentTimeDate.Min -= (RTC_HOUR_ELAPSED + 1u);
                                              RTC_currentTimeDate.Hour++;
                                          }
              
                                          RTC_currentTimeDate.Hour += RTC_dstOffsetMin /
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 13  

                                                                                   (RTC_HOUR_ELAPSED + 1u);
              
                                          if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
                                          {
                                              /* Adjust hour, add day */
                                              RTC_currentTimeDate.Hour -= (RTC_DAY_ELAPSED + 1u);
              
                                              /* Status set PM/AM flag */
                                              if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
                                              {
                                                  /* AM Hour 00:00-11:59, flag zero */
                                                  RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
                                              }
                                              else
                                              {
                                                  /* PM Hour 12:00-23:59, flag set */
                                                  RTC_statusDateTime |= RTC_STATUS_AM_PM;
                                              }
              
                                              RTC_currentTimeDate.DayOfMonth++;
                                              RTC_currentTimeDate.DayOfYear++;
                                              RTC_currentTimeDate.DayOfWeek++;
              
                                              if(RTC_currentTimeDate.DayOfWeek > RTC_WEEK_ELAPSED)
                                              {
                                                  RTC_currentTimeDate.DayOfWeek = 1u;
                                              }
              
                                              /* Day of month roll over.
                                              * Check if day of month greater than 29 in February of leap year or
                                              * if day of month greater than 28 NOT in February of NON leap year or
                                              * if day of month greater than it should be in every month in non leap yea
             -r
                                              */
                                              if(((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
                                                  (RTC_currentTimeDate.Month == RTC_FEBRUARY)  &&
                                                  (RTC_currentTimeDate.DayOfMonth >
                                                (RTC_daysInMonths[RTC_currentTimeDate.Month - 1u] + 1u))) ||
                                                 ((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
                                                  (RTC_currentTimeDate.Month != RTC_FEBRUARY)  &&
                                                  (RTC_currentTimeDate.DayOfMonth >
                                                   RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])) ||
                                                 ((0u == (RTC_statusDateTime & RTC_STATUS_LY)) &&
                                                  (RTC_currentTimeDate.DayOfMonth >
                                                   RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])))
                                              {
                                                  RTC_currentTimeDate.Month++;
                                                  RTC_currentTimeDate.DayOfMonth = 1u;
                                                  if(RTC_currentTimeDate.Month > RTC_YEAR_ELAPSED)
                                                  {
                                                      RTC_currentTimeDate.Month = RTC_JANUARY;
                                                      RTC_currentTimeDate.Year++;
              
                                                      if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
                                                      {
                                                          /* LP - true, else - false */
                                                          RTC_statusDateTime |= RTC_STATUS_LY;
                                                      }
                                                      else
                                                      {
                                                          RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
                                                      }
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 14  

                                                      RTC_currentTimeDate.DayOfYear = 1u;
              
                                                      RTC_EveryYearHandler();
                                                  }
                                                  RTC_EveryMonthHandler();
                                              }
                                              RTC_EveryDayHandler();
                                          }
                                          RTC_statusDateTime |= RTC_STATUS_DST;
                                          RTC_dstStartStatus = 0u;
              
                                          /* Month */
                                          if(RTC_dstTimeDateStop.Month == RTC_currentTimeDate.Month)
                                          {
                                              RTC_dstStopStatus |= RTC_DST_MONTH;
                                          }
                                          else
                                          {
                                              RTC_dstStopStatus &= (uint8)(~RTC_DST_MONTH);
                                          }
              
                                          /* DayOfMonth */
                                          if(RTC_dstTimeDateStop.DayOfMonth ==
                                                                                          RTC_currentTimeDate.DayOfMonth
             -)
                                          {
                                              RTC_dstStopStatus |= RTC_DST_DAYOFMONTH;
                                          }
                                          else
                                          {
                                              RTC_dstStopStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
                                          }
                                      }
                                  }
              
                                  /* Alarm DAYOFWEEK */
                                  if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
                                                                       RTC_ALARM_DAYOFWEEK_MASK))
                                  {
                                      if(RTC_alarmCfgTimeDate.DayOfWeek == RTC_currentTimeDate.DayOfWeek)
                                      {
                                          RTC_alarmCurStatus |= RTC_ALARM_DAYOFWEEK_MASK;
                                      }
                                      else
                                      {
                                          RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFWEEK_MASK);
                                      }
                                  }
              
                                  /* Alarm DAYOFYEAR */
                                  if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
                                                                       RTC_ALARM_DAYOFYEAR_MASK))
                                  {
                                      if(RTC_alarmCfgTimeDate.DayOfYear == RTC_currentTimeDate.DayOfYear)
                                      {
                                          RTC_alarmCurStatus |= RTC_ALARM_DAYOFYEAR_MASK;
                                      }
                                      else
                                      {
                                          RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFYEAR_MASK);
                                      }
                                  }
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 15  

              
                                  /* Alarm DAYOFMONTH */
                                  if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
                                                                       RTC_ALARM_DAYOFMONTH_MASK))
                                  {
                                      if(RTC_alarmCfgTimeDate.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
                                      {
                                          RTC_alarmCurStatus |= RTC_ALARM_DAYOFMONTH_MASK;
                                      }
                                      else
                                      {
                                          RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFMONTH_MASK);
                                      }
                                  }
              
                                  /* Alarm MONTH */
                                  if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
                                                                       RTC_ALARM_MONTH_MASK))
                                  {
                                      if(RTC_alarmCfgTimeDate.Month == RTC_currentTimeDate.Month)
                                      {
                                          RTC_alarmCurStatus |= RTC_ALARM_MONTH_MASK;
                                      }
                                      else
                                      {
                                          RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MONTH_MASK);
                                      }
                                  }
              
                                  /* Alarm YEAR */
                                  if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
                                                                       RTC_ALARM_YEAR_MASK))
                                  {
                                      if(RTC_alarmCfgTimeDate.Year == RTC_currentTimeDate.Year)
                                      {
                                          RTC_alarmCurStatus |= RTC_ALARM_YEAR_MASK;
                                      }
                                      else
                                      {
                                          RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_YEAR_MASK);
                                      }
                                  }
              
                                  /* Set Alarm flag event */
                                  RTC_tmp = RTC_alarmCfgMask;
                                  RTC_SET_ALARM(RTC_tmp,
                                                             RTC_alarmCurStatus,
                                                             RTC_statusDateTime);
                              }
                          #endif /* 1u == RTC_DST_FUNC_ENABLE */
 908   3      
 909   3                  /* Alarm HOUR */
 910   3                  if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_HOUR_MASK))
 911   3                  {
 912   4                      if(RTC_alarmCfgTimeDate.Hour == RTC_currentTimeDate.Hour)
 913   4                      {
 914   5                          RTC_alarmCurStatus |= RTC_ALARM_HOUR_MASK;
 915   5                      }
 916   4                      else
 917   4                      {
 918   5                          RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_HOUR_MASK);
 919   5                      }
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 16  

 920   4                  }
 921   3      
 922   3                  /* Set Alarm flag event */
 923   3                  RTC_tmp = RTC_alarmCfgMask;
 924   3                  RTC_SET_ALARM(RTC_tmp,
 926   3                                             RTC_alarmCurStatus,
 926   3                                             RTC_statusDateTime);
 927   3      
 928   3                  /* Every Hour */
 929   3                  if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask, RTC_INTERVAL_HOUR_MASK))
 930   3                  {
 931   4                      RTC_EveryHourHandler();
 932   4                  }
 933   3              } /* Min > 59 = Hour */
 934   2      
 935   2              /* Alarm MIN */
 936   2              if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_MIN_MASK))
 937   2              {
 938   3                  if(RTC_alarmCfgTimeDate.Min == RTC_currentTimeDate.Min)
 939   3                  {
 940   4                      RTC_alarmCurStatus |= RTC_ALARM_MIN_MASK;
 941   4                  }
 942   3                  else
 943   3                  {
 944   4                      RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MIN_MASK);
 945   4                  }
 946   3              }
 947   2      
 948   2              /* Set Alarm flag event */
 949   2              RTC_tmp = RTC_alarmCfgMask;
 950   2              RTC_SET_ALARM(RTC_tmp,
 952   2                                         RTC_alarmCurStatus,
 952   2                                         RTC_statusDateTime);
 953   2      
 954   2              /* Every Min */
 955   2              if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask, RTC_INTERVAL_MIN_MASK))
 956   2              {
 957   3                  RTC_EveryMinuteHandler();
 958   3              }
 959   2          } /* Sec */
 960   1      
 961   1          /* Alarm SEC */
 962   1          if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_SEC_MASK))
 963   1          {
 964   2              if(RTC_alarmCfgTimeDate.Sec == RTC_currentTimeDate.Sec)
 965   2              {
 966   3                  RTC_alarmCurStatus |= RTC_ALARM_SEC_MASK;
 967   3              }
 968   2              else
 969   2              {
 970   3                  RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_SEC_MASK);
 971   3              }
 972   2          }
 973   1      
 974   1          /* Set Alarm flag event */
 975   1          RTC_tmp = RTC_alarmCfgMask;
 976   1          RTC_SET_ALARM(RTC_tmp, RTC_alarmCurStatus, RTC_statusDateTime);
 977   1      
 978   1          /* Execute every second handler if needed */
 979   1          if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask, RTC_INTERVAL_SEC_MASK))
 980   1          {
 981   2              RTC_EverySecondHandler();
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 17  

 982   2          }
 983   1      
 984   1      }
 985          
 986          
 987          /* [] END OF FILE */
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 18  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION RTC_EverySecondHandler (BEGIN)
                                           ; SOURCE LINE # 53
                                           ; SOURCE LINE # 54
                                           ; SOURCE LINE # 58
0000 900000      E     MOV     DPTR,#mem_full_flag
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 7053              JNZ     ?C0002
                                           ; SOURCE LINE # 60
0008         ?C0001:
                                           ; SOURCE LINE # 62
0008 900000      E     MOV     DPTR,#sample_unit
000B E0                MOVX    A,@DPTR
000C FF                MOV     R7,A
000D EF                MOV     A,R7
000E 7027              JNZ     ?C0003
0010 900000      E     MOV     DPTR,#sample_enable_flag
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
0015 EF                MOV     A,R7
0016 601F              JZ      ?C0003
                                           ; SOURCE LINE # 63
0018 900000      E     MOV     DPTR,#sample_interrupt_count
001B E0                MOVX    A,@DPTR
001C 04                INC     A
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 65
001E 900000      E     MOV     DPTR,#sample_interval
0021 E0                MOVX    A,@DPTR
0022 FF                MOV     R7,A
0023 900000      E     MOV     DPTR,#sample_interrupt_count
0026 E0                MOVX    A,@DPTR
0027 FE                MOV     R6,A
0028 EE                MOV     A,R6
0029 B5070B            CJNE    A,AR7,?C0003
                                           ; SOURCE LINE # 66
                                           ; SOURCE LINE # 67
002C 900000      E     MOV     DPTR,#take_sample_waiting
002F 7401              MOV     A,#01H
0031 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 68
0032 900000      E     MOV     DPTR,#sample_interrupt_count
0035 E4                CLR     A
0036 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 69
0037         ?C0004:
                                           ; SOURCE LINE # 70
0037         ?C0003:
                                           ; SOURCE LINE # 72
0037 900000      E     MOV     DPTR,#low_batt_blink_count
003A E0                MOVX    A,@DPTR
003B 04                INC     A
003C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 73
003D 900000      E     MOV     DPTR,#low_batt_blink_count
0040 E0                MOVX    A,@DPTR
0041 FF                MOV     R7,A
0042 EF                MOV     A,R7
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 19  

0043 C3                CLR     C
0044 9403              SUBB    A,#03H
0046 4013              JC      ?C0002
0048 900000      E     MOV     DPTR,#low_power_flag
004B E0                MOVX    A,@DPTR
004C FF                MOV     R7,A
004D EF                MOV     A,R7
004E 600B              JZ      ?C0002
                                           ; SOURCE LINE # 74
0050 900000      E     MOV     DPTR,#low_batt_blink_count
0053 E4                CLR     A
0054 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 75
0055 900000      E     MOV     DPTR,#low_battery_blink_waiting
0058 7401              MOV     A,#01H
005A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 76
005B         ?C0005:
                                           ; SOURCE LINE # 80
005B         ?C0002:
005B 22                RET     
             ; FUNCTION RTC_EverySecondHandler (END)

             ; FUNCTION RTC_EveryMinuteHandler (BEGIN)
                                           ; SOURCE LINE # 97
                                           ; SOURCE LINE # 98
                                           ; SOURCE LINE # 102
0000 900000      E     MOV     DPTR,#mem_full_flag
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 704A              JNZ     ?C0007
                                           ; SOURCE LINE # 104
0008         ?C0006:
                                           ; SOURCE LINE # 106
0008 900000      E     MOV     DPTR,#sample_unit
000B E0                MOVX    A,@DPTR
000C FF                MOV     R7,A
000D EF                MOV     A,R7
000E B40127            CJNE    A,#01H,?C0008
0011 900000      E     MOV     DPTR,#sample_enable_flag
0014 E0                MOVX    A,@DPTR
0015 FF                MOV     R7,A
0016 EF                MOV     A,R7
0017 601F              JZ      ?C0008
                                           ; SOURCE LINE # 107
0019 900000      E     MOV     DPTR,#sample_interrupt_count
001C E0                MOVX    A,@DPTR
001D 04                INC     A
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 109
001F 900000      E     MOV     DPTR,#sample_interval
0022 E0                MOVX    A,@DPTR
0023 FF                MOV     R7,A
0024 900000      E     MOV     DPTR,#sample_interrupt_count
0027 E0                MOVX    A,@DPTR
0028 FE                MOV     R6,A
0029 EE                MOV     A,R6
002A B5070B            CJNE    A,AR7,?C0008
                                           ; SOURCE LINE # 110
                                           ; SOURCE LINE # 111
002D 900000      E     MOV     DPTR,#take_sample_waiting
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 20  

0030 7401              MOV     A,#01H
0032 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 112
0033 900000      E     MOV     DPTR,#sample_interrupt_count
0036 E4                CLR     A
0037 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 113
0038         ?C0009:
                                           ; SOURCE LINE # 114
0038         ?C0008:
                                           ; SOURCE LINE # 116
0038 900000      E     MOV     DPTR,#battery_check_count
003B E0                MOVX    A,@DPTR
003C 04                INC     A
003D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 117
003E 900000      E     MOV     DPTR,#battery_check_count
0041 E0                MOVX    A,@DPTR
0042 FF                MOV     R7,A
0043 EF                MOV     A,R7
0044 B4010B            CJNE    A,#01H,?C0007
                                           ; SOURCE LINE # 118
0047 900000      E     MOV     DPTR,#battery_check_count
004A E4                CLR     A
004B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 119
004C 900000      E     MOV     DPTR,#battery_check_waiting
004F 7401              MOV     A,#01H
0051 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 120
0052         ?C0010:
                                           ; SOURCE LINE # 123
0052         ?C0007:
0052 22                RET     
             ; FUNCTION RTC_EveryMinuteHandler (END)

             ; FUNCTION RTC_EveryHourHandler (BEGIN)
                                           ; SOURCE LINE # 140
                                           ; SOURCE LINE # 141
                                           ; SOURCE LINE # 145
0000 900000      E     MOV     DPTR,#mem_full_flag
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 7027              JNZ     ?C0012
                                           ; SOURCE LINE # 147
0008         ?C0011:
                                           ; SOURCE LINE # 149
0008 900000      E     MOV     DPTR,#sample_enable_flag
000B E0                MOVX    A,@DPTR
000C FF                MOV     R7,A
000D EF                MOV     A,R7
000E 601F              JZ      ?C0012
                                           ; SOURCE LINE # 150
0010 900000      E     MOV     DPTR,#sample_interrupt_count
0013 E0                MOVX    A,@DPTR
0014 04                INC     A
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 152
0016 900000      E     MOV     DPTR,#sample_interval
0019 E0                MOVX    A,@DPTR
001A FF                MOV     R7,A
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 21  

001B 900000      E     MOV     DPTR,#sample_interrupt_count
001E E0                MOVX    A,@DPTR
001F FE                MOV     R6,A
0020 EE                MOV     A,R6
0021 B5070B            CJNE    A,AR7,?C0012
                                           ; SOURCE LINE # 153
                                           ; SOURCE LINE # 154
0024 900000      E     MOV     DPTR,#take_sample_waiting
0027 7401              MOV     A,#01H
0029 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 155
002A 900000      E     MOV     DPTR,#sample_interrupt_count
002D E4                CLR     A
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 156
002F         ?C0014:
                                           ; SOURCE LINE # 157
002F         ?C0013:
                                           ; SOURCE LINE # 159
002F         ?C0012:
002F 22                RET     
             ; FUNCTION RTC_EveryHourHandler (END)

             ; FUNCTION RTC_EveryDayHandler (BEGIN)
                                           ; SOURCE LINE # 176
                                           ; SOURCE LINE # 177
                                           ; SOURCE LINE # 181
0000 900000      E     MOV     DPTR,#mem_full_flag
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 7027              JNZ     ?C0016
                                           ; SOURCE LINE # 183
0008         ?C0015:
                                           ; SOURCE LINE # 185
0008 900000      E     MOV     DPTR,#sample_enable_flag
000B E0                MOVX    A,@DPTR
000C FF                MOV     R7,A
000D EF                MOV     A,R7
000E 601F              JZ      ?C0016
                                           ; SOURCE LINE # 186
0010 900000      E     MOV     DPTR,#sample_interrupt_count
0013 E0                MOVX    A,@DPTR
0014 04                INC     A
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 188
0016 900000      E     MOV     DPTR,#sample_interval
0019 E0                MOVX    A,@DPTR
001A FF                MOV     R7,A
001B 900000      E     MOV     DPTR,#sample_interrupt_count
001E E0                MOVX    A,@DPTR
001F FE                MOV     R6,A
0020 EE                MOV     A,R6
0021 B5070B            CJNE    A,AR7,?C0016
                                           ; SOURCE LINE # 189
                                           ; SOURCE LINE # 190
0024 900000      E     MOV     DPTR,#take_sample_waiting
0027 7401              MOV     A,#01H
0029 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 191
002A 900000      E     MOV     DPTR,#sample_interrupt_count
002D E4                CLR     A
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 22  

002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 192
002F         ?C0018:
                                           ; SOURCE LINE # 193
002F         ?C0017:
                                           ; SOURCE LINE # 195
002F         ?C0016:
002F 22                RET     
             ; FUNCTION RTC_EveryDayHandler (END)

             ; FUNCTION RTC_EveryWeekHandler (BEGIN)
                                           ; SOURCE LINE # 212
                                           ; SOURCE LINE # 213
                                           ; SOURCE LINE # 217
0000         ?C0019:
0000 22                RET     
             ; FUNCTION RTC_EveryWeekHandler (END)

             ; FUNCTION RTC_EveryMonthHandler (BEGIN)
                                           ; SOURCE LINE # 234
                                           ; SOURCE LINE # 235
                                           ; SOURCE LINE # 239
0000         ?C0020:
0000 22                RET     
             ; FUNCTION RTC_EveryMonthHandler (END)

             ; FUNCTION RTC_EveryYearHandler (BEGIN)
                                           ; SOURCE LINE # 256
                                           ; SOURCE LINE # 257
                                           ; SOURCE LINE # 261
0000         ?C0021:
0000 22                RET     
             ; FUNCTION RTC_EveryYearHandler (END)

             ; FUNCTION RTC_ISR (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0F0              PUSH    B
0004 C083              PUSH    DPH
0006 C082              PUSH    DPL
0008 C085              PUSH    DPH1
000A C084              PUSH    DPL1
000C C086              PUSH    DPS
000E 758600            MOV     DPS,#00H
0011 C000        E     PUSH    ?C?XPAGE1SFR
0013 750000      E     MOV     ?C?XPAGE1SFR,#?C?XPAGE1RST
0016 C0D0              PUSH    PSW
0018 75D000            MOV     PSW,#00H
001B C000              PUSH    AR0
001D C001              PUSH    AR1
001F C002              PUSH    AR2
0021 C003              PUSH    AR3
0023 C004              PUSH    AR4
0025 C005              PUSH    AR5
0027 C006              PUSH    AR6
0029 C007              PUSH    AR7
                                           ; SOURCE LINE # 302
                                           ; SOURCE LINE # 307
002B 7F04              MOV     R7,#04H
002D 120000      E     LCALL   _CyPmReadStatus
                                           ; SOURCE LINE # 310
0030 900000      E     MOV     DPTR,#RTC_currentTimeDate
0033 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 23  

0034 04                INC     A
0035 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 313
0036 900000      E     MOV     DPTR,#RTC_currentTimeDate
0039 E0                MOVX    A,@DPTR
003A FF                MOV     R7,A
003B EF                MOV     A,R7
003C D3                SETB    C
003D 943B              SUBB    A,#03BH
003F 5003              JNC     $ + 5H
0041 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 314
                                           ; SOURCE LINE # 316
0044 900000      E     MOV     DPTR,#RTC_currentTimeDate+01H
0047 E0                MOVX    A,@DPTR
0048 04                INC     A
0049 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 319
004A 900000      E     MOV     DPTR,#RTC_currentTimeDate
004D E4                CLR     A
004E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 321
004F 900000      E     MOV     DPTR,#RTC_currentTimeDate+01H
0052 E0                MOVX    A,@DPTR
0053 FF                MOV     R7,A
0054 EF                MOV     A,R7
0055 D3                SETB    C
0056 943B              SUBB    A,#03BH
0058 5003              JNC     $ + 5H
005A 020000      R     LJMP    ?C0023
                                           ; SOURCE LINE # 322
                                           ; SOURCE LINE # 324
005D 900000      E     MOV     DPTR,#RTC_currentTimeDate+02H
0060 E0                MOVX    A,@DPTR
0061 04                INC     A
0062 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 327
0063 900000      E     MOV     DPTR,#RTC_currentTimeDate+01H
0066 E4                CLR     A
0067 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 330
0068 900000      E     MOV     DPTR,#RTC_currentTimeDate+02H
006B E0                MOVX    A,@DPTR
006C FF                MOV     R7,A
006D EF                MOV     A,R7
006E D3                SETB    C
006F 9417              SUBB    A,#017H
0071 5003              JNC     $ + 5H
0073 020000      R     LJMP    ?C0024
                                           ; SOURCE LINE # 331
                                           ; SOURCE LINE # 333
0076 900000      E     MOV     DPTR,#RTC_currentTimeDate+04H
0079 E0                MOVX    A,@DPTR
007A 04                INC     A
007B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 336
007C 900000      E     MOV     DPTR,#RTC_currentTimeDate+02H
007F E4                CLR     A
0080 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 339
0081 900000      E     MOV     DPTR,#RTC_currentTimeDate+05H
0084 E4                CLR     A
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 24  

0085 75F001            MOV     B,#01H
0088 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 342
008B 900000      E     MOV     DPTR,#RTC_currentTimeDate+03H
008E E0                MOVX    A,@DPTR
008F 04                INC     A
0090 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 345
0091 900000      E     MOV     DPTR,#RTC_currentTimeDate+03H
0094 E0                MOVX    A,@DPTR
0095 FF                MOV     R7,A
0096 EF                MOV     A,R7
0097 D3                SETB    C
0098 9407              SUBB    A,#07H
009A 4006              JC      ?C0025
                                           ; SOURCE LINE # 346
                                           ; SOURCE LINE # 348
009C 900000      E     MOV     DPTR,#RTC_currentTimeDate+03H
009F 7401              MOV     A,#01H
00A1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 349
00A2         ?C0025:
                                           ; SOURCE LINE # 356
00A2 900000      E     MOV     DPTR,#RTC_statusDateTime
00A5 E0                MOVX    A,@DPTR
00A6 FF                MOV     R7,A
00A7 EF                MOV     A,R7
00A8 5402              ANL     A,#02H
00AA FF                MOV     R7,A
00AB 7E00              MOV     R6,#00H
00AD EF                MOV     A,R7
00AE 4E                ORL     A,R6
00AF 602C              JZ      ?C0028
00B1 900000      E     MOV     DPTR,#RTC_currentTimeDate+07H
00B4 E0                MOVX    A,@DPTR
00B5 FF                MOV     R7,A
00B6 EF                MOV     A,R7
00B7 B40223            CJNE    A,#02H,?C0028
00BA 900000      E     MOV     DPTR,#RTC_currentTimeDate+07H
00BD E0                MOVX    A,@DPTR
00BE FF                MOV     R7,A
00BF EF                MOV     A,R7
00C0 900000      E     MOV     DPTR,#RTC_daysInMonths-01H
00C3 93                MOVC    A,@A+DPTR
00C4 FF                MOV     R7,A
00C5 7E00              MOV     R6,#00H
00C7 EF                MOV     A,R7
00C8 2401              ADD     A,#01H
00CA FF                MOV     R7,A
00CB EE                MOV     A,R6
00CC 3400              ADDC    A,#00H
00CE FE                MOV     R6,A
00CF 900000      E     MOV     DPTR,#RTC_currentTimeDate+04H
00D2 E0                MOVX    A,@DPTR
00D3 FD                MOV     R5,A
00D4 7C00              MOV     R4,#00H
00D6 D3                SETB    C
00D7 ED                MOV     A,R5
00D8 9F                SUBB    A,R7
00D9 EC                MOV     A,R4
00DA 9E                SUBB    A,R6
00DB 5058              JNC     ?C0027
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 25  

00DD         ?C0028:
00DD 900000      E     MOV     DPTR,#RTC_statusDateTime
00E0 E0                MOVX    A,@DPTR
00E1 FF                MOV     R7,A
00E2 EF                MOV     A,R7
00E3 5402              ANL     A,#02H
00E5 FF                MOV     R7,A
00E6 7E00              MOV     R6,#00H
00E8 EF                MOV     A,R7
00E9 4E                ORL     A,R6
00EA 601F              JZ      ?C0029
00EC 900000      E     MOV     DPTR,#RTC_currentTimeDate+07H
00EF E0                MOVX    A,@DPTR
00F0 FF                MOV     R7,A
00F1 EF                MOV     A,R7
00F2 6402              XRL     A,#02H
00F4 6015              JZ      ?C0029
00F6 900000      E     MOV     DPTR,#RTC_currentTimeDate+07H
00F9 E0                MOVX    A,@DPTR
00FA FF                MOV     R7,A
00FB EF                MOV     A,R7
00FC 900000      E     MOV     DPTR,#RTC_daysInMonths-01H
00FF 93                MOVC    A,@A+DPTR
0100 FF                MOV     R7,A
0101 900000      E     MOV     DPTR,#RTC_currentTimeDate+04H
0104 E0                MOVX    A,@DPTR
0105 FE                MOV     R6,A
0106 EE                MOV     A,R6
0107 D3                SETB    C
0108 9F                SUBB    A,R7
0109 502A              JNC     ?C0027
010B         ?C0029:
010B 900000      E     MOV     DPTR,#RTC_statusDateTime
010E E0                MOVX    A,@DPTR
010F FF                MOV     R7,A
0110 EF                MOV     A,R7
0111 5402              ANL     A,#02H
0113 FF                MOV     R7,A
0114 7E00              MOV     R6,#00H
0116 EF                MOV     A,R7
0117 4E                ORL     A,R6
0118 6003              JZ      $ + 5H
011A 020000      R     LJMP    ?C0026
011D 900000      E     MOV     DPTR,#RTC_currentTimeDate+07H
0120 E0                MOVX    A,@DPTR
0121 FF                MOV     R7,A
0122 EF                MOV     A,R7
0123 900000      E     MOV     DPTR,#RTC_daysInMonths-01H
0126 93                MOVC    A,@A+DPTR
0127 FF                MOV     R7,A
0128 900000      E     MOV     DPTR,#RTC_currentTimeDate+04H
012B E0                MOVX    A,@DPTR
012C FE                MOV     R6,A
012D EE                MOV     A,R6
012E D3                SETB    C
012F 9F                SUBB    A,R7
0130 5003              JNC     $ + 5H
0132 020000      R     LJMP    ?C0026
0135         ?C0027:
                                           ; SOURCE LINE # 367
                                           ; SOURCE LINE # 369
0135 900000      E     MOV     DPTR,#RTC_currentTimeDate+07H
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 26  

0138 E0                MOVX    A,@DPTR
0139 04                INC     A
013A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 372
013B 900000      E     MOV     DPTR,#RTC_currentTimeDate+04H
013E 7401              MOV     A,#01H
0140 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 375
0141 900000      E     MOV     DPTR,#RTC_currentTimeDate+07H
0144 E0                MOVX    A,@DPTR
0145 FF                MOV     R7,A
0146 EF                MOV     A,R7
0147 D3                SETB    C
0148 940C              SUBB    A,#0CH
014A 5003              JNC     $ + 5H
014C 020000      R     LJMP    ?C0030
                                           ; SOURCE LINE # 376
                                           ; SOURCE LINE # 378
014F 900000      E     MOV     DPTR,#RTC_currentTimeDate+08H
0152 E4                CLR     A
0153 75F001            MOV     B,#01H
0156 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 381
0159 900000      E     MOV     DPTR,#RTC_currentTimeDate+07H
015C 7401              MOV     A,#01H
015E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 384
015F 900000      E     MOV     DPTR,#RTC_currentTimeDate+05H
0162 E4                CLR     A
0163 F0                MOVX    @DPTR,A
0164 A3                INC     DPTR
0165 7401              MOV     A,#01H
0167 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 387
0168 900000      E     MOV     DPTR,#RTC_currentTimeDate+08H
016B E0                MOVX    A,@DPTR
016C FE                MOV     R6,A
016D A3                INC     DPTR
016E E0                MOVX    A,@DPTR
016F FF                MOV     R7,A
0170 7C01              MOV     R4,#01H
0172 7D90              MOV     R5,#090H
0174 120000      E     LCALL   ?C?UIDIV
0177 ED                MOV     A,R5
0178 4C                ORL     A,R4
0179 6025              JZ      ?C0034
017B 900000      E     MOV     DPTR,#RTC_currentTimeDate+08H
017E E0                MOVX    A,@DPTR
017F FE                MOV     R6,A
0180 A3                INC     DPTR
0181 E0                MOVX    A,@DPTR
0182 FF                MOV     R7,A
0183 7E00              MOV     R6,#00H
0185 EF                MOV     A,R7
0186 5403              ANL     A,#03H
0188 FF                MOV     R7,A
0189 EF                MOV     A,R7
018A 4E                ORL     A,R6
018B 7017              JNZ     ?C0032
018D 900000      E     MOV     DPTR,#RTC_currentTimeDate+08H
0190 E0                MOVX    A,@DPTR
0191 FE                MOV     R6,A
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 27  

0192 A3                INC     DPTR
0193 E0                MOVX    A,@DPTR
0194 FF                MOV     R7,A
0195 7C00              MOV     R4,#00H
0197 7D64              MOV     R5,#064H
0199 120000      E     LCALL   ?C?UIDIV
019C ED                MOV     A,R5
019D 4C                ORL     A,R4
019E 6004              JZ      ?C0032
01A0         ?C0034:
01A0 7F01              MOV     R7,#01H
01A2 8002              SJMP    ?C0033
01A4         ?C0032:
01A4 7F00              MOV     R7,#00H
01A6         ?C0033:
01A6 EF                MOV     A,R7
01A7 B40110            CJNE    A,#01H,?C0031
                                           ; SOURCE LINE # 388
                                           ; SOURCE LINE # 390
01AA 900000      E     MOV     DPTR,#RTC_statusDateTime
01AD E0                MOVX    A,@DPTR
01AE FF                MOV     R7,A
01AF EF                MOV     A,R7
01B0 4402              ORL     A,#02H
01B2 FF                MOV     R7,A
01B3 900000      E     MOV     DPTR,#RTC_statusDateTime
01B6 EF                MOV     A,R7
01B7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 391
01B8 800E              SJMP    ?C0035
01BA         ?C0031:
                                           ; SOURCE LINE # 393
                                           ; SOURCE LINE # 395
01BA 900000      E     MOV     DPTR,#RTC_statusDateTime
01BD E0                MOVX    A,@DPTR
01BE FF                MOV     R7,A
01BF EF                MOV     A,R7
01C0 54FD              ANL     A,#0FDH
01C2 FF                MOV     R7,A
01C3 900000      E     MOV     DPTR,#RTC_statusDateTime
01C6 EF                MOV     A,R7
01C7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 396
01C8         ?C0035:
                                           ; SOURCE LINE # 399
01C8 900000      E     MOV     DPTR,#RTC_alarmCfgMask
01CB E0                MOVX    A,@DPTR
01CC FF                MOV     R7,A
01CD EF                MOV     A,R7
01CE 5480              ANL     A,#080H
01D0 FF                MOV     R7,A
01D1 7E00              MOV     R6,#00H
01D3 EF                MOV     A,R7
01D4 6480              XRL     A,#080H
01D6 4E                ORL     A,R6
01D7 7004              JNZ     ?C0037
01D9 7F01              MOV     R7,#01H
01DB 8002              SJMP    ?C0038
01DD         ?C0037:
01DD 7F00              MOV     R7,#00H
01DF         ?C0038:
01DF EF                MOV     A,R7
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 28  

01E0 6036              JZ      ?C0036
                                           ; SOURCE LINE # 401
                                           ; SOURCE LINE # 403
01E2 900000      E     MOV     DPTR,#RTC_currentTimeDate+08H
01E5 E0                MOVX    A,@DPTR
01E6 FE                MOV     R6,A
01E7 A3                INC     DPTR
01E8 E0                MOVX    A,@DPTR
01E9 FF                MOV     R7,A
01EA 900000      E     MOV     DPTR,#RTC_alarmCfgTimeDate+08H
01ED E0                MOVX    A,@DPTR
01EE FC                MOV     R4,A
01EF A3                INC     DPTR
01F0 E0                MOVX    A,@DPTR
01F1 FD                MOV     R5,A
01F2 ED                MOV     A,R5
01F3 B50714            CJNE    A,AR7,?C0039
01F6 EC                MOV     A,R4
01F7 B50610            CJNE    A,AR6,?C0039
                                           ; SOURCE LINE # 404
                                           ; SOURCE LINE # 406
01FA 900000      E     MOV     DPTR,#RTC_alarmCurStatus
01FD E0                MOVX    A,@DPTR
01FE FF                MOV     R7,A
01FF EF                MOV     A,R7
0200 4480              ORL     A,#080H
0202 FF                MOV     R7,A
0203 900000      E     MOV     DPTR,#RTC_alarmCurStatus
0206 EF                MOV     A,R7
0207 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 407
0208 800E              SJMP    ?C0036
020A         ?C0039:
                                           ; SOURCE LINE # 409
                                           ; SOURCE LINE # 411
020A 900000      E     MOV     DPTR,#RTC_alarmCurStatus
020D E0                MOVX    A,@DPTR
020E FF                MOV     R7,A
020F EF                MOV     A,R7
0210 547F              ANL     A,#07FH
0212 FF                MOV     R7,A
0213 900000      E     MOV     DPTR,#RTC_alarmCurStatus
0216 EF                MOV     A,R7
0217 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 412
0218         ?C0040:
                                           ; SOURCE LINE # 413
0218         ?C0036:
                                           ; SOURCE LINE # 416
0218 900000      E     MOV     DPTR,#RTC_alarmCfgMask
021B E0                MOVX    A,@DPTR
021C FF                MOV     R7,A
021D 900000      R     MOV     DPTR,#RTC_tmp
0220 EF                MOV     A,R7
0221 F0                MOVX    @DPTR,A
0222         ?C0043:
                                           ; SOURCE LINE # 419
0222 900000      R     MOV     DPTR,#RTC_tmp
0225 E0                MOVX    A,@DPTR
0226 FF                MOV     R7,A
0227 EF                MOV     A,R7
0228 6032              JZ      ?C0042
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 29  

022A 900000      R     MOV     DPTR,#RTC_tmp
022D E0                MOVX    A,@DPTR
022E FF                MOV     R7,A
022F 900000      E     MOV     DPTR,#RTC_alarmCurStatus
0232 E0                MOVX    A,@DPTR
0233 FE                MOV     R6,A
0234 EE                MOV     A,R6
0235 5F                ANL     A,R7
0236 FF                MOV     R7,A
0237 900000      R     MOV     DPTR,#RTC_tmp
023A E0                MOVX    A,@DPTR
023B FE                MOV     R6,A
023C EF                MOV     A,R7
023D B50604            CJNE    A,AR6,?C0045
0240 7F01              MOV     R7,#01H
0242 8002              SJMP    ?C0046
0244         ?C0045:
0244 7F00              MOV     R7,#00H
0246         ?C0046:
0246 EF                MOV     A,R7
0247 6013              JZ      ?C0042
0249 900000      E     MOV     DPTR,#RTC_statusDateTime
024C E0                MOVX    A,@DPTR
024D FF                MOV     R7,A
024E EF                MOV     A,R7
024F 4408              ORL     A,#08H
0251 FF                MOV     R7,A
0252 900000      E     MOV     DPTR,#RTC_statusDateTime
0255 EF                MOV     A,R7
0256 F0                MOVX    @DPTR,A
0257 900000      E     MOV     DPTR,#RTC_alarmCurStatus
025A E4                CLR     A
025B F0                MOVX    @DPTR,A
025C         ?C0044:
025C         ?C0041:
025C         ?C0042:
                                           ; SOURCE LINE # 422
025C 900000      E     MOV     DPTR,#RTC_intervalCfgMask
025F E0                MOVX    A,@DPTR
0260 FF                MOV     R7,A
0261 EF                MOV     A,R7
0262 5440              ANL     A,#040H
0264 FF                MOV     R7,A
0265 7E00              MOV     R6,#00H
0267 EF                MOV     A,R7
0268 6440              XRL     A,#040H
026A 4E                ORL     A,R6
026B 7004              JNZ     ?C0048
026D 7F01              MOV     R7,#01H
026F 8002              SJMP    ?C0049
0271         ?C0048:
0271 7F00              MOV     R7,#00H
0273         ?C0049:
0273 EF                MOV     A,R7
0274 6003              JZ      ?C0030
                                           ; SOURCE LINE # 424
                                           ; SOURCE LINE # 425
0276 120000      R     LCALL   RTC_EveryYearHandler
                                           ; SOURCE LINE # 426
0279         ?C0047:
                                           ; SOURCE LINE # 428
0279         ?C0030:
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 30  

                                           ; SOURCE LINE # 431
0279 900000      E     MOV     DPTR,#RTC_alarmCfgMask
027C E0                MOVX    A,@DPTR
027D FF                MOV     R7,A
027E EF                MOV     A,R7
027F 5440              ANL     A,#040H
0281 FF                MOV     R7,A
0282 7E00              MOV     R6,#00H
0284 EF                MOV     A,R7
0285 6440              XRL     A,#040H
0287 4E                ORL     A,R6
0288 7004              JNZ     ?C0051
028A 7F01              MOV     R7,#01H
028C 8002              SJMP    ?C0052
028E         ?C0051:
028E 7F00              MOV     R7,#00H
0290         ?C0052:
0290 EF                MOV     A,R7
0291 602C              JZ      ?C0050
                                           ; SOURCE LINE # 433
                                           ; SOURCE LINE # 434
0293 900000      E     MOV     DPTR,#RTC_currentTimeDate+07H
0296 E0                MOVX    A,@DPTR
0297 FF                MOV     R7,A
0298 900000      E     MOV     DPTR,#RTC_alarmCfgTimeDate+07H
029B E0                MOVX    A,@DPTR
029C FE                MOV     R6,A
029D EE                MOV     A,R6
029E B50710            CJNE    A,AR7,?C0053
                                           ; SOURCE LINE # 435
                                           ; SOURCE LINE # 437
02A1 900000      E     MOV     DPTR,#RTC_alarmCurStatus
02A4 E0                MOVX    A,@DPTR
02A5 FF                MOV     R7,A
02A6 EF                MOV     A,R7
02A7 4440              ORL     A,#040H
02A9 FF                MOV     R7,A
02AA 900000      E     MOV     DPTR,#RTC_alarmCurStatus
02AD EF                MOV     A,R7
02AE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 438
02AF 800E              SJMP    ?C0050
02B1         ?C0053:
                                           ; SOURCE LINE # 440
                                           ; SOURCE LINE # 442
02B1 900000      E     MOV     DPTR,#RTC_alarmCurStatus
02B4 E0                MOVX    A,@DPTR
02B5 FF                MOV     R7,A
02B6 EF                MOV     A,R7
02B7 54BF              ANL     A,#0BFH
02B9 FF                MOV     R7,A
02BA 900000      E     MOV     DPTR,#RTC_alarmCurStatus
02BD EF                MOV     A,R7
02BE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 443
02BF         ?C0054:
                                           ; SOURCE LINE # 444
02BF         ?C0050:
                                           ; SOURCE LINE # 467
02BF 900000      E     MOV     DPTR,#RTC_alarmCfgMask
02C2 E0                MOVX    A,@DPTR
02C3 FF                MOV     R7,A
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 31  

02C4 900000      R     MOV     DPTR,#RTC_tmp
02C7 EF                MOV     A,R7
02C8 F0                MOVX    @DPTR,A
02C9         ?C0057:
                                           ; SOURCE LINE # 470
02C9 900000      R     MOV     DPTR,#RTC_tmp
02CC E0                MOVX    A,@DPTR
02CD FF                MOV     R7,A
02CE EF                MOV     A,R7
02CF 6032              JZ      ?C0056
02D1 900000      R     MOV     DPTR,#RTC_tmp
02D4 E0                MOVX    A,@DPTR
02D5 FF                MOV     R7,A
02D6 900000      E     MOV     DPTR,#RTC_alarmCurStatus
02D9 E0                MOVX    A,@DPTR
02DA FE                MOV     R6,A
02DB EE                MOV     A,R6
02DC 5F                ANL     A,R7
02DD FF                MOV     R7,A
02DE 900000      R     MOV     DPTR,#RTC_tmp
02E1 E0                MOVX    A,@DPTR
02E2 FE                MOV     R6,A
02E3 EF                MOV     A,R7
02E4 B50604            CJNE    A,AR6,?C0059
02E7 7F01              MOV     R7,#01H
02E9 8002              SJMP    ?C0060
02EB         ?C0059:
02EB 7F00              MOV     R7,#00H
02ED         ?C0060:
02ED EF                MOV     A,R7
02EE 6013              JZ      ?C0056
02F0 900000      E     MOV     DPTR,#RTC_statusDateTime
02F3 E0                MOVX    A,@DPTR
02F4 FF                MOV     R7,A
02F5 EF                MOV     A,R7
02F6 4408              ORL     A,#08H
02F8 FF                MOV     R7,A
02F9 900000      E     MOV     DPTR,#RTC_statusDateTime
02FC EF                MOV     A,R7
02FD F0                MOVX    @DPTR,A
02FE 900000      E     MOV     DPTR,#RTC_alarmCurStatus
0301 E4                CLR     A
0302 F0                MOVX    @DPTR,A
0303         ?C0058:
0303         ?C0055:
0303         ?C0056:
                                           ; SOURCE LINE # 473
0303 900000      E     MOV     DPTR,#RTC_intervalCfgMask
0306 E0                MOVX    A,@DPTR
0307 FF                MOV     R7,A
0308 EF                MOV     A,R7
0309 5420              ANL     A,#020H
030B FF                MOV     R7,A
030C 7E00              MOV     R6,#00H
030E EF                MOV     A,R7
030F 6420              XRL     A,#020H
0311 4E                ORL     A,R6
0312 7004              JNZ     ?C0062
0314 7F01              MOV     R7,#01H
0316 8002              SJMP    ?C0063
0318         ?C0062:
0318 7F00              MOV     R7,#00H
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 32  

031A         ?C0063:
031A EF                MOV     A,R7
031B 6003              JZ      ?C0026
                                           ; SOURCE LINE # 475
                                           ; SOURCE LINE # 476
031D 120000      R     LCALL   RTC_EveryMonthHandler
                                           ; SOURCE LINE # 477
0320         ?C0061:
                                           ; SOURCE LINE # 478
0320         ?C0026:
                                           ; SOURCE LINE # 481
0320 900000      E     MOV     DPTR,#RTC_alarmCfgMask
0323 E0                MOVX    A,@DPTR
0324 FF                MOV     R7,A
0325 EF                MOV     A,R7
0326 5408              ANL     A,#08H
0328 FF                MOV     R7,A
0329 7E00              MOV     R6,#00H
032B EF                MOV     A,R7
032C 6408              XRL     A,#08H
032E 4E                ORL     A,R6
032F 7004              JNZ     ?C0065
0331 7F01              MOV     R7,#01H
0333 8002              SJMP    ?C0066
0335         ?C0065:
0335 7F00              MOV     R7,#00H
0337         ?C0066:
0337 EF                MOV     A,R7
0338 602C              JZ      ?C0064
                                           ; SOURCE LINE # 483
                                           ; SOURCE LINE # 484
033A 900000      E     MOV     DPTR,#RTC_currentTimeDate+03H
033D E0                MOVX    A,@DPTR
033E FF                MOV     R7,A
033F 900000      E     MOV     DPTR,#RTC_alarmCfgTimeDate+03H
0342 E0                MOVX    A,@DPTR
0343 FE                MOV     R6,A
0344 EE                MOV     A,R6
0345 B50710            CJNE    A,AR7,?C0067
                                           ; SOURCE LINE # 485
                                           ; SOURCE LINE # 487
0348 900000      E     MOV     DPTR,#RTC_alarmCurStatus
034B E0                MOVX    A,@DPTR
034C FF                MOV     R7,A
034D EF                MOV     A,R7
034E 4408              ORL     A,#08H
0350 FF                MOV     R7,A
0351 900000      E     MOV     DPTR,#RTC_alarmCurStatus
0354 EF                MOV     A,R7
0355 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 488
0356 800E              SJMP    ?C0064
0358         ?C0067:
                                           ; SOURCE LINE # 490
                                           ; SOURCE LINE # 492
0358 900000      E     MOV     DPTR,#RTC_alarmCurStatus
035B E0                MOVX    A,@DPTR
035C FF                MOV     R7,A
035D EF                MOV     A,R7
035E 54F7              ANL     A,#0F7H
0360 FF                MOV     R7,A
0361 900000      E     MOV     DPTR,#RTC_alarmCurStatus
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 33  

0364 EF                MOV     A,R7
0365 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 493
0366         ?C0068:
                                           ; SOURCE LINE # 494
0366         ?C0064:
                                           ; SOURCE LINE # 497
0366 900000      E     MOV     DPTR,#RTC_alarmCfgMask
0369 E0                MOVX    A,@DPTR
036A FF                MOV     R7,A
036B EF                MOV     A,R7
036C 5420              ANL     A,#020H
036E FF                MOV     R7,A
036F 7E00              MOV     R6,#00H
0371 EF                MOV     A,R7
0372 6420              XRL     A,#020H
0374 4E                ORL     A,R6
0375 7004              JNZ     ?C0070
0377 7F01              MOV     R7,#01H
0379 8002              SJMP    ?C0071
037B         ?C0070:
037B 7F00              MOV     R7,#00H
037D         ?C0071:
037D EF                MOV     A,R7
037E 6036              JZ      ?C0069
                                           ; SOURCE LINE # 499
                                           ; SOURCE LINE # 500
0380 900000      E     MOV     DPTR,#RTC_currentTimeDate+05H
0383 E0                MOVX    A,@DPTR
0384 FE                MOV     R6,A
0385 A3                INC     DPTR
0386 E0                MOVX    A,@DPTR
0387 FF                MOV     R7,A
0388 900000      E     MOV     DPTR,#RTC_alarmCfgTimeDate+05H
038B E0                MOVX    A,@DPTR
038C FC                MOV     R4,A
038D A3                INC     DPTR
038E E0                MOVX    A,@DPTR
038F FD                MOV     R5,A
0390 ED                MOV     A,R5
0391 B50714            CJNE    A,AR7,?C0072
0394 EC                MOV     A,R4
0395 B50610            CJNE    A,AR6,?C0072
                                           ; SOURCE LINE # 501
                                           ; SOURCE LINE # 503
0398 900000      E     MOV     DPTR,#RTC_alarmCurStatus
039B E0                MOVX    A,@DPTR
039C FF                MOV     R7,A
039D EF                MOV     A,R7
039E 4420              ORL     A,#020H
03A0 FF                MOV     R7,A
03A1 900000      E     MOV     DPTR,#RTC_alarmCurStatus
03A4 EF                MOV     A,R7
03A5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 504
03A6 800E              SJMP    ?C0069
03A8         ?C0072:
                                           ; SOURCE LINE # 506
                                           ; SOURCE LINE # 508
03A8 900000      E     MOV     DPTR,#RTC_alarmCurStatus
03AB E0                MOVX    A,@DPTR
03AC FF                MOV     R7,A
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 34  

03AD EF                MOV     A,R7
03AE 54DF              ANL     A,#0DFH
03B0 FF                MOV     R7,A
03B1 900000      E     MOV     DPTR,#RTC_alarmCurStatus
03B4 EF                MOV     A,R7
03B5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 509
03B6         ?C0073:
                                           ; SOURCE LINE # 510
03B6         ?C0069:
                                           ; SOURCE LINE # 513
03B6 900000      E     MOV     DPTR,#RTC_alarmCfgMask
03B9 E0                MOVX    A,@DPTR
03BA FF                MOV     R7,A
03BB EF                MOV     A,R7
03BC 5410              ANL     A,#010H
03BE FF                MOV     R7,A
03BF 7E00              MOV     R6,#00H
03C1 EF                MOV     A,R7
03C2 6410              XRL     A,#010H
03C4 4E                ORL     A,R6
03C5 7004              JNZ     ?C0075
03C7 7F01              MOV     R7,#01H
03C9 8002              SJMP    ?C0076
03CB         ?C0075:
03CB 7F00              MOV     R7,#00H
03CD         ?C0076:
03CD EF                MOV     A,R7
03CE 602C              JZ      ?C0074
                                           ; SOURCE LINE # 515
                                           ; SOURCE LINE # 516
03D0 900000      E     MOV     DPTR,#RTC_currentTimeDate+04H
03D3 E0                MOVX    A,@DPTR
03D4 FF                MOV     R7,A
03D5 900000      E     MOV     DPTR,#RTC_alarmCfgTimeDate+04H
03D8 E0                MOVX    A,@DPTR
03D9 FE                MOV     R6,A
03DA EE                MOV     A,R6
03DB B50710            CJNE    A,AR7,?C0077
                                           ; SOURCE LINE # 517
                                           ; SOURCE LINE # 519
03DE 900000      E     MOV     DPTR,#RTC_alarmCurStatus
03E1 E0                MOVX    A,@DPTR
03E2 FF                MOV     R7,A
03E3 EF                MOV     A,R7
03E4 4410              ORL     A,#010H
03E6 FF                MOV     R7,A
03E7 900000      E     MOV     DPTR,#RTC_alarmCurStatus
03EA EF                MOV     A,R7
03EB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 520
03EC 800E              SJMP    ?C0074
03EE         ?C0077:
                                           ; SOURCE LINE # 522
                                           ; SOURCE LINE # 524
03EE 900000      E     MOV     DPTR,#RTC_alarmCurStatus
03F1 E0                MOVX    A,@DPTR
03F2 FF                MOV     R7,A
03F3 EF                MOV     A,R7
03F4 54EF              ANL     A,#0EFH
03F6 FF                MOV     R7,A
03F7 900000      E     MOV     DPTR,#RTC_alarmCurStatus
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 35  

03FA EF                MOV     A,R7
03FB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 525
03FC         ?C0078:
                                           ; SOURCE LINE # 526
03FC         ?C0074:
                                           ; SOURCE LINE # 549
03FC 900000      E     MOV     DPTR,#RTC_alarmCfgMask
03FF E0                MOVX    A,@DPTR
0400 FF                MOV     R7,A
0401 900000      R     MOV     DPTR,#RTC_tmp
0404 EF                MOV     A,R7
0405 F0                MOVX    @DPTR,A
0406         ?C0081:
                                           ; SOURCE LINE # 552
0406 900000      R     MOV     DPTR,#RTC_tmp
0409 E0                MOVX    A,@DPTR
040A FF                MOV     R7,A
040B EF                MOV     A,R7
040C 6032              JZ      ?C0080
040E 900000      R     MOV     DPTR,#RTC_tmp
0411 E0                MOVX    A,@DPTR
0412 FF                MOV     R7,A
0413 900000      E     MOV     DPTR,#RTC_alarmCurStatus
0416 E0                MOVX    A,@DPTR
0417 FE                MOV     R6,A
0418 EE                MOV     A,R6
0419 5F                ANL     A,R7
041A FF                MOV     R7,A
041B 900000      R     MOV     DPTR,#RTC_tmp
041E E0                MOVX    A,@DPTR
041F FE                MOV     R6,A
0420 EF                MOV     A,R7
0421 B50604            CJNE    A,AR6,?C0083
0424 7F01              MOV     R7,#01H
0426 8002              SJMP    ?C0084
0428         ?C0083:
0428 7F00              MOV     R7,#00H
042A         ?C0084:
042A EF                MOV     A,R7
042B 6013              JZ      ?C0080
042D 900000      E     MOV     DPTR,#RTC_statusDateTime
0430 E0                MOVX    A,@DPTR
0431 FF                MOV     R7,A
0432 EF                MOV     A,R7
0433 4408              ORL     A,#08H
0435 FF                MOV     R7,A
0436 900000      E     MOV     DPTR,#RTC_statusDateTime
0439 EF                MOV     A,R7
043A F0                MOVX    @DPTR,A
043B 900000      E     MOV     DPTR,#RTC_alarmCurStatus
043E E4                CLR     A
043F F0                MOVX    @DPTR,A
0440         ?C0082:
0440         ?C0079:
0440         ?C0080:
                                           ; SOURCE LINE # 555
0440 900000      E     MOV     DPTR,#RTC_intervalCfgMask
0443 E0                MOVX    A,@DPTR
0444 FF                MOV     R7,A
0445 EF                MOV     A,R7
0446 5408              ANL     A,#08H
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 36  

0448 FF                MOV     R7,A
0449 7E00              MOV     R6,#00H
044B EF                MOV     A,R7
044C 6408              XRL     A,#08H
044E 4E                ORL     A,R6
044F 7004              JNZ     ?C0086
0451 7F01              MOV     R7,#01H
0453 8002              SJMP    ?C0087
0455         ?C0086:
0455 7F00              MOV     R7,#00H
0457         ?C0087:
0457 EF                MOV     A,R7
0458 6003              JZ      ?C0085
                                           ; SOURCE LINE # 557
                                           ; SOURCE LINE # 558
045A 120000      R     LCALL   RTC_EveryDayHandler
                                           ; SOURCE LINE # 559
045D         ?C0085:
                                           ; SOURCE LINE # 561
045D 900000      E     MOV     DPTR,#RTC_currentTimeDate+03H
0460 E0                MOVX    A,@DPTR
0461 FF                MOV     R7,A
0462 EF                MOV     A,R7
0463 B4011D            CJNE    A,#01H,?C0024
                                           ; SOURCE LINE # 562
                                           ; SOURCE LINE # 564
0466 900000      E     MOV     DPTR,#RTC_intervalCfgMask
0469 E0                MOVX    A,@DPTR
046A FF                MOV     R7,A
046B EF                MOV     A,R7
046C 5410              ANL     A,#010H
046E FF                MOV     R7,A
046F 7E00              MOV     R6,#00H
0471 EF                MOV     A,R7
0472 6410              XRL     A,#010H
0474 4E                ORL     A,R6
0475 7004              JNZ     ?C0090
0477 7F01              MOV     R7,#01H
0479 8002              SJMP    ?C0091
047B         ?C0090:
047B 7F00              MOV     R7,#00H
047D         ?C0091:
047D EF                MOV     A,R7
047E 6003              JZ      ?C0024
                                           ; SOURCE LINE # 566
                                           ; SOURCE LINE # 567
0480 120000      R     LCALL   RTC_EveryWeekHandler
                                           ; SOURCE LINE # 568
0483         ?C0089:
                                           ; SOURCE LINE # 569
0483         ?C0088:
                                           ; SOURCE LINE # 571
0483         ?C0024:
                                           ; SOURCE LINE # 574
0483 900000      E     MOV     DPTR,#RTC_currentTimeDate+02H
0486 E0                MOVX    A,@DPTR
0487 FF                MOV     R7,A
0488 EF                MOV     A,R7
0489 C3                CLR     C
048A 940C              SUBB    A,#0CH
048C 5010              JNC     ?C0092
                                           ; SOURCE LINE # 575
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 37  

                                           ; SOURCE LINE # 577
048E 900000      E     MOV     DPTR,#RTC_statusDateTime
0491 E0                MOVX    A,@DPTR
0492 FF                MOV     R7,A
0493 EF                MOV     A,R7
0494 54FB              ANL     A,#0FBH
0496 FF                MOV     R7,A
0497 900000      E     MOV     DPTR,#RTC_statusDateTime
049A EF                MOV     A,R7
049B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 578
049C 800E              SJMP    ?C0093
049E         ?C0092:
                                           ; SOURCE LINE # 580
                                           ; SOURCE LINE # 582
049E 900000      E     MOV     DPTR,#RTC_statusDateTime
04A1 E0                MOVX    A,@DPTR
04A2 FF                MOV     R7,A
04A3 EF                MOV     A,R7
04A4 4404              ORL     A,#04H
04A6 FF                MOV     R7,A
04A7 900000      E     MOV     DPTR,#RTC_statusDateTime
04AA EF                MOV     A,R7
04AB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 583
04AC         ?C0093:
                                           ; SOURCE LINE # 910
04AC 900000      E     MOV     DPTR,#RTC_alarmCfgMask
04AF E0                MOVX    A,@DPTR
04B0 FF                MOV     R7,A
04B1 EF                MOV     A,R7
04B2 5404              ANL     A,#04H
04B4 FF                MOV     R7,A
04B5 7E00              MOV     R6,#00H
04B7 EF                MOV     A,R7
04B8 6404              XRL     A,#04H
04BA 4E                ORL     A,R6
04BB 7004              JNZ     ?C0095
04BD 7F01              MOV     R7,#01H
04BF 8002              SJMP    ?C0096
04C1         ?C0095:
04C1 7F00              MOV     R7,#00H
04C3         ?C0096:
04C3 EF                MOV     A,R7
04C4 602C              JZ      ?C0094
                                           ; SOURCE LINE # 911
                                           ; SOURCE LINE # 912
04C6 900000      E     MOV     DPTR,#RTC_currentTimeDate+02H
04C9 E0                MOVX    A,@DPTR
04CA FF                MOV     R7,A
04CB 900000      E     MOV     DPTR,#RTC_alarmCfgTimeDate+02H
04CE E0                MOVX    A,@DPTR
04CF FE                MOV     R6,A
04D0 EE                MOV     A,R6
04D1 B50710            CJNE    A,AR7,?C0097
                                           ; SOURCE LINE # 913
                                           ; SOURCE LINE # 914
04D4 900000      E     MOV     DPTR,#RTC_alarmCurStatus
04D7 E0                MOVX    A,@DPTR
04D8 FF                MOV     R7,A
04D9 EF                MOV     A,R7
04DA 4404              ORL     A,#04H
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 38  

04DC FF                MOV     R7,A
04DD 900000      E     MOV     DPTR,#RTC_alarmCurStatus
04E0 EF                MOV     A,R7
04E1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 915
04E2 800E              SJMP    ?C0094
04E4         ?C0097:
                                           ; SOURCE LINE # 917
                                           ; SOURCE LINE # 918
04E4 900000      E     MOV     DPTR,#RTC_alarmCurStatus
04E7 E0                MOVX    A,@DPTR
04E8 FF                MOV     R7,A
04E9 EF                MOV     A,R7
04EA 54FB              ANL     A,#0FBH
04EC FF                MOV     R7,A
04ED 900000      E     MOV     DPTR,#RTC_alarmCurStatus
04F0 EF                MOV     A,R7
04F1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 919
04F2         ?C0098:
                                           ; SOURCE LINE # 920
04F2         ?C0094:
                                           ; SOURCE LINE # 923
04F2 900000      E     MOV     DPTR,#RTC_alarmCfgMask
04F5 E0                MOVX    A,@DPTR
04F6 FF                MOV     R7,A
04F7 900000      R     MOV     DPTR,#RTC_tmp
04FA EF                MOV     A,R7
04FB F0                MOVX    @DPTR,A
04FC         ?C0101:
                                           ; SOURCE LINE # 926
04FC 900000      R     MOV     DPTR,#RTC_tmp
04FF E0                MOVX    A,@DPTR
0500 FF                MOV     R7,A
0501 EF                MOV     A,R7
0502 6032              JZ      ?C0100
0504 900000      R     MOV     DPTR,#RTC_tmp
0507 E0                MOVX    A,@DPTR
0508 FF                MOV     R7,A
0509 900000      E     MOV     DPTR,#RTC_alarmCurStatus
050C E0                MOVX    A,@DPTR
050D FE                MOV     R6,A
050E EE                MOV     A,R6
050F 5F                ANL     A,R7
0510 FF                MOV     R7,A
0511 900000      R     MOV     DPTR,#RTC_tmp
0514 E0                MOVX    A,@DPTR
0515 FE                MOV     R6,A
0516 EF                MOV     A,R7
0517 B50604            CJNE    A,AR6,?C0103
051A 7F01              MOV     R7,#01H
051C 8002              SJMP    ?C0104
051E         ?C0103:
051E 7F00              MOV     R7,#00H
0520         ?C0104:
0520 EF                MOV     A,R7
0521 6013              JZ      ?C0100
0523 900000      E     MOV     DPTR,#RTC_statusDateTime
0526 E0                MOVX    A,@DPTR
0527 FF                MOV     R7,A
0528 EF                MOV     A,R7
0529 4408              ORL     A,#08H
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 39  

052B FF                MOV     R7,A
052C 900000      E     MOV     DPTR,#RTC_statusDateTime
052F EF                MOV     A,R7
0530 F0                MOVX    @DPTR,A
0531 900000      E     MOV     DPTR,#RTC_alarmCurStatus
0534 E4                CLR     A
0535 F0                MOVX    @DPTR,A
0536         ?C0102:
0536         ?C0099:
0536         ?C0100:
                                           ; SOURCE LINE # 929
0536 900000      E     MOV     DPTR,#RTC_intervalCfgMask
0539 E0                MOVX    A,@DPTR
053A FF                MOV     R7,A
053B EF                MOV     A,R7
053C 5404              ANL     A,#04H
053E FF                MOV     R7,A
053F 7E00              MOV     R6,#00H
0541 EF                MOV     A,R7
0542 6404              XRL     A,#04H
0544 4E                ORL     A,R6
0545 7004              JNZ     ?C0106
0547 7F01              MOV     R7,#01H
0549 8002              SJMP    ?C0107
054B         ?C0106:
054B 7F00              MOV     R7,#00H
054D         ?C0107:
054D EF                MOV     A,R7
054E 6003              JZ      ?C0023
                                           ; SOURCE LINE # 930
                                           ; SOURCE LINE # 931
0550 120000      R     LCALL   RTC_EveryHourHandler
                                           ; SOURCE LINE # 932
0553         ?C0105:
                                           ; SOURCE LINE # 933
0553         ?C0023:
                                           ; SOURCE LINE # 936
0553 900000      E     MOV     DPTR,#RTC_alarmCfgMask
0556 E0                MOVX    A,@DPTR
0557 FF                MOV     R7,A
0558 EF                MOV     A,R7
0559 5402              ANL     A,#02H
055B FF                MOV     R7,A
055C 7E00              MOV     R6,#00H
055E EF                MOV     A,R7
055F 6402              XRL     A,#02H
0561 4E                ORL     A,R6
0562 7004              JNZ     ?C0109
0564 7F01              MOV     R7,#01H
0566 8002              SJMP    ?C0110
0568         ?C0109:
0568 7F00              MOV     R7,#00H
056A         ?C0110:
056A EF                MOV     A,R7
056B 602C              JZ      ?C0108
                                           ; SOURCE LINE # 937
                                           ; SOURCE LINE # 938
056D 900000      E     MOV     DPTR,#RTC_currentTimeDate+01H
0570 E0                MOVX    A,@DPTR
0571 FF                MOV     R7,A
0572 900000      E     MOV     DPTR,#RTC_alarmCfgTimeDate+01H
0575 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 40  

0576 FE                MOV     R6,A
0577 EE                MOV     A,R6
0578 B50710            CJNE    A,AR7,?C0111
                                           ; SOURCE LINE # 939
                                           ; SOURCE LINE # 940
057B 900000      E     MOV     DPTR,#RTC_alarmCurStatus
057E E0                MOVX    A,@DPTR
057F FF                MOV     R7,A
0580 EF                MOV     A,R7
0581 4402              ORL     A,#02H
0583 FF                MOV     R7,A
0584 900000      E     MOV     DPTR,#RTC_alarmCurStatus
0587 EF                MOV     A,R7
0588 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 941
0589 800E              SJMP    ?C0108
058B         ?C0111:
                                           ; SOURCE LINE # 943
                                           ; SOURCE LINE # 944
058B 900000      E     MOV     DPTR,#RTC_alarmCurStatus
058E E0                MOVX    A,@DPTR
058F FF                MOV     R7,A
0590 EF                MOV     A,R7
0591 54FD              ANL     A,#0FDH
0593 FF                MOV     R7,A
0594 900000      E     MOV     DPTR,#RTC_alarmCurStatus
0597 EF                MOV     A,R7
0598 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 945
0599         ?C0112:
                                           ; SOURCE LINE # 946
0599         ?C0108:
                                           ; SOURCE LINE # 949
0599 900000      E     MOV     DPTR,#RTC_alarmCfgMask
059C E0                MOVX    A,@DPTR
059D FF                MOV     R7,A
059E 900000      R     MOV     DPTR,#RTC_tmp
05A1 EF                MOV     A,R7
05A2 F0                MOVX    @DPTR,A
05A3         ?C0115:
                                           ; SOURCE LINE # 952
05A3 900000      R     MOV     DPTR,#RTC_tmp
05A6 E0                MOVX    A,@DPTR
05A7 FF                MOV     R7,A
05A8 EF                MOV     A,R7
05A9 6032              JZ      ?C0114
05AB 900000      R     MOV     DPTR,#RTC_tmp
05AE E0                MOVX    A,@DPTR
05AF FF                MOV     R7,A
05B0 900000      E     MOV     DPTR,#RTC_alarmCurStatus
05B3 E0                MOVX    A,@DPTR
05B4 FE                MOV     R6,A
05B5 EE                MOV     A,R6
05B6 5F                ANL     A,R7
05B7 FF                MOV     R7,A
05B8 900000      R     MOV     DPTR,#RTC_tmp
05BB E0                MOVX    A,@DPTR
05BC FE                MOV     R6,A
05BD EF                MOV     A,R7
05BE B50604            CJNE    A,AR6,?C0117
05C1 7F01              MOV     R7,#01H
05C3 8002              SJMP    ?C0118
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 41  

05C5         ?C0117:
05C5 7F00              MOV     R7,#00H
05C7         ?C0118:
05C7 EF                MOV     A,R7
05C8 6013              JZ      ?C0114
05CA 900000      E     MOV     DPTR,#RTC_statusDateTime
05CD E0                MOVX    A,@DPTR
05CE FF                MOV     R7,A
05CF EF                MOV     A,R7
05D0 4408              ORL     A,#08H
05D2 FF                MOV     R7,A
05D3 900000      E     MOV     DPTR,#RTC_statusDateTime
05D6 EF                MOV     A,R7
05D7 F0                MOVX    @DPTR,A
05D8 900000      E     MOV     DPTR,#RTC_alarmCurStatus
05DB E4                CLR     A
05DC F0                MOVX    @DPTR,A
05DD         ?C0116:
05DD         ?C0113:
05DD         ?C0114:
                                           ; SOURCE LINE # 955
05DD 900000      E     MOV     DPTR,#RTC_intervalCfgMask
05E0 E0                MOVX    A,@DPTR
05E1 FF                MOV     R7,A
05E2 EF                MOV     A,R7
05E3 5402              ANL     A,#02H
05E5 FF                MOV     R7,A
05E6 7E00              MOV     R6,#00H
05E8 EF                MOV     A,R7
05E9 6402              XRL     A,#02H
05EB 4E                ORL     A,R6
05EC 7004              JNZ     ?C0120
05EE 7F01              MOV     R7,#01H
05F0 8002              SJMP    ?C0121
05F2         ?C0120:
05F2 7F00              MOV     R7,#00H
05F4         ?C0121:
05F4 EF                MOV     A,R7
05F5 6003              JZ      ?C0022
                                           ; SOURCE LINE # 956
                                           ; SOURCE LINE # 957
05F7 120000      R     LCALL   RTC_EveryMinuteHandler
                                           ; SOURCE LINE # 958
05FA         ?C0119:
                                           ; SOURCE LINE # 959
05FA         ?C0022:
                                           ; SOURCE LINE # 962
05FA 900000      E     MOV     DPTR,#RTC_alarmCfgMask
05FD E0                MOVX    A,@DPTR
05FE FF                MOV     R7,A
05FF EF                MOV     A,R7
0600 5401              ANL     A,#01H
0602 FF                MOV     R7,A
0603 7E00              MOV     R6,#00H
0605 EF                MOV     A,R7
0606 6401              XRL     A,#01H
0608 4E                ORL     A,R6
0609 7004              JNZ     ?C0123
060B 7F01              MOV     R7,#01H
060D 8002              SJMP    ?C0124
060F         ?C0123:
060F 7F00              MOV     R7,#00H
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 42  

0611         ?C0124:
0611 EF                MOV     A,R7
0612 602C              JZ      ?C0122
                                           ; SOURCE LINE # 963
                                           ; SOURCE LINE # 964
0614 900000      E     MOV     DPTR,#RTC_currentTimeDate
0617 E0                MOVX    A,@DPTR
0618 FF                MOV     R7,A
0619 900000      E     MOV     DPTR,#RTC_alarmCfgTimeDate
061C E0                MOVX    A,@DPTR
061D FE                MOV     R6,A
061E EE                MOV     A,R6
061F B50710            CJNE    A,AR7,?C0125
                                           ; SOURCE LINE # 965
                                           ; SOURCE LINE # 966
0622 900000      E     MOV     DPTR,#RTC_alarmCurStatus
0625 E0                MOVX    A,@DPTR
0626 FF                MOV     R7,A
0627 EF                MOV     A,R7
0628 4401              ORL     A,#01H
062A FF                MOV     R7,A
062B 900000      E     MOV     DPTR,#RTC_alarmCurStatus
062E EF                MOV     A,R7
062F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 967
0630 800E              SJMP    ?C0122
0632         ?C0125:
                                           ; SOURCE LINE # 969
                                           ; SOURCE LINE # 970
0632 900000      E     MOV     DPTR,#RTC_alarmCurStatus
0635 E0                MOVX    A,@DPTR
0636 FF                MOV     R7,A
0637 EF                MOV     A,R7
0638 54FE              ANL     A,#0FEH
063A FF                MOV     R7,A
063B 900000      E     MOV     DPTR,#RTC_alarmCurStatus
063E EF                MOV     A,R7
063F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 971
0640         ?C0126:
                                           ; SOURCE LINE # 972
0640         ?C0122:
                                           ; SOURCE LINE # 975
0640 900000      E     MOV     DPTR,#RTC_alarmCfgMask
0643 E0                MOVX    A,@DPTR
0644 FF                MOV     R7,A
0645 900000      R     MOV     DPTR,#RTC_tmp
0648 EF                MOV     A,R7
0649 F0                MOVX    @DPTR,A
064A         ?C0129:
                                           ; SOURCE LINE # 976
064A 900000      R     MOV     DPTR,#RTC_tmp
064D E0                MOVX    A,@DPTR
064E FF                MOV     R7,A
064F EF                MOV     A,R7
0650 6032              JZ      ?C0128
0652 900000      R     MOV     DPTR,#RTC_tmp
0655 E0                MOVX    A,@DPTR
0656 FF                MOV     R7,A
0657 900000      E     MOV     DPTR,#RTC_alarmCurStatus
065A E0                MOVX    A,@DPTR
065B FE                MOV     R6,A
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 43  

065C EE                MOV     A,R6
065D 5F                ANL     A,R7
065E FF                MOV     R7,A
065F 900000      R     MOV     DPTR,#RTC_tmp
0662 E0                MOVX    A,@DPTR
0663 FE                MOV     R6,A
0664 EF                MOV     A,R7
0665 B50604            CJNE    A,AR6,?C0131
0668 7F01              MOV     R7,#01H
066A 8002              SJMP    ?C0132
066C         ?C0131:
066C 7F00              MOV     R7,#00H
066E         ?C0132:
066E EF                MOV     A,R7
066F 6013              JZ      ?C0128
0671 900000      E     MOV     DPTR,#RTC_statusDateTime
0674 E0                MOVX    A,@DPTR
0675 FF                MOV     R7,A
0676 EF                MOV     A,R7
0677 4408              ORL     A,#08H
0679 FF                MOV     R7,A
067A 900000      E     MOV     DPTR,#RTC_statusDateTime
067D EF                MOV     A,R7
067E F0                MOVX    @DPTR,A
067F 900000      E     MOV     DPTR,#RTC_alarmCurStatus
0682 E4                CLR     A
0683 F0                MOVX    @DPTR,A
0684         ?C0130:
0684         ?C0127:
0684         ?C0128:
                                           ; SOURCE LINE # 979
0684 900000      E     MOV     DPTR,#RTC_intervalCfgMask
0687 E0                MOVX    A,@DPTR
0688 FF                MOV     R7,A
0689 EF                MOV     A,R7
068A 5401              ANL     A,#01H
068C FF                MOV     R7,A
068D 7E00              MOV     R6,#00H
068F EF                MOV     A,R7
0690 6401              XRL     A,#01H
0692 4E                ORL     A,R6
0693 7004              JNZ     ?C0134
0695 7F01              MOV     R7,#01H
0697 8002              SJMP    ?C0135
0699         ?C0134:
0699 7F00              MOV     R7,#00H
069B         ?C0135:
069B EF                MOV     A,R7
069C 6003              JZ      ?C0136
                                           ; SOURCE LINE # 980
                                           ; SOURCE LINE # 981
069E 120000      R     LCALL   RTC_EverySecondHandler
                                           ; SOURCE LINE # 982
06A1         ?C0133:
                                           ; SOURCE LINE # 984
06A1         ?C0136:
06A1 D007              POP     AR7
06A3 D006              POP     AR6
06A5 D005              POP     AR5
06A7 D004              POP     AR4
06A9 D003              POP     AR3
06AB D002              POP     AR2
C51 COMPILER V9.51   RTC_INT                                                               06/01/2014 21:12:56 PAGE 44  

06AD D001              POP     AR1
06AF D000              POP     AR0
06B1 D0D0              POP     PSW
06B3 D000        E     POP     ?C?XPAGE1SFR
06B5 D086              POP     DPS
06B7 D084              POP     DPL1
06B9 D085              POP     DPH1
06BB D082              POP     DPL
06BD D083              POP     DPH
06BF D0F0              POP     B
06C1 D0E0              POP     ACC
06C3 32                RETI    
             ; FUNCTION RTC_ISR (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2006    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
