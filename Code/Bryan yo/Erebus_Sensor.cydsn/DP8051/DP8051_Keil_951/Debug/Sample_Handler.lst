C51 COMPILER V9.51   SAMPLE_HANDLER                                                        04/20/2014 20:20:56 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE SAMPLE_HANDLER
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\Sample_Handler.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Sample_Handler.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\Sample_Handler.lst) CD DB NOIP OT(0,SI
                    -ZE) DF(DEBUG) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\Sample_Handler.obj)

line level    source

   1          /* ========================================
   2           *
   3           * Copyright YOUR COMPANY, THE YEAR
   4           * All Rights Reserved
   5           * UNPUBLISHED, LICENSED SOFTWARE.
   6           *
   7           * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8           * WHICH IS THE PROPERTY OF your company.
   9           *
  10           * ========================================
  11          */
  12          #include "Sample_Handler.h"
  13          #include "project.h"
  14          #include "EmEEPROM_Access.h"
  15          #include "EEPROM_Access.h"
  16          #include "RTC_1.h"
  17          
  18          
  19          uint16 sample_int_count;
  20          
  21          void rtc_init()
  22          {
  23   1          uint16 sample_unit;
  24   1          
  25   1          sample_unit = get_variable(EE_SAMPLE_UNIT);
*** ERROR C202 IN LINE 25 OF .\Sample_Handler.c: 'EE_SAMPLE_UNIT': undefined identifier
  26   1          
  27   1          switch (sample_unit)
  28   1          {
  29   2              case 1: /* Seconds */
  30   2                  RTC_1_WriteIntervalMask(0x01u);
  31   2                  break;
  32   2              case 2: /* Minutes */
  33   2                  RTC_1_WriteIntervalMask(0x02u);
  34   2                  break;
  35   2              case 3: /* Hours */
  36   2                  RTC_1_WriteIntervalMask(0x04u);
  37   2                  break;
  38   2              case 4: /* Days */
  39   2                  RTC_1_WriteIntervalMask(0x08u);
  40   2                  break;
  41   2              case 5: /* Weeks */
  42   2                  RTC_1_WriteIntervalMask(0x10u);
  43   2                  break;
  44   2              case 6: /* Months */
  45   2                  RTC_1_WriteIntervalMask(0x20);
  46   2                  break;
  47   2              case 7: /* Years */
  48   2                  RTC_1_WriteIntervalMask(0x30u);
  49   2                  break;
  50   2          }
  51   1          
  52   1          sample_int_count = 0;
C51 COMPILER V9.51   SAMPLE_HANDLER                                                        04/20/2014 20:20:56 PAGE 2   

  53   1       }
  54          
  55          void RTC_Int_Handler()
  56          {
  57   1          sample_counter();
  58   1      }
  59          
  60          void sample_counter()
  61          {
  62   1          uint16 sample_interval;
  63   1          
  64   1          sample_interval = get_variable(EE_SAMPLE_INTERVAL);
*** ERROR C202 IN LINE 64 OF .\Sample_Handler.c: 'EE_SAMPLE_INTERVAL': undefined identifier
  65   1          
  66   1          /* Take sample if interval has been reached */
  67   1          if (sample_int_count == sample_interval)
  68   1          {
  69   2              take_sample();
  70   2              sample_int_count = 0;
  71   2              
  72   2              CyPmSaveClocks();
  73   2              CyPmSleep(1,2112);
  74   2          }
  75   1          /* Increment counter and go back to sleep if interval has not been reached */
  76   1          else
  77   1          {
  78   2              sample_int_count = sample_int_count++;
  79   2              
  80   2              CyPmSaveClocks();
  81   2              CyPmSleep(1,2112);
  82   2              
  83   2          }
  84   1          
  85   1      }
  86          
  87          void take_sample()
  88          {
  89   1          uint16 SampledData=0; 
  90   1          
  91   1          Em_EEPROM_Start(); 
  92   1          ADC_Start();
  93   1          
  94   1          /* ADC */
  95   1          SampledData = ADC_Read16(); /* Function Starts, Converts, Stops, and Returns from ADC */
  96   1          if (SampledData & 0x8000)
  97   1              {
  98   2              SampledData = 0;        /* Ignore negative ADC results */
  99   2              }
 100   1              else if (SampledData >= 0xfff)
 101   1              {
 102   2              SampledData = 0xfff;    /* Ignore high ADC results */
 103   2          }
 104   1          
 105   1          
 106   1          /* EEP */
 107   1          Em_EEPROM_Write(&SampledData,TailPtr,2u);
 108   1          
 109   1          TailPtr = TailPtr + 2;
 110   1          
 111   1          CyPmSaveClocks();
 112   1          CyPmSleep(1,2112);
 113   1          
C51 COMPILER V9.51   SAMPLE_HANDLER                                                        04/20/2014 20:20:56 PAGE 3   

 114   1      }
 115              
 116          /* [] END OF FILE */

C51 COMPILATION COMPLETE.  0 WARNING(S),  2 ERROR(S)
