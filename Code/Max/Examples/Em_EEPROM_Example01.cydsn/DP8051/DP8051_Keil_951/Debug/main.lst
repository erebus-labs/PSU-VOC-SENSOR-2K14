C51 COMPILER V9.51   MAIN                                                                  03/02/2014 13:58:57 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\main.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\main.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\main.lst) CD DB NOIP OT(2,SIZE) DF(DEBUG) INCDIR
                    -(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\main.obj)

line level    source

   1          /*******************************************************************************
   2          * File: main.c
   3          *
   4          * Version: 1.10
   5          *
   6          * Description:
   7          *  The example project demonstrates the basic functionality of the Emulated
   8          *  EEPROM component.
   9          *
  10          ********************************************************************************
  11          * Copyright 2013, Cypress Semiconductor Corporation. All rights reserved.
  12          * This software is owned by Cypress Semiconductor Corporation and is protected
  13          * by and subject to worldwide patent and copyright laws and treaties.
  14          * Therefore, you may use this software only as provided in the license agreement
  15          * accompanying the software package from which you obtained this software.
  16          * CYPRESS AND ITS SUPPLIERS MAKE NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  17          * WITH REGARD TO THIS SOFTWARE, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
  18          * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  19          *******************************************************************************/
  20          #include <project.h>
  21          
  22          
  23          int main()
  24          {
  25   1          static const uint8 CYCODE eepromArray[]= /********** Are these memory locations? ****/
  26   1                                      { 0x46, 0x69, 0x72, 0x73, 0x74, 0x20, 0x72, 0x75, 0x6E, 0x00, 0x00, 0x00, 
             -0x00, 0x00 };
  27   1                                                   /* F     i     r     s     t           r     u     n     */
  28   1          uint8 array[]              ={ 0x50, 0x6F, 0x77, 0x65, 0x72, 0x43, 0x79, 0x63, 0x6C, 0x65, 0x23, 0x20, 
             -0x30, 0x00 };
  29   1                                      /* P     o     w     e     r     C     y     c     l     e     #          
             - 0*/
  30   1      
  31   1      
  32   1          uint8 eeprom_cnt;
  33   1          cystatus status;
  34   1          volatile const uint8 * ptr;
  35   1      
  36   1          LCD_Start();
  37   1          Em_EEPROM_Start();
  38   1          LCD_ClearDisplay();
  39   1          
  40   1          LCD_PrintString("Em EEPROM demo");
  41   1          
  42   1          /* If the string in ROM begins with "F", replace it, otherwise increment counter  */
  43   1          if (*(volatile uint8 *) &eepromArray[0] == 0x46u)
  44   1          {
  45   2              LCD_Position(1u,0u);
  46   2              LCD_PrintString((char *)eepromArray);
  47   2              status = Em_EEPROM_Write(array,eepromArray,14u);
  48   2              if (CYRET_SUCCESS != status)
  49   2              {
  50   3                  LCD_ClearDisplay();
C51 COMPILER V9.51   MAIN                                                                  03/02/2014 13:58:57 PAGE 2   

  51   3                  LCD_PrintString("Em EEPROM error");
  52   3                  while (1u == 1u)
  53   3                  {
  54   4                      /* Will stay here */
  55   4                  }
  56   3              }
  57   2          }
  58   1          else
  59   1          {
  60   2              ptr = &eepromArray[12];
  61   2              eeprom_cnt = *ptr;
  62   2              eeprom_cnt++;
  63   2              
  64   2              if(eeprom_cnt > 0x39u)
  65   2              {
  66   3                  eeprom_cnt = 0x30u;
  67   3              }
  68   2              
  69   2              status = Em_EEPROM_Write(&eeprom_cnt,&eepromArray[12],1u);
  70   2              
  71   2              LCD_Position(1u,0u);
  72   2              LCD_PrintString((char *)eepromArray);
  73   2              
  74   2              if (CYRET_SUCCESS != status)
  75   2              {
  76   3                  LCD_ClearDisplay();
  77   3                  LCD_PrintString("Em EEPROM error");
  78   3                  while (1u == 1u)
  79   3                  {
  80   4                      /* Will stay here */
  81   4                  }
  82   3              }
  83   2          }
  84   1          
  85   1          while (1u == 1u)
  86   1          {
  87   2              /* Forever loop */
  88   2          }
  89   1      }
  90          
  91          /* [] END OF FILE */
C51 COMPILER V9.51   MAIN                                                                  03/02/2014 13:58:57 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 23
                                           ; SOURCE LINE # 24
                                           ; SOURCE LINE # 28
0000 7BFF              MOV     R3,#0FFH
0002 7A00        R     MOV     R2,#HIGH _?ix1000
0004 7900        R     MOV     R1,#LOW _?ix1000
0006 C003              PUSH    AR3
0008 C002              PUSH    AR2
000A C001              PUSH    AR1
000C 7B01              MOV     R3,#01H
000E 7A00        R     MOV     R2,#HIGH array
0010 7900        R     MOV     R1,#LOW array
0012 A801              MOV     R0,AR1
0014 AC02              MOV     R4,AR2
0016 AD03              MOV     R5,AR3
0018 D001              POP     AR1
001A D002              POP     AR2
001C D003              POP     AR3
001E 7E00              MOV     R6,#00H
0020 7F0E              MOV     R7,#0EH
0022 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 36
0025 120000      E     LCALL   LCD_Start
                                           ; SOURCE LINE # 37
0028 120000      E     LCALL   Em_EEPROM_Start
                                           ; SOURCE LINE # 38
002B 7F01              MOV     R7,#01H
002D 120000      E     LCALL   _LCD_WriteControl
                                           ; SOURCE LINE # 40
0030 7BFF              MOV     R3,#0FFH
0032 7A00        R     MOV     R2,#HIGH ?SC_0
0034 7900        R     MOV     R1,#LOW ?SC_0
0036 120000      E     LCALL   _LCD_PrintString
                                           ; SOURCE LINE # 43
0039 900000      R     MOV     DPTR,#eepromArray
003C E4                CLR     A
003D 93                MOVC    A,@A+DPTR
003E FF                MOV     R7,A
003F EF                MOV     A,R7
0040 6446              XRL     A,#046H
0042 705A              JNZ     ?C0001
                                           ; SOURCE LINE # 44
                                           ; SOURCE LINE # 45
0044 7D00              MOV     R5,#00H
0046 7F01              MOV     R7,#01H
0048 120000      E     LCALL   _LCD_Position
                                           ; SOURCE LINE # 46
004B 7BFF              MOV     R3,#0FFH
004D 7A00        R     MOV     R2,#HIGH eepromArray
004F 7900        R     MOV     R1,#LOW eepromArray
0051 120000      E     LCALL   _LCD_PrintString
                                           ; SOURCE LINE # 47
0054 7B01              MOV     R3,#01H
0056 7A00        R     MOV     R2,#HIGH array
0058 7900        R     MOV     R1,#LOW array
005A C003              PUSH    AR3
005C C002              PUSH    AR2
005E C001              PUSH    AR1
C51 COMPILER V9.51   MAIN                                                                  03/02/2014 13:58:57 PAGE 4   

0060 7BFF              MOV     R3,#0FFH
0062 7A00        R     MOV     R2,#HIGH eepromArray
0064 7900        R     MOV     R1,#LOW eepromArray
0066 900000      E     MOV     DPTR,#?_Em_EEPROM_Write?BYTE+03H
0069 120000      E     LCALL   ?C?PSTXDATA
006C 900000      E     MOV     DPTR,#?_Em_EEPROM_Write?BYTE+06H
006F E4                CLR     A
0070 F0                MOVX    @DPTR,A
0071 A3                INC     DPTR
0072 740E              MOV     A,#0EH
0074 F0                MOVX    @DPTR,A
0075 D001              POP     AR1
0077 D002              POP     AR2
0079 D003              POP     AR3
007B 120000      E     LCALL   _Em_EEPROM_Write
007E 900000      R     MOV     DPTR,#status
0081 EF                MOV     A,R7
0082 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 48
0083 900000      R     MOV     DPTR,#status
0086 E0                MOVX    A,@DPTR
0087 FF                MOV     R7,A
0088 EF                MOV     A,R7
0089 7003              JNZ     $ + 5H
008B 020000      R     LJMP    ?C0010
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 50
008E 7F01              MOV     R7,#01H
0090 120000      E     LCALL   _LCD_WriteControl
                                           ; SOURCE LINE # 51
0093 7BFF              MOV     R3,#0FFH
0095 7A00        R     MOV     R2,#HIGH ?SC_15
0097 7900        R     MOV     R1,#LOW ?SC_15
0099 120000      E     LCALL   _LCD_PrintString
009C         ?C0003:
                                           ; SOURCE LINE # 52
                                           ; SOURCE LINE # 53
                                           ; SOURCE LINE # 55
009C 80FE              SJMP    ?C0003
                                           ; SOURCE LINE # 56
                                           ; SOURCE LINE # 57
009E         ?C0001:
                                           ; SOURCE LINE # 59
                                           ; SOURCE LINE # 60
009E 7BFF              MOV     R3,#0FFH
00A0 7A00        R     MOV     R2,#HIGH eepromArray+0CH
00A2 7900        R     MOV     R1,#LOW eepromArray+0CH
00A4 900000      R     MOV     DPTR,#ptr
00A7 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 61
00AA 900000      R     MOV     DPTR,#ptr
00AD 120000      E     LCALL   ?C?PLDXDATA
00B0 120000      E     LCALL   ?C?CLDPTR
00B3 FF                MOV     R7,A
00B4 900000      R     MOV     DPTR,#eeprom_cnt
00B7 EF                MOV     A,R7
00B8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 62
00B9 900000      R     MOV     DPTR,#eeprom_cnt
00BC E0                MOVX    A,@DPTR
00BD 04                INC     A
00BE F0                MOVX    @DPTR,A
C51 COMPILER V9.51   MAIN                                                                  03/02/2014 13:58:57 PAGE 5   

                                           ; SOURCE LINE # 64
00BF 900000      R     MOV     DPTR,#eeprom_cnt
00C2 E0                MOVX    A,@DPTR
00C3 FF                MOV     R7,A
00C4 EF                MOV     A,R7
00C5 D3                SETB    C
00C6 9439              SUBB    A,#039H
00C8 4006              JC      ?C0006
                                           ; SOURCE LINE # 65
                                           ; SOURCE LINE # 66
00CA 900000      R     MOV     DPTR,#eeprom_cnt
00CD 7430              MOV     A,#030H
00CF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 67
00D0         ?C0006:
                                           ; SOURCE LINE # 69
00D0 7B01              MOV     R3,#01H
00D2 7A00        R     MOV     R2,#HIGH eeprom_cnt
00D4 7900        R     MOV     R1,#LOW eeprom_cnt
00D6 C003              PUSH    AR3
00D8 C002              PUSH    AR2
00DA C001              PUSH    AR1
00DC 7BFF              MOV     R3,#0FFH
00DE 7A00        R     MOV     R2,#HIGH eepromArray+0CH
00E0 7900        R     MOV     R1,#LOW eepromArray+0CH
00E2 900000      E     MOV     DPTR,#?_Em_EEPROM_Write?BYTE+03H
00E5 120000      E     LCALL   ?C?PSTXDATA
00E8 900000      E     MOV     DPTR,#?_Em_EEPROM_Write?BYTE+06H
00EB E4                CLR     A
00EC F0                MOVX    @DPTR,A
00ED A3                INC     DPTR
00EE 7401              MOV     A,#01H
00F0 F0                MOVX    @DPTR,A
00F1 D001              POP     AR1
00F3 D002              POP     AR2
00F5 D003              POP     AR3
00F7 120000      E     LCALL   _Em_EEPROM_Write
00FA 900000      R     MOV     DPTR,#status
00FD EF                MOV     A,R7
00FE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 71
00FF 7D00              MOV     R5,#00H
0101 7F01              MOV     R7,#01H
0103 120000      E     LCALL   _LCD_Position
                                           ; SOURCE LINE # 72
0106 7BFF              MOV     R3,#0FFH
0108 7A00        R     MOV     R2,#HIGH eepromArray
010A 7900        R     MOV     R1,#LOW eepromArray
010C 120000      E     LCALL   _LCD_PrintString
                                           ; SOURCE LINE # 74
010F 900000      R     MOV     DPTR,#status
0112 E0                MOVX    A,@DPTR
0113 FF                MOV     R7,A
0114 EF                MOV     A,R7
0115 6010              JZ      ?C0010
                                           ; SOURCE LINE # 75
                                           ; SOURCE LINE # 76
0117 7F01              MOV     R7,#01H
0119 120000      E     LCALL   _LCD_WriteControl
                                           ; SOURCE LINE # 77
011C 7BFF              MOV     R3,#0FFH
011E 7A00        R     MOV     R2,#HIGH ?SC_15
C51 COMPILER V9.51   MAIN                                                                  03/02/2014 13:58:57 PAGE 6   

0120 7900        R     MOV     R1,#LOW ?SC_15
0122 120000      E     LCALL   _LCD_PrintString
0125         ?C0008:
                                           ; SOURCE LINE # 78
                                           ; SOURCE LINE # 79
                                           ; SOURCE LINE # 81
0125 80FE              SJMP    ?C0008
                                           ; SOURCE LINE # 82
                                           ; SOURCE LINE # 83
0127         ?C0010:
                                           ; SOURCE LINE # 85
                                           ; SOURCE LINE # 86
                                           ; SOURCE LINE # 88
0127 80FE              SJMP    ?C0010
0129 22                RET     
             ; FUNCTION main (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    298    ----
   CONSTANT SIZE    =     59    ----
   XDATA SIZE       =   ----      19
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
